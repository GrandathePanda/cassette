{"version":3,"sources":["webpack://cassetteCore/webpack/universalModuleDefinition","webpack://cassetteCore/webpack/bootstrap","webpack://cassetteCore/external {\"root\":\"PropTypes\",\"commonjs\":\"prop-types\",\"commonjs2\":\"prop-types\",\"amd\":\"prop-types\"}","webpack://cassetteCore/external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://cassetteCore/./packages/core/node_modules/array-find-index/index.js","webpack://cassetteCore/./packages/core/src/PlayerContext.js","webpack://cassetteCore/./packages/core/src/GroupContext.js","webpack://cassetteCore/./packages/core/src/constants.js","webpack://cassetteCore/./packages/core/src/utils/console.js","webpack://cassetteCore/./packages/core/src/PlayerPropTypes.js","webpack://cassetteCore/./packages/core/src/factories/createCustomMediaElement.js","webpack://cassetteCore/./packages/core/src/utils/ShuffleManager.js","webpack://cassetteCore/./packages/core/src/utils/isPlaylistValid.js","webpack://cassetteCore/./packages/core/src/utils/getTrackSources.js","webpack://cassetteCore/./packages/core/src/utils/findTrackIndexByUrl.js","webpack://cassetteCore/./packages/core/src/utils/snapshot.js","webpack://cassetteCore/./packages/core/src/utils/getSourceList.js","webpack://cassetteCore/./packages/core/src/utils/getTimeRangesArray.js","webpack://cassetteCore/./packages/core/src/utils/getRepeatStrategy.js","webpack://cassetteCore/./packages/core/src/utils/convertToNumberWithinIntervalBounds.js","webpack://cassetteCore/./packages/core/src/utils/streamVideoElementToCanvas.js","webpack://cassetteCore/./packages/core/src/PlayerContextProvider.js","webpack://cassetteCore/./packages/core/src/PlayerContextGroup.js","webpack://cassetteCore/./packages/core/src/FullscreenContext.js","webpack://cassetteCore/./packages/core/src/FullscreenContextProvider.js","webpack://cassetteCore/./packages/core/src/playerContextFilter.js","webpack://cassetteCore/./packages/core/src/index.js"],"names":["PlayerContext","createContext","displayName","GroupContext","repeatStrategyOptions","log","console","bind","logError","error","logWarning","warn","requiredOnlyUnlessHasProp","propType","altPropName","warnedAboutDefiningBoth","validate","props","propName","componentName","rest","isRequired","Error","controlKeyword","PropTypes","oneOf","control","oneOfType","func","crossOriginAttribute","repeatStrategy","mediaSource","shape","src","string","type","mediaSessionAction","mediaSessionArtwork","sizes","track","url","sources","arrayOf","title","artist","album","artwork","meta","object","progressDirection","seekMode","aspectRatio","prop","undefined","split","length","some","isNaN","loopchange","srcrequest","createCustomMediaElement","media","document","createElement","MutationObserver","dispatchEvent","Event","observe","attributeFilter","Object","defineProperty","get","currentSrc","set","e","srcRequested","ShuffleManager","list","options","_list","_forwardStack","_backStack","_currentItem","_allowBackShuffle","Boolean","allowBackShuffle","findNextItem","currentIndex","setCurrentIndex","_findNextItem","findPreviousItem","pickNextItem","index","push","setList","setOptions","keys","o","item","clear","_goForward","n","forwardStack","backStack","currentItem","i","pop","_allItemsMatch","allowMore","indexOf","nextItem","Math","floor","random","isPlaylistValid","playlist","blankSources","getTrackSources","findTrackIndexByUrl","arrayFindIndex","source","getStateSnapshot","state","paused","currentTime","activeTrackIndex","volume","muted","loop","cycle","shuffle","playbackRate","__playlist__","__unstable__","activeTrackSrc","restoreStateFromSnapshot","snapshot","restoredStateValues","awaitingPlay","useCurrentTime","newTrackIndex","getSourceList","map","_","getTimeRangesArray","timeRangesObj","timeRangesArray","Array","start","end","getRepeatStrategy","convertToNumberWithinIntervalBounds","number","min","max","Infinity","streamVideoElementToCanvas","videoElement","canvas","callback","ctx","getContext","requestId","widthSet","heightSet","placeholderImage","requestAnimationFrame","streamToCanvas","endStream","cancelAnimationFrame","setCanvasSize","width","height","setPlaceholderImage","img","videoWidth","videoHeight","imageElement","imageWidth","imageHeight","targetWidth","targetHeight","isVideo","naturalWidth","naturalHeight","drawImage","playErrorHandler","err","name","warningMessage","Date","toLocaleTimeString","supportableMediaSessionActions","HAVE_NOTHING","defaultState","seekPreviewTime","seekInProgress","awaitingResumeOnSeekComplete","duration","bufferedRanges","playedRanges","seekableRanges","stalled","getGoToTrackState","prevState","shouldPlay","isNewTrack","trackLoading","startingTrackIndex","startingTime","defaultVolume","defaultMuted","defaultRepeatStrategy","defaultShuffle","defaultPlaybackRate","setVolumeInProgress","autoplay","initialStateSnapshot","lastStableVolume","shuffler","setMediaElementRef","togglePause","selectTrackIndex","forwardSkip","backSkip","seekPreview","seekComplete","setVolume","setVolumeComplete","toggleMuted","toggleShuffle","setRepeatStrategy","setPlaybackRate","pipeVideoStreamToCanvas","handleMediaPlay","handleMediaPause","handleMediaSrcrequest","handleMediaEnded","handleMediaStalled","handleMediaCanplaythrough","handleMediaTimeupdate","handleMediaLoadedmetadata","handleMediaVolumechange","handleMediaDurationchange","handleMediaProgress","handleMediaLoopchange","handleMediaRatechange","componentDidMount","readyState","addEventListener","setState","delayTimeout","setTimeout","autoplayDelayInSeconds","getDerivedStateFromProps","nextProps","newPlaylist","baseNewState","prevSources","currentSources","componentDidUpdate","prevProps","newSources","load","stealMediaSession","clearTimeout","snapshotUpdateTimeout","onStateSnapshot","componentWillUnmount","removeEventListener","gapLengthTimeout","ref","mediaElementRef","window","MediaSession","navigator","mediaSession","metadata","MediaMetadata","supportedMediaSessionActions","action","seekLength","mediaSessionSeekLengthInSeconds","forEach","handler","setActionHandler","s","loadFirstTrackOnPlaylistComplete","goToTrack","gapLengthInSeconds","played","buffered","seekable","value","pause","playPromise","play","catch","Promise","reject","stayOnBackSkipThreshold","previousItem","targetTime","baseStateUpdate","ended","volumeInBounds","rate","getControlProps","playerContext","onTogglePause","onSelectTrackIndex","onBackSkip","onForwardSkip","onSeekPreview","onSeekComplete","onSetVolume","onSetVolumeComplete","onToggleMuted","onToggleShuffle","onSetRepeatStrategy","onSetPlaybackRate","key","render","crossOrigin","children","PlayerContextProvider","propTypes","bool","maintainPlaybackRate","node","defaultProps","groupContext","registerMediaElement","mediaElement","unregisterMediaElement","groupProps","PlayerContextGroupMember","PlayerContextGroupConsumer","enforceOneMediaSourceOnly","mediaElements","elem","concat","filter","element","target","PlayerContextGroup","FullscreenContext","fullscreen","requestFullscreen","requestExitFullscreen","fullscreenStyle","handleFullscreenChange","fullscreenElement","fullscreenEnabled","webkitRequestFullscreen","mozRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","mozExitFullscreen","documentFullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","getFullscreenContext","fullscreenContext","FullscreenContextProvider","playerContextFilter","component","contextPropNames","warned","childName","PlayerContextFilter","childProps","hasOwnProperty","PlayerContextConsumer","Consumer","FullscreenContextConsumer"],"mappings":"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","file":"es5/cassette-core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"prop-types\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"prop-types\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cassetteCore\"] = factory(require(\"prop-types\"), require(\"react\"));\n\telse\n\t\troot[\"cassetteCore\"] = factory(root[\"PropTypes\"], root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","'use strict';\nmodule.exports = function (arr, predicate, ctx) {\n\tif (typeof Array.prototype.findIndex === 'function') {\n\t\treturn arr.findIndex(predicate, ctx);\n\t}\n\n\tif (typeof predicate !== 'function') {\n\t\tthrow new TypeError('predicate must be a function');\n\t}\n\n\tvar list = Object(arr);\n\tvar len = list.length;\n\n\tif (len === 0) {\n\t\treturn -1;\n\t}\n\n\tfor (var i = 0; i < len; i++) {\n\t\tif (predicate.call(ctx, list[i], i, list)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n};\n","import { createContext } from 'react';\n\nconst PlayerContext = createContext(null);\nPlayerContext.displayName = 'PlayerContext';\n\nexport default PlayerContext;\n","import { createContext } from 'react';\n\nconst GroupContext = createContext(null);\nGroupContext.displayName = 'GroupContext';\n\nexport default GroupContext;\n","export const repeatStrategyOptions = ['none', 'playlist', 'track'];\n","/* eslint-disable no-console */\n\nconst log = console.log.bind(console);\n\nexport const logError = console.error ? console.error.bind(console) : log;\nexport const logWarning = console.warn ? console.warn.bind(console) : log;\n","import PropTypes from 'prop-types';\n\nimport { repeatStrategyOptions } from './constants';\nimport { logWarning } from './utils/console';\n\nfunction requiredOnlyUnlessHasProp(propType, altPropName) {\n  let warnedAboutDefiningBoth = false;\n  function validate(props, propName, componentName, ...rest) {\n    if (propName in props) {\n      if (!warnedAboutDefiningBoth && altPropName in props) {\n        logWarning(\n          `Do not define both the '${propName}' and '${altPropName}' props.`\n        );\n        warnedAboutDefiningBoth = true;\n      }\n      return propType.isRequired(props, propName, componentName, ...rest);\n    }\n    if (!(altPropName in props)) {\n      return new Error(\n        `If the '${altPropName}' prop is not defined, '${propName}' must be.`\n      );\n    }\n  }\n  return validate;\n}\n\nexport const controlKeyword = PropTypes.oneOf([\n  'playpause',\n  'backskip',\n  'forwardskip',\n  'volume',\n  'mute',\n  'repeat',\n  'shuffle',\n  'progress',\n  'progressdisplay',\n  'fullscreen',\n  'spacer'\n]);\n\nexport const control = PropTypes.oneOfType([PropTypes.func, controlKeyword]);\n\nexport const crossOriginAttribute = PropTypes.oneOf([\n  'anonymous',\n  'use-credentials'\n]);\n\nexport const repeatStrategy = PropTypes.oneOf(repeatStrategyOptions);\n\nexport const mediaSource = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n});\n\nexport const mediaSessionAction = PropTypes.oneOf([\n  'play',\n  'pause',\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n]);\n\nexport const mediaSessionArtwork = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  type: PropTypes.string\n});\n\nexport const track = PropTypes.shape({\n  url: requiredOnlyUnlessHasProp(PropTypes.string, 'sources'),\n  sources: requiredOnlyUnlessHasProp(\n    PropTypes.arrayOf(mediaSource.isRequired),\n    'url'\n  ),\n  title: PropTypes.string.isRequired,\n  artist: PropTypes.string,\n  album: PropTypes.string,\n  artwork: PropTypes.arrayOf(mediaSessionArtwork.isRequired),\n  meta: PropTypes.object\n});\n\nexport const progressDirection = PropTypes.oneOf([\n  'left',\n  'right',\n  'up',\n  'down'\n]);\n\nexport const seekMode = PropTypes.oneOf(['paused', 'immediate', 'onrelease']);\n\nexport function aspectRatio(props, propName) {\n  const prop = props[propName];\n  if (prop === undefined) {\n    return;\n  }\n  if (\n    typeof prop !== 'string' ||\n    prop.split(':').length !== 2 ||\n    prop.split(':').some(isNaN)\n  ) {\n    return new Error(\n      `The ${propName} prop should be a string of the form 'x:y'. Example: 16:9`\n    );\n  }\n}\n","const loopchange = 'loopchange';\nconst srcrequest = 'srcrequest';\n\nfunction createCustomMediaElement(media = document.createElement('media')) {\n  new MutationObserver(() => {\n    media.dispatchEvent(new Event(loopchange));\n  }).observe(media, {\n    attributeFilter: ['loop']\n  });\n  // Don't let the media src property get modified directly.\n  // Instead, when it does get set, dispatch an event to be\n  // handled in a way that doesn't conflict with the loaded\n  // playlist.\n  Object.defineProperty(media, 'src', {\n    get: () => media.currentSrc,\n    set: src => {\n      const e = new Event(srcrequest);\n      e.srcRequested = src;\n      media.dispatchEvent(e);\n    }\n  });\n  return media;\n}\n\nexport default createCustomMediaElement;\n","/* ShuffleManager\n *\n * Manages navigation throughout a list which is:\n * - Sourced from another provided list\n * - In random order (except to avoid consecutive duplicates)\n * - Extended endlessly on-the-fly, as needed\n * - Able to have future history overwritten by non-random choices\n * - Able to swap source lists and maintain shuffle order for common members\n */\n\nexport class ShuffleManager {\n  constructor(list, options = {}) {\n    this._list = list;\n    this._forwardStack = [];\n    this._backStack = [];\n    this._currentItem = undefined;\n\n    this._allowBackShuffle = Boolean(options.allowBackShuffle);\n  }\n\n  findNextItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._forwardStack,\n      this._backStack,\n      this._currentItem,\n      true\n    );\n    return this._currentItem;\n  }\n\n  findPreviousItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._backStack,\n      this._forwardStack,\n      this._currentItem,\n      this._allowBackShuffle\n    );\n    return this._currentItem;\n  }\n\n  pickNextItem(index, currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    if (this._list[index] === undefined) {\n      return undefined;\n    }\n    if (this._currentItem !== undefined) {\n      this._backStack.push(this._currentItem);\n    }\n    this._forwardStack.length = 0;\n    this._currentItem = this._list[index];\n    return this._currentItem;\n  }\n\n  setList(list) {\n    this._list = list;\n  }\n\n  setOptions(options) {\n    for (const o of Object.keys(options)) {\n      switch (o) {\n        case 'allowBackShuffle':\n          this[`_${o}`] = Boolean(options[o]);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  setCurrentIndex(currentIndex) {\n    const item = this._list[currentIndex];\n    if (this._currentItem !== item) {\n      this.clear();\n      this._currentItem = item;\n    }\n  }\n\n  clear() {\n    this._forwardStack.length = 0;\n    this._backStack.length = 0;\n    this._currentItem = undefined;\n  }\n}\n\nfunction _goForward(n, forwardStack, backStack, currentItem) {\n  let item = currentItem;\n  for (let i = 0; i < n; i++) {\n    if (!forwardStack.length) {\n      // rollback before erroring (note stack reversal)\n      _goForward(i, backStack, forwardStack, item);\n      throw `Moving ${n} places was not possible!`;\n    }\n    backStack.push(item);\n    item = forwardStack.pop();\n  }\n  return item;\n}\n\nfunction _allItemsMatch(list, item) {\n  if (!list.length) {\n    return false;\n  }\n  for (let i = 0; i < list.length; i++) {\n    if (item !== list[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction _findNextItem(list, forwardStack, backStack, currentItem, allowMore) {\n  let item = currentItem;\n  if (!list.length) {\n    return undefined;\n  }\n  for (let i = 1; i <= forwardStack.length; i++) {\n    if (list.indexOf(forwardStack[forwardStack.length - i]) !== -1) {\n      return _goForward(i, forwardStack, backStack, item);\n    }\n  }\n  if (!allowMore) {\n    return undefined;\n  }\n  if (_allItemsMatch(list, item)) {\n    // we can serve this as our \"next\" item but we\n    // won't modify our history since it's the same.\n    return item;\n  }\n  let nextItem;\n  do {\n    nextItem = list[Math.floor(Math.random() * list.length)];\n  } while (item === nextItem || nextItem === undefined);\n  // if we're skipping items that aren't in our current list we may\n  // have some items in our forwardStack - make sure we move to the front.\n  item = _goForward(forwardStack.length, forwardStack, backStack, item);\n  if (item !== undefined) {\n    backStack.push(item);\n  }\n  return nextItem;\n}\n\nexport default ShuffleManager;\n","function isPlaylistValid(playlist) {\n  return Boolean(playlist && playlist.length);\n}\n\nexport default isPlaylistValid;\n","import isPlaylistValid from './isPlaylistValid';\n\nconst blankSources = [{ src: '' }];\n\nfunction getTrackSources(playlist, index) {\n  if (!isPlaylistValid(playlist)) {\n    return blankSources;\n  }\n  const { sources, url } = playlist[index];\n  if (sources) {\n    return sources.length ? sources : blankSources;\n  }\n  return [{ src: url }];\n}\n\nexport default getTrackSources;\n","import arrayFindIndex from 'array-find-index';\n\nfunction findTrackIndexByUrl(playlist, url) {\n  return arrayFindIndex(playlist, track => {\n    if (track.sources) {\n      return arrayFindIndex(track.sources, source => source.src === url) !== -1;\n    }\n    return track.url && url === track.url;\n  });\n}\n\nexport default findTrackIndexByUrl;\n","import isPlaylistValid from './isPlaylistValid';\nimport getTrackSources from './getTrackSources';\nimport findTrackIndexByUrl from './findTrackIndexByUrl';\n\nexport function getStateSnapshot(state) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    __playlist__\n  } = state;\n  return {\n    __unstable__: {\n      paused,\n      currentTime,\n      activeTrackIndex,\n      volume,\n      muted,\n      loop,\n      cycle,\n      shuffle,\n      playbackRate,\n      activeTrackSrc: isPlaylistValid(__playlist__)\n        ? getTrackSources(__playlist__, activeTrackIndex)[0].src\n        : null\n    }\n  };\n}\n\nexport function restoreStateFromSnapshot(snapshot, props) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    activeTrackSrc\n  } = snapshot.__unstable__;\n  const restoredStateValues = {};\n  if (isPlaylistValid(props.playlist) && typeof paused === 'boolean') {\n    // using awaitingPlay instead of paused triggers an animation\n    restoredStateValues.awaitingPlay = !paused;\n  }\n  if (typeof volume === 'number' && volume >= 0 && volume <= 1) {\n    restoredStateValues.volume = volume;\n  }\n  if (typeof muted === 'boolean') {\n    restoredStateValues.muted = muted;\n  }\n  if (typeof loop === 'boolean') {\n    restoredStateValues.loop = loop;\n  }\n  if (typeof cycle === 'boolean') {\n    restoredStateValues.cycle = cycle;\n  }\n  if (typeof shuffle === 'boolean') {\n    restoredStateValues.shuffle = shuffle;\n  }\n  if (typeof playbackRate === 'number') {\n    restoredStateValues.playbackRate = playbackRate;\n  }\n  let useCurrentTime = false;\n  if (\n    typeof activeTrackSrc === 'string' &&\n    typeof activeTrackIndex === 'number' &&\n    activeTrackIndex >= 0\n  ) {\n    // let's try staying on the same track index\n    const currentSrc = getTrackSources(props.playlist, activeTrackIndex)[0].src;\n    if (activeTrackSrc === currentSrc) {\n      restoredStateValues.activeTrackIndex = activeTrackIndex;\n      useCurrentTime = true;\n    } else {\n      /* if the track we were playing before is in the new playlist,\n       * update the activeTrackIndex.\n       */\n      const newTrackIndex = findTrackIndexByUrl(props.playlist, activeTrackSrc);\n      if (newTrackIndex !== -1) {\n        restoredStateValues.activeTrackIndex = newTrackIndex;\n        useCurrentTime = true;\n      }\n    }\n  }\n  if (useCurrentTime && typeof currentTime === 'number' && currentTime >= 0) {\n    restoredStateValues.currentTime = currentTime;\n  }\n  return restoredStateValues;\n}\n","import getTrackSources from './getTrackSources';\n\n// collapses playlist into flat list containing\n// the first source url for each track\nfunction getSourceList(playlist) {\n  return (playlist || []).map((_, i) => getTrackSources(playlist, i)[0].src);\n}\n\nexport default getSourceList;\n","function getTimeRangesArray(timeRangesObj) {\n  const timeRangesArray = Array(timeRangesObj.length);\n  for (let i = 0; i < timeRangesObj.length; i++) {\n    timeRangesArray[i] = {\n      start: timeRangesObj.start(i),\n      end: timeRangesObj.end(i)\n    };\n  }\n  return timeRangesArray;\n}\n\nexport default getTimeRangesArray;\n","function getRepeatStrategy(loop, cycle) {\n  if (loop) {\n    return 'track';\n  }\n  if (cycle) {\n    return 'playlist';\n  }\n  return 'none';\n}\n\nexport default getRepeatStrategy;\n","function convertToNumberWithinIntervalBounds(number, min, max) {\n  min = typeof min === 'number' ? min : -Infinity;\n  max = typeof max === 'number' ? max : Infinity;\n  return Math.max(min, Math.min(number, max));\n}\n\nexport default convertToNumberWithinIntervalBounds;\n","function streamVideoElementToCanvas(videoElement, canvas, callback) {\n  const ctx = canvas.getContext('2d');\n  let requestId = null;\n  let widthSet = null;\n  let heightSet = null;\n  let placeholderImage = null;\n\n  requestId = requestAnimationFrame(streamToCanvas);\n\n  return {\n    endStream() {\n      cancelAnimationFrame(requestId);\n    },\n    setCanvasSize(width, height) {\n      widthSet = width || null;\n      heightSet = height || null;\n    },\n    setPlaceholderImage(img) {\n      placeholderImage = img || null;\n    }\n  };\n\n  function streamToCanvas() {\n    const { videoWidth, videoHeight } = videoElement;\n\n    // we want to draw the current frame image from the video element\n    let imageElement = videoElement;\n    let imageWidth = videoWidth;\n    let imageHeight = videoHeight;\n    let targetWidth = videoWidth;\n    let targetHeight = videoHeight;\n    let isVideo = true;\n\n    // however if there's no video to display (usually means we're playing\n    // media) then we want to display a placeholder image, if available\n    if (!(targetWidth && targetHeight) && placeholderImage) {\n      imageElement = placeholderImage;\n      imageWidth = placeholderImage.naturalWidth;\n      imageHeight = placeholderImage.naturalHeight;\n      targetWidth = placeholderImage.naturalWidth;\n      targetHeight = placeholderImage.naturalHeight;\n      isVideo = false;\n    }\n\n    // figure out what resolution the drawn image should be\n    if (widthSet && heightSet) {\n      targetWidth = widthSet;\n      targetHeight = heightSet;\n    } else if (widthSet) {\n      targetWidth = widthSet;\n      targetHeight = (widthSet / imageWidth) * imageHeight;\n    } else if (heightSet) {\n      targetHeight = heightSet;\n      targetWidth = (heightSet / imageHeight) * imageWidth;\n    }\n\n    // resize the canvas to the draw resolution if it doesn't already match\n    if (canvas.width !== targetWidth || canvas.height !== targetHeight) {\n      canvas.width = targetWidth;\n      canvas.height = targetHeight;\n    }\n\n    // draw\n    ctx.drawImage(imageElement, 0, 0, targetWidth, targetHeight);\n\n    // let the callback handle any post-processing\n    if (callback) {\n      callback(ctx, isVideo);\n    }\n\n    requestId = requestAnimationFrame(streamToCanvas);\n  }\n}\n\nexport default streamVideoElementToCanvas;\n","import React, { Component, Fragment, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayFindIndex from 'array-find-index';\n\nimport PlayerContext from './PlayerContext';\nimport GroupContext from './GroupContext';\nimport * as PlayerPropTypes from './PlayerPropTypes';\nimport createCustomMediaElement from './factories/createCustomMediaElement';\nimport ShuffleManager from './utils/ShuffleManager';\nimport { getStateSnapshot, restoreStateFromSnapshot } from './utils/snapshot';\nimport getSourceList from './utils/getSourceList';\nimport getTrackSources from './utils/getTrackSources';\nimport getTimeRangesArray from './utils/getTimeRangesArray';\nimport findTrackIndexByUrl from './utils/findTrackIndexByUrl';\nimport isPlaylistValid from './utils/isPlaylistValid';\nimport getRepeatStrategy from './utils/getRepeatStrategy';\nimport convertToNumberWithinIntervalBounds from './utils/convertToNumberWithinIntervalBounds';\nimport streamVideoElementToCanvas from './utils/streamVideoElementToCanvas';\nimport { logError, logWarning } from './utils/console';\nimport { repeatStrategyOptions } from './constants';\n\nfunction playErrorHandler(err) {\n  logError(err);\n  if (err.name === 'NotAllowedError') {\n    const warningMessage =\n      'Media playback failed at ' +\n      new Date().toLocaleTimeString() +\n      '! (Perhaps autoplay is disabled in this browser.)';\n    logWarning(warningMessage);\n  }\n}\n\n// Existing Media Session API implementations have default handlers\n// for play/pause, and may yield unexpected behavior if custom\n// play/pause handlers are defined - so let's leave them be.\nconst supportableMediaSessionActions = [\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n];\n\n// media element readyState\nconst HAVE_NOTHING = 0;\n\nconst defaultState = {\n  // indicates whether media player should be paused\n  paused: true,\n  // elapsed time for active track, in seconds\n  currentTime: 0,\n  // The most recent targeted time, in seconds, for seek preview\n  seekPreviewTime: 0,\n  /* true if the user is currently dragging the mouse\n   * to seek a new track position\n   */\n  seekInProgress: false,\n  /* true if media was playing when seek previewing began,\n   * it was paused, and it should be resumed on seek\n   * complete\n   */\n  awaitingResumeOnSeekComplete: false,\n  // the duration in seconds of the loaded track\n  duration: 0,\n  // array describing the buffered ranges in the loaded track\n  bufferedRanges: [],\n  // array describing the already-played ranges in the loaded track\n  playedRanges: [],\n  // array describing the seekable ranges in the loaded track\n  seekableRanges: [],\n  // true if the media is currently stalled pending data buffering\n  stalled: false,\n  // true if the active track should play on the next componentDidUpdate\n  awaitingPlay: false\n};\n\n// assumes playlist is valid\nfunction getGoToTrackState(prevState, index, shouldPlay = true) {\n  const isNewTrack = prevState.activeTrackIndex !== index;\n  return {\n    activeTrackIndex: index,\n    trackLoading: isNewTrack,\n    currentTime: 0,\n    loop: isNewTrack ? false : prevState.loop,\n    awaitingPlay: Boolean(shouldPlay),\n    paused: !shouldPlay\n  };\n}\n\n/**\n * Wraps an area which shares a common [`playerContext`](#playercontext)\n */\nexport class PlayerContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...defaultState,\n      // index matching requested track (whether track has loaded or not)\n      activeTrackIndex: convertToNumberWithinIntervalBounds(\n        props.startingTrackIndex,\n        0\n      ),\n      // whether we're waiting on loading metadata for the active track\n      trackLoading: isPlaylistValid(props.playlist),\n      // the current timestamp on the active track in seconds\n      currentTime: convertToNumberWithinIntervalBounds(props.startingTime, 0),\n      // the latest volume of the media, between 0 and 1.\n      volume: convertToNumberWithinIntervalBounds(props.defaultVolume, 0, 1),\n      // true if the media has been muted\n      muted: props.defaultMuted,\n      // whether to loop the active track\n      loop: props.defaultRepeatStrategy === 'track',\n      // true if playlist should continue at start after completion\n      cycle: props.defaultRepeatStrategy === 'playlist',\n      // whether to randomly pick next track from playlist after one finishes\n      shuffle: props.defaultShuffle,\n      // Rate at which media should be played. 1.0 is normal speed.\n      playbackRate: props.defaultPlaybackRate,\n      // true if user is currently dragging mouse to change the volume\n      setVolumeInProgress: false,\n      // initialize awaitingPlay from autoplay prop\n      awaitingPlay: props.autoplay && isPlaylistValid(props.playlist),\n      // playlist prop copied to state (for getDerivedStateFromProps)\n      __playlist__: props.playlist,\n      // load overrides from previously-captured state snapshot\n      ...(props.initialStateSnapshot\n        ? restoreStateFromSnapshot(props.initialStateSnapshot, props)\n        : {})\n    };\n\n    // volume at last time we were unmuted and not actively setting volume\n    this.lastStableVolume = this.state.volume;\n\n    // used to keep track of play history when we are shuffling\n    this.shuffler = new ShuffleManager(getSourceList(props.playlist), {\n      allowBackShuffle: props.allowBackShuffle\n    });\n\n    // html media element used for playback\n    this.media = null;\n\n    this.setMediaElementRef = this.setMediaElementRef.bind(this);\n\n    // bind callback methods to pass to descendant elements\n    this.togglePause = this.togglePause.bind(this);\n    this.selectTrackIndex = this.selectTrackIndex.bind(this);\n    this.forwardSkip = this.forwardSkip.bind(this);\n    this.backSkip = this.backSkip.bind(this);\n    this.seekPreview = this.seekPreview.bind(this);\n    this.seekComplete = this.seekComplete.bind(this);\n    this.setVolume = this.setVolume.bind(this);\n    this.setVolumeComplete = this.setVolumeComplete.bind(this);\n    this.toggleMuted = this.toggleMuted.bind(this);\n    this.toggleShuffle = this.toggleShuffle.bind(this);\n    this.setRepeatStrategy = this.setRepeatStrategy.bind(this);\n    this.setPlaybackRate = this.setPlaybackRate.bind(this);\n    this.pipeVideoStreamToCanvas = this.pipeVideoStreamToCanvas.bind(this);\n\n    // bind media event handlers\n    this.handleMediaPlay = this.handleMediaPlay.bind(this);\n    this.handleMediaPause = this.handleMediaPause.bind(this);\n    this.handleMediaSrcrequest = this.handleMediaSrcrequest.bind(this);\n    this.handleMediaEnded = this.handleMediaEnded.bind(this);\n    this.handleMediaStalled = this.handleMediaStalled.bind(this);\n    this.handleMediaCanplaythrough = this.handleMediaCanplaythrough.bind(this);\n    this.handleMediaTimeupdate = this.handleMediaTimeupdate.bind(this);\n    this.handleMediaLoadedmetadata = this.handleMediaLoadedmetadata.bind(this);\n    this.handleMediaVolumechange = this.handleMediaVolumechange.bind(this);\n    this.handleMediaDurationchange = this.handleMediaDurationchange.bind(this);\n    this.handleMediaProgress = this.handleMediaProgress.bind(this);\n    this.handleMediaLoopchange = this.handleMediaLoopchange.bind(this);\n    this.handleMediaRatechange = this.handleMediaRatechange.bind(this);\n  }\n\n  componentDidMount() {\n    const media = (this.media = createCustomMediaElement(this.media));\n\n    // initialize media properties\n    if (media.readyState !== HAVE_NOTHING) {\n      // we only set the currentTime now if we're beyond the\n      // HAVE_NOTHING readyState. Otherwise we'll let this get\n      // set when the loadedmetadata event fires. This avoids\n      // an issue where some browsers ignore or delay currentTime\n      // updates when in the HAVE_NOTHING state.\n      media.currentTime = this.state.currentTime;\n    }\n    media.volume = this.state.volume;\n    media.muted = this.state.muted;\n    media.defaultPlaybackRate = this.props.defaultPlaybackRate;\n    media.playbackRate = this.state.playbackRate;\n\n    // add special event listeners on the media element\n    media.addEventListener('srcrequest', this.handleMediaSrcrequest);\n    media.addEventListener('loopchange', this.handleMediaLoopchange);\n\n    if (this.state.awaitingPlay) {\n      this.setState({\n        awaitingPlay: false\n      });\n      this.delayTimeout = setTimeout(() => {\n        this.togglePause(false);\n      }, this.props.autoplayDelayInSeconds * 1000);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const newPlaylist = nextProps.playlist;\n\n    if (newPlaylist === prevState.__playlist__) {\n      // reference comparison is equal so we'll\n      // assume the playlist is unchanged.\n      return null;\n    }\n\n    const baseNewState = {\n      __playlist__: newPlaylist\n    };\n\n    // check if the new playlist is invalid\n    if (!isPlaylistValid(newPlaylist)) {\n      return {\n        ...defaultState,\n        ...baseNewState,\n        activeTrackIndex: 0,\n        trackLoading: false\n      };\n    }\n\n    // check if the activeTrackIndex doesn't need to be updated\n    const prevSources = getTrackSources(\n      prevState.__playlist__,\n      prevState.activeTrackIndex\n    );\n    // the sources if we stay on the same track index\n    const currentSources = getTrackSources(\n      newPlaylist,\n      prevState.activeTrackIndex\n    );\n    // non-comprehensive but probably accurate check\n    if (prevSources[0].src === currentSources[0].src) {\n      // our active track index already matches\n      return baseNewState;\n    }\n\n    /* if the track we're already playing is in the new playlist, update the\n     * activeTrackIndex.\n     */\n    const newTrackIndex = findTrackIndexByUrl(newPlaylist, prevSources[0].src);\n    if (newTrackIndex !== -1) {\n      return {\n        ...baseNewState,\n        activeTrackIndex: newTrackIndex\n      };\n    }\n\n    // if not, then load the first track in the new playlist, and pause.\n    return {\n      ...baseNewState,\n      ...getGoToTrackState(prevState, 0, false)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.media.defaultPlaybackRate = this.props.defaultPlaybackRate;\n\n    this.shuffler.setList(getSourceList(this.props.playlist));\n    this.shuffler.setOptions({\n      allowBackShuffle: this.props.allowBackShuffle\n    });\n\n    const prevSources = getTrackSources(\n      prevProps.playlist,\n      prevState.activeTrackIndex\n    );\n    const newSources = getTrackSources(\n      this.props.playlist,\n      this.state.activeTrackIndex\n    );\n    if (prevSources[0].src !== newSources[0].src) {\n      // cancel playback and re-scan current sources\n      this.media.load();\n\n      if (!this.state.shuffle) {\n        // after toggling off shuffle, we defer clearing the shuffle\n        // history until we actually change tracks - if the user quickly\n        // toggles  shuffle off then back on again, we don't want to have\n        // lost our history.\n        this.shuffler.clear();\n      }\n    }\n\n    if (prevProps !== this.props && !this.media.paused) {\n      // update running media session based on new props\n      this.stealMediaSession();\n    }\n\n    if (this.state.awaitingPlay) {\n      this.setState({\n        awaitingPlay: false\n      });\n      // media.currentSrc is updated asynchronously so we should\n      // play async to avoid weird intermediate state issues\n      setTimeout(() => {\n        this.togglePause(false);\n      });\n    }\n\n    clearTimeout(this.snapshotUpdateTimeout);\n    this.snapshotUpdateTimeout = setTimeout(() => {\n      if (this.props.onStateSnapshot) {\n        this.props.onStateSnapshot(getStateSnapshot(this.state));\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    const { media } = this;\n    // remove special event listeners on the media element\n    media.removeEventListener('srcrequest', this.handleMediaSrcrequest);\n    media.removeEventListener('loopchange', this.handleMediaLoopchange);\n\n    clearTimeout(this.gapLengthTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  setMediaElementRef(ref) {\n    this.media = ref;\n    if (typeof this.props.mediaElementRef === 'function') {\n      this.props.mediaElementRef(ref);\n    }\n  }\n\n  stealMediaSession() {\n    if (\n      // eslint-disable-next-line no-undef\n      !(window.MediaSession && navigator.mediaSession instanceof MediaSession)\n    ) {\n      return;\n    }\n    // eslint-disable-next-line no-undef\n    navigator.mediaSession.metadata = new MediaMetadata(\n      this.props.playlist[this.state.activeTrackIndex]\n    );\n    supportableMediaSessionActions\n      .map(action => {\n        if (this.props.supportedMediaSessionActions.indexOf(action) === -1) {\n          return null;\n        }\n        const seekLength = this.props.mediaSessionSeekLengthInSeconds;\n        switch (action) {\n          case 'play':\n            return this.togglePause.bind(this, false);\n          case 'pause':\n            return this.togglePause.bind(this, true);\n          case 'previoustrack':\n            return this.backSkip;\n          case 'nexttrack':\n            return this.forwardSkip;\n          case 'seekbackward':\n            return () => (this.media.currentTime -= seekLength);\n          case 'seekforward':\n            return () => (this.media.currentTime += seekLength);\n          default:\n            return undefined;\n        }\n      })\n      .forEach((handler, i) => {\n        navigator.mediaSession.setActionHandler(\n          supportableMediaSessionActions[i],\n          handler\n        );\n      });\n  }\n\n  pipeVideoStreamToCanvas(canvas, callback) {\n    return streamVideoElementToCanvas(this.media, canvas, callback);\n  }\n\n  handleMediaPlay() {\n    this.setState(state => (state.paused === false ? null : { paused: false }));\n    this.stealMediaSession();\n  }\n\n  handleMediaPause() {\n    this.setState(state => (state.paused === true ? null : { paused: true }));\n  }\n\n  handleMediaSrcrequest(e) {\n    const { playlist } = this.props;\n    const sources = getTrackSources(playlist, this.state.activeTrackIndex);\n    if (arrayFindIndex(sources, s => s.src === e.srcRequested) !== -1) {\n      // we're good! nothing to update.\n      return;\n    }\n    // looks like 'src' was set from outside our component.\n    // let's see if we can use it.\n    const newTrackIndex = findTrackIndexByUrl(playlist, e.srcRequested);\n    if (newTrackIndex === -1) {\n      logError(\n        `Source '${e.srcRequested}' does not exist in the loaded playlist. ` +\n          `Make sure you've updated the 'playlist' prop to ` +\n          `PlayerContextProvider before you select this track!`\n      );\n      return;\n    }\n    this.selectTrackIndex(newTrackIndex);\n  }\n\n  handleMediaEnded() {\n    if (this.state.seekInProgress) {\n      // nothing to do if we're in the middle of a seek\n      // (this can happen if we're in seekMode: immediate)\n      return;\n    }\n    clearTimeout(this.gapLengthTimeout);\n    const { playlist, loadFirstTrackOnPlaylistComplete } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    const { cycle, activeTrackIndex } = this.state;\n    if (!cycle && activeTrackIndex + 1 >= playlist.length) {\n      if (loadFirstTrackOnPlaylistComplete) {\n        this.goToTrack(0, false);\n      }\n      return;\n    }\n    this.gapLengthTimeout = setTimeout(\n      this.forwardSkip,\n      this.props.gapLengthInSeconds * 1000\n    );\n  }\n\n  handleMediaStalled() {\n    this.setState(state => (state.stalled === true ? null : { stalled: true }));\n  }\n\n  handleMediaCanplaythrough() {\n    this.setState(\n      state => (state.stalled === false ? null : { stalled: false })\n    );\n  }\n\n  handleMediaTimeupdate() {\n    const { currentTime, played } = this.media;\n    this.setState({\n      currentTime,\n      playedRanges: getTimeRangesArray(played)\n    });\n  }\n\n  handleMediaLoadedmetadata() {\n    if (this.media.currentTime !== this.state.currentTime) {\n      this.media.currentTime = this.state.currentTime;\n    }\n    this.setState(\n      state => (state.trackLoading === false ? null : { trackLoading: false })\n    );\n  }\n\n  handleMediaVolumechange() {\n    const { volume, muted } = this.media;\n    this.setState({ volume, muted });\n  }\n\n  handleMediaDurationchange() {\n    const { duration } = this.media;\n    this.setState({ duration });\n  }\n\n  handleMediaProgress() {\n    this.setState({\n      bufferedRanges: getTimeRangesArray(this.media.buffered),\n      seekableRanges: getTimeRangesArray(this.media.seekable)\n    });\n  }\n\n  handleMediaLoopchange() {\n    const { loop } = this.media;\n    this.setState(state => (state.loop === loop ? null : { loop }));\n  }\n\n  handleMediaRatechange() {\n    const { playbackRate } = this.media;\n    this.setState(\n      state => (state.playbackRate === playbackRate ? null : { playbackRate })\n    );\n  }\n\n  togglePause(value) {\n    clearTimeout(this.delayTimeout);\n    const pause = typeof value === 'boolean' ? value : !this.state.paused;\n    if (pause) {\n      this.media.pause();\n      return;\n    }\n    if (!this.media.currentSrc) {\n      return;\n    }\n    try {\n      const playPromise = this.media.play();\n      if (playPromise && typeof playPromise.catch === 'function') {\n        playPromise\n          .catch(err => {\n            // AbortError is pretty much always called because we're skipping\n            // tracks quickly or hitting pause before a track has a chance to\n            // play. It's pretty safe to just ignore these error messages.\n            if (err.name !== 'AbortError') {\n              return Promise.reject(err);\n            }\n          })\n          .catch(playErrorHandler);\n      }\n    } catch (err) {\n      playErrorHandler(err);\n    }\n  }\n\n  // assumes playlist is valid - don't call without checking\n  goToTrack(index, shouldPlay = true) {\n    clearTimeout(this.delayTimeout);\n    this.setState(state => getGoToTrackState(state, index, shouldPlay));\n  }\n\n  selectTrackIndex(index) {\n    const { playlist } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    if (index < 0 || index > playlist.length) {\n      logWarning(`Playlist index ${index} is out of bounds!`);\n      return;\n    }\n    if (this.state.shuffle) {\n      this.shuffler.pickNextItem(index, this.state.activeTrackIndex);\n    }\n    this.goToTrack(index);\n  }\n\n  backSkip() {\n    const { playlist, stayOnBackSkipThreshold } = this.props;\n    const { media } = this;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      media.currentTime >= stayOnBackSkipThreshold ||\n      (!cycle && activeTrackIndex < 1)\n    ) {\n      media.currentTime = 0;\n      return;\n    }\n    let index;\n    if (shuffle) {\n      const previousItem = this.shuffler.findPreviousItem(activeTrackIndex);\n      if (previousItem === undefined) {\n        // if we aren't allowing backShuffle then we'll hit a stopping point.\n        media.currentTime = 0;\n        return;\n      }\n      index = findTrackIndexByUrl(playlist, previousItem);\n    } else {\n      index = activeTrackIndex - 1;\n      if (index < 0) {\n        index = playlist.length - 1;\n      }\n    }\n    this.goToTrack(index);\n  }\n\n  forwardSkip() {\n    const { playlist } = this.props;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      (!cycle && activeTrackIndex + 1 >= playlist.length)\n    ) {\n      return;\n    }\n    let index;\n    if (shuffle) {\n      index = findTrackIndexByUrl(\n        playlist,\n        this.shuffler.findNextItem(activeTrackIndex)\n      );\n    } else {\n      index = activeTrackIndex + 1;\n      if (index >= playlist.length) {\n        index = 0;\n      }\n    }\n    this.goToTrack(index);\n  }\n\n  seekPreview(targetTime) {\n    if (!isPlaylistValid(this.props.playlist)) {\n      return;\n    }\n    const baseStateUpdate = {\n      seekPreviewTime: targetTime,\n      seekInProgress: true\n    };\n    switch (this.props.seekMode) {\n      case 'paused':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true\n        }));\n        this.media.currentTime = targetTime;\n        if (!this.state.paused) {\n          this.togglePause(true);\n        }\n        break;\n      case 'immediate':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true\n        }));\n        this.media.currentTime = targetTime;\n        if (this.state.awaitingResumeOnSeekComplete && !this.media.ended) {\n          // if we earlier encountered an 'ended' state,\n          // un-pausing becomes necessary to resume playback\n          this.togglePause(false);\n        }\n        break;\n      case 'onrelease':\n        this.setState(baseStateUpdate);\n        break;\n    }\n  }\n\n  seekComplete() {\n    const { seekPreviewTime, awaitingResumeOnSeekComplete } = this.state;\n    const baseStateUpdate = {\n      seekInProgress: false,\n      awaitingResumeOnSeekComplete: false\n    };\n    if (isNaN(seekPreviewTime)) {\n      this.setState(baseStateUpdate);\n      return;\n    }\n    this.setState({\n      ...baseStateUpdate,\n      /* we'll update currentTime on the media listener hook anyway,\n       * but that might not happen for a bit... so the optimistic update\n       * helps us avoid the progress bar jumping around and confusing the user.\n       * https://github.com/benwiley4000/cassette/issues/209\n       */\n      currentTime: seekPreviewTime\n    });\n    this.media.currentTime = seekPreviewTime;\n    if (awaitingResumeOnSeekComplete) {\n      if (this.media.ended) {\n        this.forwardSkip();\n      } else {\n        this.togglePause(false);\n      }\n    }\n  }\n\n  setVolume(volume) {\n    if (!this.state.setVolumeInProgress) {\n      this.setState({\n        setVolumeInProgress: true\n      });\n    }\n    const volumeInBounds = convertToNumberWithinIntervalBounds(volume, 0, 1);\n    this.media.muted = volumeInBounds === 0 ? true : false;\n    this.media.volume = volumeInBounds;\n  }\n\n  setVolumeComplete() {\n    this.setState({\n      setVolumeInProgress: false\n    });\n    if (!this.media.muted) {\n      this.lastStableVolume = this.media.volume;\n    }\n  }\n\n  toggleMuted(value) {\n    const muted = typeof value === 'boolean' ? value : !this.state.muted;\n    this.media.muted = muted;\n    if (!muted) {\n      this.media.volume = this.lastStableVolume;\n    }\n  }\n\n  toggleShuffle(value) {\n    const shuffle = typeof value === 'boolean' ? value : !this.state.shuffle;\n    this.setState({ shuffle });\n  }\n\n  setRepeatStrategy(repeatStrategy) {\n    if (repeatStrategyOptions.indexOf(repeatStrategy) === -1) {\n      logWarning(\n        'repeatStrategy \"' +\n          repeatStrategy +\n          '\" is not one of: ' +\n          repeatStrategyOptions.split(', ') +\n          '.'\n      );\n      return;\n    }\n    this.setState(() => {\n      switch (repeatStrategy) {\n        case 'track':\n          return {\n            loop: true\n          };\n        case 'playlist':\n          return {\n            loop: false,\n            cycle: true\n          };\n        case 'none':\n          return {\n            loop: false,\n            cycle: false\n          };\n        default:\n          return null;\n      }\n    });\n  }\n\n  setPlaybackRate(rate) {\n    this.media.playbackRate = rate;\n  }\n\n  getControlProps() {\n    const { props, state } = this;\n    const playerContext = {\n      playlist: props.playlist,\n      activeTrackIndex: state.activeTrackIndex,\n      trackLoading: state.trackLoading,\n      paused: state.paused,\n      currentTime: state.currentTime,\n      seekPreviewTime: state.seekPreviewTime,\n      seekInProgress: state.seekInProgress,\n      awaitingResumeOnSeekComplete: state.awaitingResumeOnSeekComplete,\n      duration: state.duration,\n      bufferedRanges: state.bufferedRanges,\n      playedRanges: state.playedRanges,\n      seekableRanges: state.seekableRanges,\n      volume: state.volume,\n      muted: state.muted,\n      shuffle: state.shuffle,\n      stalled: state.stalled,\n      playbackRate: state.playbackRate,\n      setVolumeInProgress: state.setVolumeInProgress,\n      repeatStrategy: getRepeatStrategy(state.loop, state.cycle),\n      pipeVideoStreamToCanvas: this.pipeVideoStreamToCanvas,\n      onTogglePause: this.togglePause,\n      onSelectTrackIndex: this.selectTrackIndex,\n      onBackSkip: this.backSkip,\n      onForwardSkip: this.forwardSkip,\n      onSeekPreview: this.seekPreview,\n      onSeekComplete: this.seekComplete,\n      onSetVolume: this.setVolume,\n      onSetVolumeComplete: this.setVolumeComplete,\n      onToggleMuted: this.toggleMuted,\n      onToggleShuffle: this.toggleShuffle,\n      onSetRepeatStrategy: this.setRepeatStrategy,\n      onSetPlaybackRate: this.setPlaybackRate\n    };\n    if (this.playerContext) {\n      // only update this.playerContext if something has changed\n      for (const key of Object.keys(this.playerContext)) {\n        if (playerContext[key] !== this.playerContext[key]) {\n          this.playerContext = playerContext;\n          break;\n        }\n      }\n    } else {\n      // first time - nothing to compare\n      this.playerContext = playerContext;\n    }\n    return this.playerContext;\n  }\n\n  render() {\n    const sources = getTrackSources(\n      this.props.playlist,\n      this.state.activeTrackIndex\n    );\n    const playerContext = this.getControlProps();\n    return (\n      <Fragment>\n        <video\n          hidden\n          ref={this.setMediaElementRef}\n          crossOrigin={this.props.crossOrigin}\n          preload=\"metadata\"\n          loop={this.state.loop}\n          onPlay={this.handleMediaPlay}\n          onPause={this.handleMediaPause}\n          onEnded={this.handleMediaEnded}\n          onStalled={this.handleMediaStalled}\n          onCanPlayThrough={this.handleMediaCanplaythrough}\n          onTimeUpdate={this.handleMediaTimeupdate}\n          onLoadedMetadata={this.handleMediaLoadedmetadata}\n          onVolumeChange={this.handleMediaVolumechange}\n          onDurationChange={this.handleMediaDurationchange}\n          onProgress={this.handleMediaProgress}\n          onRateChange={this.handleMediaRatechange}\n        >\n          {sources.map(source => (\n            <source key={source.src} src={source.src} type={source.type} />\n          ))}\n        </video>\n        <PlayerContext.Provider value={playerContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(playerContext)\n            : this.props.children}\n        </PlayerContext.Provider>\n      </Fragment>\n    );\n  }\n}\n\nPlayerContextProvider.propTypes = {\n  playlist: PropTypes.arrayOf(PlayerPropTypes.track.isRequired).isRequired,\n  autoplay: PropTypes.bool.isRequired,\n  autoplayDelayInSeconds: PropTypes.number.isRequired,\n  gapLengthInSeconds: PropTypes.number.isRequired,\n  crossOrigin: PlayerPropTypes.crossOriginAttribute,\n  defaultVolume: PropTypes.number.isRequired,\n  defaultMuted: PropTypes.bool,\n  defaultRepeatStrategy: PlayerPropTypes.repeatStrategy.isRequired,\n  defaultShuffle: PropTypes.bool,\n  defaultPlaybackRate: PropTypes.number.isRequired,\n  startingTime: PropTypes.number.isRequired,\n  startingTrackIndex: PropTypes.number.isRequired,\n  loadFirstTrackOnPlaylistComplete: PropTypes.bool,\n  seekMode: PlayerPropTypes.seekMode.isRequired,\n  maintainPlaybackRate: PropTypes.bool.isRequired,\n  allowBackShuffle: PropTypes.bool,\n  stayOnBackSkipThreshold: PropTypes.number.isRequired,\n  supportedMediaSessionActions: PropTypes.arrayOf(\n    PlayerPropTypes.mediaSessionAction.isRequired\n  ).isRequired,\n  mediaSessionSeekLengthInSeconds: PropTypes.number.isRequired,\n  mediaElementRef: PropTypes.func,\n  initialStateSnapshot: PropTypes.shape({\n    __unstable__: PropTypes.object.isRequired\n  }),\n  onStateSnapshot: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nPlayerContextProvider.defaultProps = {\n  autoplay: false,\n  autoplayDelayInSeconds: 0,\n  gapLengthInSeconds: 0,\n  defaultVolume: 1,\n  defaultMuted: false,\n  defaultRepeatStrategy: 'playlist',\n  defaultShuffle: false,\n  defaultPlaybackRate: 1,\n  startingTime: 0,\n  startingTrackIndex: 0,\n  loadFirstTrackOnPlaylistComplete: true,\n  seekMode: 'immediate',\n  maintainPlaybackRate: false,\n  allowBackShuffle: false,\n  stayOnBackSkipThreshold: 5,\n  supportedMediaSessionActions: ['play', 'pause', 'previoustrack', 'nexttrack'],\n  mediaSessionSeekLengthInSeconds: 10\n};\n\nexport class PlayerContextGroupMember extends Component {\n  componentDidMount() {\n    this.props.groupContext.registerMediaElement(this.mediaElement);\n  }\n\n  componentWillUnmount() {\n    this.props.groupContext.unregisterMediaElement(this.mediaElement);\n  }\n\n  render() {\n    const { groupContext, props } = this.props;\n    const { mediaElementRef, ...rest } = props;\n    return (\n      <PlayerContextProvider\n        {...groupContext.groupProps}\n        {...rest}\n        mediaElementRef={ref => {\n          if (mediaElementRef) {\n            mediaElementRef(ref);\n          }\n          this.mediaElement = ref;\n        }}\n      />\n    );\n  }\n}\n\nPlayerContextGroupMember.propTypes = {\n  groupContext: PropTypes.shape({\n    groupProps: PropTypes.object.isRequired,\n    registerMediaElement: PropTypes.func.isRequired,\n    unregisterMediaElement: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction PlayerContextGroupConsumer(props) {\n  return (\n    <GroupContext.Consumer>\n      {groupContext => {\n        if (!groupContext) {\n          return createElement(PlayerContextProvider, props);\n        }\n        return createElement(PlayerContextGroupMember, {\n          groupContext,\n          props\n        });\n      }}\n    </GroupContext.Consumer>\n  );\n}\n\nexport default PlayerContextGroupConsumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GroupContext from './GroupContext';\n\n/**\n * A wrapper which can be used to share configuration among multiple descendant [`PlayerContextProvider`](#playercontextprovider) instances as well as prevent multiple media elements from playing audio simultaneously\n */\nexport class PlayerContextGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.registerMediaElement = this.registerMediaElement.bind(this);\n    this.unregisterMediaElement = this.unregisterMediaElement.bind(this);\n    this.enforceOneMediaSourceOnly = this.enforceOneMediaSourceOnly.bind(this);\n    this.mediaElements = [];\n  }\n\n  registerMediaElement(elem) {\n    this.mediaElements = this.mediaElements.concat(elem);\n    elem.addEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.addEventListener('volumechange', this.enforceOneMediaSourceOnly, true);\n  }\n\n  unregisterMediaElement(elem) {\n    this.mediaElements = this.mediaElements.filter(element => elem !== element);\n    elem.removeEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.removeEventListener(\n      'volumechange',\n      this.enforceOneMediaSourceOnly,\n      true\n    );\n  }\n\n  enforceOneMediaSourceOnly(e) {\n    const mediaElement = e.target;\n    const { paused, muted } = mediaElement;\n    if (paused || muted) {\n      return;\n    }\n    for (const element of this.mediaElements) {\n      if (element !== mediaElement && !element.muted) {\n        element.pause();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <GroupContext.Consumer>\n        {groupContext => {\n          const value = groupContext\n            ? {\n                ...groupContext,\n                groupProps: { ...groupContext.groupProps, ...this.props }\n              }\n            : {\n                groupProps: this.props,\n                registerMediaElement: this.registerMediaElement,\n                unregisterMediaElement: this.unregisterMediaElement\n              };\n          return (\n            <GroupContext.Provider value={value}>\n              {this.props.children}\n            </GroupContext.Provider>\n          );\n        }}\n      </GroupContext.Consumer>\n    );\n  }\n}\n\nPlayerContextGroup.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PlayerContextGroup;\n","import { createContext } from 'react';\n\nimport { logWarning } from './utils/console';\n\nconst FullscreenContext = createContext({\n  fullscreen: false,\n  requestFullscreen() {\n    logWarning(\n      'Fullscreen request ignored since there is no ' +\n        'FullscreenContextProvider ancestor.'\n    );\n  },\n  requestExitFullscreen() {\n    logWarning(\n      'Exit fullscreen request ignored since there is no ' +\n        'FullscreenContextProvider ancestor.'\n    );\n  }\n});\nFullscreenContext.displayName = 'FullscreenContext';\n\nexport default FullscreenContext;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FullscreenContext from './FullscreenContext';\n\nconst fullscreenStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n/**\n * Wraps an area which should be fullscreen-able\n */\nexport class FullscreenContextProvider extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullscreen: false\n    };\n    this.requestFullscreen = this.requestFullscreen.bind(this);\n    this.requestExitFullscreen = this.requestExitFullscreen.bind(this);\n    this.handleFullscreenChange = this.handleFullscreenChange.bind(this);\n    this.fullscreenElement = null;\n  }\n\n  componentDidMount() {\n    document.addEventListener('fullscreenchange', this.handleFullscreenChange);\n    document.addEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      'fullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  requestFullscreen() {\n    if (!this.props.fullscreenEnabled) {\n      return;\n    }\n    if (this.fullscreenElement.requestFullscreen) {\n      this.fullscreenElement.requestFullscreen();\n    } else if (this.fullscreenElement.webkitRequestFullscreen) {\n      this.fullscreenElement.webkitRequestFullscreen();\n    } else if (this.fullscreenElement.mozRequestFullscreen) {\n      this.fullscreenElement.mozRequestFullScreen();\n    } else if (this.fullscreenElement.msRequestFullscreen) {\n      this.fullscreenElement.msRequestFullscreen();\n    }\n  }\n\n  requestExitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.mozExitFullscreen();\n    }\n  }\n\n  handleFullscreenChange() {\n    const documentFullscreenElement =\n      document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement;\n    this.setState({\n      fullscreen: documentFullscreenElement === this.fullscreenElement\n    });\n  }\n\n  getFullscreenContext() {\n    const fullscreenContext = {\n      fullscreen: this.state.fullscreen,\n      requestFullscreen: this.requestFullscreen,\n      requestExitFullscreen: this.requestExitFullscreen\n    };\n    if (\n      this.fullscreenContext &&\n      fullscreenContext.fullscreen === this.fullscreenContext.fullscreen\n    ) {\n      // no change\n      return this.fullscreenContext;\n    }\n    return (this.fullscreenContext = fullscreenContext);\n  }\n\n  render() {\n    const fullscreenContext = this.getFullscreenContext();\n    return (\n      <div\n        ref={elem => (this.fullscreenElement = elem)}\n        style={this.state.fullscreen ? fullscreenStyle : undefined}\n      >\n        <FullscreenContext.Provider value={fullscreenContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(fullscreenContext)\n            : this.props.children}\n        </FullscreenContext.Provider>\n      </div>\n    );\n  }\n}\n\nFullscreenContextProvider.propTypes = {\n  fullscreenEnabled: PropTypes.bool.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nFullscreenContextProvider.defaultProps = {\n  fullscreenEnabled: true\n};\n\nexport default FullscreenContextProvider;\n","import React, { createElement } from 'react';\n\nimport PlayerContext from './PlayerContext';\nimport FullscreenContext from './FullscreenContext';\nimport { logWarning } from './utils/console';\n\nfunction playerContextFilter(component, contextPropNames) {\n  const warned = {};\n  const childName = component.displayName || component.name;\n  function PlayerContextFilter(props) {\n    return (\n      <FullscreenContext.Consumer>\n        {fullscreenContext => (\n          <PlayerContext.Consumer>\n            {playerContext => {\n              const childProps = { ...props };\n              for (const propName of contextPropNames) {\n                if (playerContext.hasOwnProperty(propName)) {\n                  childProps[propName] = playerContext[propName];\n                } else if (fullscreenContext.hasOwnProperty(propName)) {\n                  childProps[propName] = fullscreenContext[propName];\n                } else if (!warned[propName]) {\n                  logWarning(\n                    \"Prop '\" +\n                      propName +\n                      \"' for component \" +\n                      childName +\n                      ' not found in playerContext or fullscreenContext.'\n                  );\n                  warned[propName] = true;\n                }\n              }\n              return createElement(component, childProps);\n            }}\n          </PlayerContext.Consumer>\n        )}\n      </FullscreenContext.Consumer>\n    );\n  }\n  if (childName) {\n    PlayerContextFilter.displayName = `PlayerContextFilter(${childName})`;\n  }\n  return PlayerContextFilter;\n}\n\nexport default playerContextFilter;\n","import PlayerContextProvider from './PlayerContextProvider';\nimport PlayerContext from './PlayerContext';\nimport PlayerContextGroup from './PlayerContextGroup';\nimport FullscreenContextProvider from './FullscreenContextProvider';\nimport FullscreenContext from './FullscreenContext';\nimport playerContextFilter from './playerContextFilter';\nimport * as PlayerPropTypes from './PlayerPropTypes';\n\nexport { PlayerContextProvider };\nexport const PlayerContextConsumer = PlayerContext.Consumer;\nexport { PlayerContextGroup };\nexport { FullscreenContextProvider };\nexport const FullscreenContextConsumer = FullscreenContext.Consumer;\nexport { playerContextFilter };\nexport { PlayerPropTypes };\n\n// undocumented exports\nexport * from './utils/console';\nexport {\n  default as convertToNumberWithinIntervalBounds\n} from './utils/convertToNumberWithinIntervalBounds';\nexport { default as isPlaylistValid } from './utils/isPlaylistValid';\nexport { repeatStrategyOptions } from './constants';\n"],"sourceRoot":""}