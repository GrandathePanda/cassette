{"version":3,"sources":["webpack://cassetteCore/webpack/universalModuleDefinition","webpack://cassetteCore/webpack/bootstrap","webpack://cassetteCore/external {\"root\":\"PropTypes\",\"commonjs\":\"prop-types\",\"commonjs2\":\"prop-types\",\"amd\":\"prop-types\"}","webpack://cassetteCore/external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://cassetteCore/./packages/core/src/utils/console.js","webpack://cassetteCore/./packages/core/src/utils/createSingleGlobalContext.js","webpack://cassetteCore/./packages/core/node_modules/array-find-index/index.js","webpack://cassetteCore/(webpack)/buildin/global.js","webpack://cassetteCore/./packages/core/src/PlayerContext.js","webpack://cassetteCore/./packages/core/src/GroupContext.js","webpack://cassetteCore/./packages/core/src/constants.js","webpack://cassetteCore/./packages/core/src/PlayerPropTypes.js","webpack://cassetteCore/./packages/core/src/factories/createCustomMediaElement.js","webpack://cassetteCore/./packages/core/src/utils/ShuffleManager.js","webpack://cassetteCore/./packages/core/src/utils/isPlaylistValid.js","webpack://cassetteCore/./packages/core/src/utils/getTrackSources.js","webpack://cassetteCore/./packages/core/src/utils/findTrackIndexByUrl.js","webpack://cassetteCore/./packages/core/src/utils/getSourceList.js","webpack://cassetteCore/./packages/core/src/utils/getTimeRangesArray.js","webpack://cassetteCore/./packages/core/src/utils/getRepeatStrategy.js","webpack://cassetteCore/./packages/core/src/utils/convertToNumberWithinIntervalBounds.js","webpack://cassetteCore/./packages/core/src/PlayerContextProvider.js","webpack://cassetteCore/./packages/core/src/utils/snapshot.js","webpack://cassetteCore/./packages/core/src/PlayerContextGroup.js","webpack://cassetteCore/./packages/core/src/FullscreenContext.js","webpack://cassetteCore/./packages/core/src/FullscreenContextProvider.js","webpack://cassetteCore/./packages/core/src/playerContextFilter.js","webpack://cassetteCore/./packages/core/src/index.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","logWarning","log","console","logError","error","warn","packageVersion","version","_global","window","global","__cassette_contexts__","displayName","defaultValue","ExistingContext","_console__WEBPACK_IMPORTED_MODULE_1__","Context","react__WEBPACK_IMPORTED_MODULE_0__","arr","predicate","ctx","Array","findIndex","TypeError","list","len","length","g","Function","eval","e","PlayerContext","createSingleGlobalContext","GroupContext","repeatStrategyOptions","requiredOnlyUnlessHasProp","propType","altPropName","warnedAboutDefiningBoth","props","propName","componentName","rest","isRequired","Error","controlKeyword","external_root_PropTypes_commonjs_prop_types_commonjs2_prop_types_amd_prop_types_default","a","oneOf","control","oneOfType","func","crossOriginAttribute","PlayerPropTypes_repeatStrategy","mediaSource","shape","src","string","type","mediaSessionAction","mediaSessionArtwork","sizes","PlayerPropTypes_track","url","sources","arrayOf","title","artist","album","artwork","meta","progressDirection","seekMode","aspectRatio","prop","undefined","split","some","isNaN","loopchange","srcrequest","factories_createCustomMediaElement","media","document","createElement","MutationObserver","dispatchEvent","Event","observe","attributeFilter","currentSrc","set","srcRequested","_goForward","forwardStack","backStack","currentItem","item","push","pop","_findNextItem","allowMore","nextItem","indexOf","_allItemsMatch","Math","floor","random","utils_ShuffleManager","constructor","options","_list","_forwardStack","_backStack","_currentItem","_allowBackShuffle","Boolean","allowBackShuffle","findNextItem","currentIndex","setCurrentIndex","findPreviousItem","pickNextItem","index","setList","setOptions","keys","clear","utils_isPlaylistValid","playlist","blankSources","utils_getTrackSources","_playlist$index","utils_findTrackIndexByUrl","array_find_index_default","track","source","utils_getSourceList","map","_","utils_getTimeRangesArray","timeRangesObj","timeRangesArray","start","end","utils_getRepeatStrategy","loop","cycle","utils_convertToNumberWithinIntervalBounds","number","min","max","Infinity","playErrorHandler","err","warningMessage","Date","toLocaleTimeString","supportableMediaSessionActions","defaultState","paused","currentTime","seekPreviewTime","seekInProgress","awaitingResumeOnSeekComplete","duration","bufferedRanges","playedRanges","seekableRanges","stalled","awaitingPlay","getGoToTrackState","prevState","shouldPlay","isNewTrack","activeTrackIndex","trackLoading","setMediaElementSources","mediaElement","firstChild","removeChild","sourceElement","appendChild","load","PlayerContextProvider_PlayerContextProvider","external_root_React_commonjs_react_commonjs2_react_amd_react_","super","state","_objectSpread","startingTrackIndex","startingTime","volume","defaultVolume","muted","defaultMuted","defaultRepeatStrategy","shuffle","defaultShuffle","playbackRate","defaultPlaybackRate","setVolumeInProgress","autoplay","__playlist__","initialStateSnapshot","snapshot","_snapshot$__unstable_","__unstable__","activeTrackSrc","restoredStateValues","useCurrentTime","newTrackIndex","restoreStateFromSnapshot","lastStableVolume","shuffler","videoHostElementList","videoHostOccupiedCallbacks","Map","videoHostVacatedCallbacks","togglePause","selectTrackIndex","forwardSkip","backSkip","seekPreview","seekComplete","setVolume","setVolumeComplete","toggleMuted","toggleShuffle","setRepeatStrategy","setPlaybackRate","registerVideoHostElement","renderVideoIntoHostElement","unregisterVideoHostElement","updateVideoHostElement","handleMediaPlay","handleMediaPause","handleMediaSrcrequest","handleMediaEnded","handleMediaStalled","handleMediaCanplaythrough","handleMediaTimeupdate","handleMediaLoadedmetadata","handleMediaVolumechange","handleMediaDurationchange","handleMediaProgress","handleMediaLoopchange","handleMediaRatechange","componentDidMount","_props","crossOrigin","autoplayDelayInSeconds","mediaElementRef","getPosterImageForTrack","onActiveTrackUpdate","_state","setAttribute","addEventListener","mediaContainer","setState","delayTimeout","setTimeout","[object Object]","nextProps","newPlaylist","baseNewState","prevSources","currentSources","componentDidUpdate","prevProps","newSources","prevTrack","newTrack","stealMediaSession","clearTimeout","snapshotUpdateTimeout","onStateSnapshot","getStateSnapshot","componentWillUnmount","removeEventListener","gapLengthTimeout","MediaSession","navigator","mediaSession","metadata","MediaMetadata","action","supportedMediaSessionActions","seekLength","mediaSessionSeekLengthInSeconds","forEach","handler","setActionHandler","hostElement","onHostOccupied","onHostVacated","concat","cancelAnimationFrame","videoHostUpdateRaf","requestAnimationFrame","filter","elem","delete","parentNode","playing","oldHostElement","play","onVacated","onOccupied","_props2","loadFirstTrackOnPlaylistComplete","_state2","goToTrack","gapLengthInSeconds","_media","played","_media2","buffered","seekable","pause","playPromise","catch","Promise","reject","_props3","stayOnBackSkipThreshold","_state3","previousItem","_state4","targetTime","baseStateUpdate","ended","_state5","inProgress","volumeInBounds","repeatStrategy","rate","getControlProps","playerContext","onTogglePause","onSelectTrackIndex","onBackSkip","onForwardSkip","onSeekPreview","onSeekComplete","onSetVolume","onSetVolumeComplete","onToggleMuted","onToggleShuffle","onSetRepeatStrategy","onSetPlaybackRate","render","external_root_React_commonjs_react_commonjs2_react_amd_react_default","ref","hidden","Provider","children","propTypes","bool","maintainPlaybackRate","node","defaultProps","PlayerContextProvider_PlayerContextGroupMember","groupContext","registerMediaElement","unregisterMediaElement","_props4","_objectWithoutProperties","_extends","groupProps","src_PlayerContextProvider","Consumer","PlayerContextGroup_PlayerContextGroup","enforceOneMediaSourceOnly","mediaElements","element","target","PlayerContextGroup_objectSpread","src_PlayerContextGroup","FullscreenContext","fullscreen","requestFullscreen","requestExitFullscreen","fullscreenStyle","width","height","FullscreenContextProvider_FullscreenContextProvider","handleFullscreenChange","fullscreenElement","fullscreenEnabled","webkitRequestFullscreen","mozRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","mozExitFullscreen","documentFullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","getFullscreenContext","fullscreenContext","style","src_FullscreenContextProvider","src_playerContextFilter","component","contextPropNames","warned","childName","PlayerContextFilter","childProps","playerContextFilter_objectSpread","PlayerContextConsumer","FullscreenContextConsumer"],"mappings":"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","file":"esm/cassette-core.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"prop-types\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"prop-types\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cassetteCore\"] = factory(require(\"prop-types\"), require(\"react\"));\n\telse\n\t\troot[\"cassetteCore\"] = factory(root[\"PropTypes\"], root[\"React\"]);\n})((typeof self !== \"undefined\" ? self : this), function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/* eslint-disable no-console */\n\nconst log = console.log.bind(console);\n\nexport const logError = console.error ? console.error.bind(console) : log;\nexport const logWarning = console.warn ? console.warn.bind(console) : log;\n","import { createContext } from 'react';\n\nimport { logWarning } from './console';\n\nconst packageVersion = require('../../package.json').version;\n\nconst _global = typeof window === 'undefined' ? global : window;\n_global.__cassette_contexts__ = _global.__cassette_contexts__ || {};\n\nfunction createSingleGlobalContext(displayName, defaultValue = null) {\n  const ExistingContext = _global.__cassette_contexts__[displayName];\n  if (ExistingContext) {\n    if (ExistingContext.packageVersion !== packageVersion) {\n      logWarning(\n        `Warning: multiple versions of ${displayName} from the @cassette/core` +\n          ` package have been loaded. v${packageVersion} will be ignored and` +\n          ` v${ExistingContext.packageVersion} will be used instead.`\n      );\n    }\n    return ExistingContext;\n  }\n  const Context = createContext(defaultValue);\n  Context.displayName = displayName;\n  Context.packageVersion = packageVersion;\n  _global.__cassette_contexts__[displayName] = Context;\n  return Context;\n}\n\nexport default createSingleGlobalContext;\n","'use strict';\nmodule.exports = function (arr, predicate, ctx) {\n\tif (typeof Array.prototype.findIndex === 'function') {\n\t\treturn arr.findIndex(predicate, ctx);\n\t}\n\n\tif (typeof predicate !== 'function') {\n\t\tthrow new TypeError('predicate must be a function');\n\t}\n\n\tvar list = Object(arr);\n\tvar len = list.length;\n\n\tif (len === 0) {\n\t\treturn -1;\n\t}\n\n\tfor (var i = 0; i < len; i++) {\n\t\tif (predicate.call(ctx, list[i], i, list)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\nexport default createSingleGlobalContext('PlayerContext');\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\nexport default createSingleGlobalContext('GroupContext');\n","export const repeatStrategyOptions = ['none', 'playlist', 'track'];\n","import PropTypes from 'prop-types';\n\nimport { repeatStrategyOptions } from './constants';\nimport { logWarning } from './utils/console';\n\nfunction requiredOnlyUnlessHasProp(propType, altPropName) {\n  let warnedAboutDefiningBoth = false;\n  function validate(props, propName, componentName, ...rest) {\n    if (propName in props) {\n      if (!warnedAboutDefiningBoth && altPropName in props) {\n        logWarning(\n          `Do not define both the '${propName}' and '${altPropName}' props.`\n        );\n        warnedAboutDefiningBoth = true;\n      }\n      return propType.isRequired(props, propName, componentName, ...rest);\n    }\n    if (!(altPropName in props)) {\n      return new Error(\n        `If the '${altPropName}' prop is not defined, '${propName}' must be.`\n      );\n    }\n  }\n  return validate;\n}\n\nexport const controlKeyword = PropTypes.oneOf([\n  'playpause',\n  'backskip',\n  'forwardskip',\n  'volume',\n  'mute',\n  'repeat',\n  'shuffle',\n  'progress',\n  'progressdisplay',\n  'fullscreen',\n  'spacer'\n]);\n\nexport const control = PropTypes.oneOfType([PropTypes.func, controlKeyword]);\n\nexport const crossOriginAttribute = PropTypes.oneOf([\n  'anonymous',\n  'use-credentials'\n]);\n\nexport const repeatStrategy = PropTypes.oneOf(repeatStrategyOptions);\n\nexport const mediaSource = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n});\n\nexport const mediaSessionAction = PropTypes.oneOf([\n  'play',\n  'pause',\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n]);\n\nexport const mediaSessionArtwork = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  type: PropTypes.string\n});\n\nexport const track = PropTypes.shape({\n  url: requiredOnlyUnlessHasProp(PropTypes.string, 'sources'),\n  sources: requiredOnlyUnlessHasProp(\n    PropTypes.arrayOf(mediaSource.isRequired),\n    'url'\n  ),\n  title: PropTypes.string.isRequired,\n  artist: PropTypes.string,\n  album: PropTypes.string,\n  artwork: PropTypes.arrayOf(mediaSessionArtwork.isRequired),\n  meta: PropTypes.object\n});\n\nexport const progressDirection = PropTypes.oneOf([\n  'left',\n  'right',\n  'up',\n  'down'\n]);\n\nexport const seekMode = PropTypes.oneOf(['paused', 'immediate', 'onrelease']);\n\nexport function aspectRatio(props, propName) {\n  const prop = props[propName];\n  if (prop === undefined) {\n    return;\n  }\n  if (\n    typeof prop !== 'string' ||\n    prop.split(':').length !== 2 ||\n    prop.split(':').some(isNaN)\n  ) {\n    return new Error(\n      `The ${propName} prop should be a string of the form 'x:y'. Example: 16:9`\n    );\n  }\n}\n","const loopchange = 'loopchange';\nconst srcrequest = 'srcrequest';\n\nfunction createCustomMediaElement() {\n  const media = document.createElement('video');\n  new MutationObserver(() => {\n    media.dispatchEvent(new Event(loopchange));\n  }).observe(media, {\n    attributeFilter: ['loop']\n  });\n  // Don't let the media src property get modified directly.\n  // Instead, when it does get set, dispatch an event to be\n  // handled in a way that doesn't conflict with the loaded\n  // playlist.\n  Object.defineProperty(media, 'src', {\n    get: () => media.currentSrc,\n    set: src => {\n      const e = new Event(srcrequest);\n      e.srcRequested = src;\n      media.dispatchEvent(e);\n    }\n  });\n  return media;\n}\n\nexport default createCustomMediaElement;\n","/* ShuffleManager\n *\n * Manages navigation throughout a list which is:\n * - Sourced from another provided list\n * - In random order (except to avoid consecutive duplicates)\n * - Extended endlessly on-the-fly, as needed\n * - Able to have future history overwritten by non-random choices\n * - Able to swap source lists and maintain shuffle order for common members\n */\n\nexport class ShuffleManager {\n  constructor(list, options = {}) {\n    this._list = list;\n    this._forwardStack = [];\n    this._backStack = [];\n    this._currentItem = undefined;\n\n    this._allowBackShuffle = Boolean(options.allowBackShuffle);\n  }\n\n  findNextItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._forwardStack,\n      this._backStack,\n      this._currentItem,\n      true\n    );\n    return this._currentItem;\n  }\n\n  findPreviousItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._backStack,\n      this._forwardStack,\n      this._currentItem,\n      this._allowBackShuffle\n    );\n    return this._currentItem;\n  }\n\n  pickNextItem(index, currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    if (this._list[index] === undefined) {\n      return undefined;\n    }\n    if (this._currentItem !== undefined) {\n      this._backStack.push(this._currentItem);\n    }\n    this._forwardStack.length = 0;\n    this._currentItem = this._list[index];\n    return this._currentItem;\n  }\n\n  setList(list) {\n    this._list = list;\n  }\n\n  setOptions(options) {\n    for (const o of Object.keys(options)) {\n      switch (o) {\n        case 'allowBackShuffle':\n          this[`_${o}`] = Boolean(options[o]);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  setCurrentIndex(currentIndex) {\n    const item = this._list[currentIndex];\n    if (this._currentItem !== item) {\n      this.clear();\n      this._currentItem = item;\n    }\n  }\n\n  clear() {\n    this._forwardStack.length = 0;\n    this._backStack.length = 0;\n    this._currentItem = undefined;\n  }\n}\n\nfunction _goForward(n, forwardStack, backStack, currentItem) {\n  let item = currentItem;\n  for (let i = 0; i < n; i++) {\n    if (!forwardStack.length) {\n      // rollback before erroring (note stack reversal)\n      _goForward(i, backStack, forwardStack, item);\n      throw `Moving ${n} places was not possible!`;\n    }\n    backStack.push(item);\n    item = forwardStack.pop();\n  }\n  return item;\n}\n\nfunction _allItemsMatch(list, item) {\n  if (!list.length) {\n    return false;\n  }\n  for (let i = 0; i < list.length; i++) {\n    if (item !== list[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction _findNextItem(list, forwardStack, backStack, currentItem, allowMore) {\n  let item = currentItem;\n  if (!list.length) {\n    return undefined;\n  }\n  for (let i = 1; i <= forwardStack.length; i++) {\n    if (list.indexOf(forwardStack[forwardStack.length - i]) !== -1) {\n      return _goForward(i, forwardStack, backStack, item);\n    }\n  }\n  if (!allowMore) {\n    return undefined;\n  }\n  if (_allItemsMatch(list, item)) {\n    // we can serve this as our \"next\" item but we\n    // won't modify our history since it's the same.\n    return item;\n  }\n  let nextItem;\n  do {\n    nextItem = list[Math.floor(Math.random() * list.length)];\n  } while (item === nextItem || nextItem === undefined);\n  // if we're skipping items that aren't in our current list we may\n  // have some items in our forwardStack - make sure we move to the front.\n  item = _goForward(forwardStack.length, forwardStack, backStack, item);\n  if (item !== undefined) {\n    backStack.push(item);\n  }\n  return nextItem;\n}\n\nexport default ShuffleManager;\n","function isPlaylistValid(playlist) {\n  return Boolean(playlist && playlist.length);\n}\n\nexport default isPlaylistValid;\n","import isPlaylistValid from './isPlaylistValid';\n\nconst blankSources = [{ src: '' }];\n\nfunction getTrackSources(playlist, index) {\n  if (!isPlaylistValid(playlist)) {\n    return blankSources;\n  }\n  const { sources, url } = playlist[index];\n  if (sources) {\n    return sources.length ? sources : blankSources;\n  }\n  return [{ src: url }];\n}\n\nexport default getTrackSources;\n","import arrayFindIndex from 'array-find-index';\n\nfunction findTrackIndexByUrl(playlist, url) {\n  return arrayFindIndex(playlist, track => {\n    if (track.sources) {\n      return arrayFindIndex(track.sources, source => source.src === url) !== -1;\n    }\n    return track.url && url === track.url;\n  });\n}\n\nexport default findTrackIndexByUrl;\n","import getTrackSources from './getTrackSources';\n\n// collapses playlist into flat list containing\n// the first source url for each track\nfunction getSourceList(playlist) {\n  return (playlist || []).map((_, i) => getTrackSources(playlist, i)[0].src);\n}\n\nexport default getSourceList;\n","function getTimeRangesArray(timeRangesObj) {\n  const timeRangesArray = Array(timeRangesObj.length);\n  for (let i = 0; i < timeRangesObj.length; i++) {\n    timeRangesArray[i] = {\n      start: timeRangesObj.start(i),\n      end: timeRangesObj.end(i)\n    };\n  }\n  return timeRangesArray;\n}\n\nexport default getTimeRangesArray;\n","function getRepeatStrategy(loop, cycle) {\n  if (loop) {\n    return 'track';\n  }\n  if (cycle) {\n    return 'playlist';\n  }\n  return 'none';\n}\n\nexport default getRepeatStrategy;\n","function convertToNumberWithinIntervalBounds(number, min, max) {\n  min = typeof min === 'number' ? min : -Infinity;\n  max = typeof max === 'number' ? max : Infinity;\n  return Math.max(min, Math.min(number, max));\n}\n\nexport default convertToNumberWithinIntervalBounds;\n","import React, { Component, Fragment, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayFindIndex from 'array-find-index';\n\nimport PlayerContext from './PlayerContext';\nimport GroupContext from './GroupContext';\nimport * as PlayerPropTypes from './PlayerPropTypes';\nimport createCustomMediaElement from './factories/createCustomMediaElement';\nimport ShuffleManager from './utils/ShuffleManager';\nimport { getStateSnapshot, restoreStateFromSnapshot } from './utils/snapshot';\nimport getSourceList from './utils/getSourceList';\nimport getTrackSources from './utils/getTrackSources';\nimport getTimeRangesArray from './utils/getTimeRangesArray';\nimport findTrackIndexByUrl from './utils/findTrackIndexByUrl';\nimport isPlaylistValid from './utils/isPlaylistValid';\nimport getRepeatStrategy from './utils/getRepeatStrategy';\nimport convertToNumberWithinIntervalBounds from './utils/convertToNumberWithinIntervalBounds';\nimport { logError, logWarning } from './utils/console';\nimport { repeatStrategyOptions } from './constants';\n\nfunction playErrorHandler(err) {\n  logError(err);\n  if (err.name === 'NotAllowedError') {\n    const warningMessage =\n      'Media playback failed at ' +\n      new Date().toLocaleTimeString() +\n      '! (Perhaps autoplay is disabled in this browser.)';\n    logWarning(warningMessage);\n  }\n}\n\n// Existing Media Session API implementations have default handlers\n// for play/pause, and may yield unexpected behavior if custom\n// play/pause handlers are defined - so let's leave them be.\nconst supportableMediaSessionActions = [\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n];\n\nconst defaultState = {\n  // indicates whether media player should be paused\n  paused: true,\n  // elapsed time for active track, in seconds\n  currentTime: 0,\n  // The most recent targeted time, in seconds, for seek preview\n  seekPreviewTime: 0,\n  /* true if the user is currently dragging the mouse\n   * to seek a new track position\n   */\n  seekInProgress: false,\n  /* true if media was playing when seek previewing began,\n   * it was paused, and it should be resumed on seek\n   * complete\n   */\n  awaitingResumeOnSeekComplete: false,\n  // the duration in seconds of the loaded track\n  duration: 0,\n  // array describing the buffered ranges in the loaded track\n  bufferedRanges: [],\n  // array describing the already-played ranges in the loaded track\n  playedRanges: [],\n  // array describing the seekable ranges in the loaded track\n  seekableRanges: [],\n  // true if the media is currently stalled pending data buffering\n  stalled: false,\n  // true if the active track should play on the next componentDidUpdate\n  awaitingPlay: false\n};\n\n// assumes playlist is valid\nfunction getGoToTrackState(prevState, index, shouldPlay = true) {\n  const isNewTrack = prevState.activeTrackIndex !== index;\n  return {\n    activeTrackIndex: index,\n    trackLoading: isNewTrack,\n    currentTime: 0,\n    loop: isNewTrack ? false : prevState.loop,\n    awaitingPlay: Boolean(shouldPlay),\n    paused: !shouldPlay\n  };\n}\n\nfunction setMediaElementSources(mediaElement, sources) {\n  // remove current sources\n  let firstChild;\n  while ((firstChild = mediaElement.firstChild)) {\n    mediaElement.removeChild(firstChild);\n  }\n  // add new sources\n  for (const source of sources) {\n    const sourceElement = document.createElement('source');\n    sourceElement.src = source.src;\n    if (source.type) {\n      sourceElement.type = source.type;\n    }\n    mediaElement.appendChild(sourceElement);\n  }\n  // cancel playback and re-scan new sources\n  mediaElement.load();\n}\n\n/**\n * Wraps an area which shares a common [`playerContext`](#playercontext)\n */\nexport class PlayerContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...defaultState,\n      // index matching requested track (whether track has loaded or not)\n      activeTrackIndex: convertToNumberWithinIntervalBounds(\n        props.startingTrackIndex,\n        0\n      ),\n      // whether we're waiting on loading metadata for the active track\n      trackLoading: isPlaylistValid(props.playlist),\n      // the current timestamp on the active track in seconds\n      currentTime: convertToNumberWithinIntervalBounds(props.startingTime, 0),\n      // the latest volume of the media, between 0 and 1.\n      volume: convertToNumberWithinIntervalBounds(props.defaultVolume, 0, 1),\n      // true if the media has been muted\n      muted: props.defaultMuted,\n      // whether to loop the active track\n      loop: props.defaultRepeatStrategy === 'track',\n      // true if playlist should continue at start after completion\n      cycle: props.defaultRepeatStrategy === 'playlist',\n      // whether to randomly pick next track from playlist after one finishes\n      shuffle: props.defaultShuffle,\n      // Rate at which media should be played. 1.0 is normal speed.\n      playbackRate: props.defaultPlaybackRate,\n      // true if user is currently dragging mouse to change the volume\n      setVolumeInProgress: false,\n      // initialize awaitingPlay from autoplay prop\n      awaitingPlay: props.autoplay && isPlaylistValid(props.playlist),\n      // playlist prop copied to state (for getDerivedStateFromProps)\n      __playlist__: props.playlist,\n      // load overrides from previously-captured state snapshot\n      ...(props.initialStateSnapshot\n        ? restoreStateFromSnapshot(props.initialStateSnapshot, props)\n        : {})\n    };\n\n    // volume at last time we were unmuted and not actively setting volume\n    this.lastStableVolume = this.state.volume;\n\n    // used to keep track of play history when we are shuffling\n    this.shuffler = new ShuffleManager(getSourceList(props.playlist), {\n      allowBackShuffle: props.allowBackShuffle\n    });\n\n    // html media element used for playback\n    this.media = null;\n\n    this.videoHostElementList = [];\n    this.videoHostOccupiedCallbacks = new Map();\n    this.videoHostVacatedCallbacks = new Map();\n\n    // bind callback methods to pass to descendant elements\n    this.togglePause = this.togglePause.bind(this);\n    this.selectTrackIndex = this.selectTrackIndex.bind(this);\n    this.forwardSkip = this.forwardSkip.bind(this);\n    this.backSkip = this.backSkip.bind(this);\n    this.seekPreview = this.seekPreview.bind(this);\n    this.seekComplete = this.seekComplete.bind(this);\n    this.setVolume = this.setVolume.bind(this);\n    this.setVolumeComplete = this.setVolumeComplete.bind(this);\n    this.toggleMuted = this.toggleMuted.bind(this);\n    this.toggleShuffle = this.toggleShuffle.bind(this);\n    this.setRepeatStrategy = this.setRepeatStrategy.bind(this);\n    this.setPlaybackRate = this.setPlaybackRate.bind(this);\n    this.registerVideoHostElement = this.registerVideoHostElement.bind(this);\n    this.renderVideoIntoHostElement = this.renderVideoIntoHostElement.bind(\n      this\n    );\n    this.unregisterVideoHostElement = this.unregisterVideoHostElement.bind(\n      this\n    );\n    this.updateVideoHostElement = this.updateVideoHostElement.bind(this);\n\n    // bind media event handlers\n    this.handleMediaPlay = this.handleMediaPlay.bind(this);\n    this.handleMediaPause = this.handleMediaPause.bind(this);\n    this.handleMediaSrcrequest = this.handleMediaSrcrequest.bind(this);\n    this.handleMediaEnded = this.handleMediaEnded.bind(this);\n    this.handleMediaStalled = this.handleMediaStalled.bind(this);\n    this.handleMediaCanplaythrough = this.handleMediaCanplaythrough.bind(this);\n    this.handleMediaTimeupdate = this.handleMediaTimeupdate.bind(this);\n    this.handleMediaLoadedmetadata = this.handleMediaLoadedmetadata.bind(this);\n    this.handleMediaVolumechange = this.handleMediaVolumechange.bind(this);\n    this.handleMediaDurationchange = this.handleMediaDurationchange.bind(this);\n    this.handleMediaProgress = this.handleMediaProgress.bind(this);\n    this.handleMediaLoopchange = this.handleMediaLoopchange.bind(this);\n    this.handleMediaRatechange = this.handleMediaRatechange.bind(this);\n  }\n\n  componentDidMount() {\n    const media = (this.media = createCustomMediaElement());\n\n    const {\n      defaultPlaybackRate,\n      crossOrigin,\n      playlist,\n      autoplayDelayInSeconds,\n      mediaElementRef,\n      getPosterImageForTrack,\n      onActiveTrackUpdate\n    } = this.props;\n    const {\n      volume,\n      muted,\n      playbackRate,\n      loop,\n      activeTrackIndex,\n      awaitingPlay\n    } = this.state;\n\n    // initialize media properties\n    // We used to set currentTime here.. now waiting for loadedmetadata.\n    // This avoids an issue where some browsers ignore or delay currentTime\n    // updates when in the HAVE_NOTHING state.\n    media.defaultPlaybackRate = defaultPlaybackRate;\n    media.crossOrigin = crossOrigin;\n    media.volume = volume;\n    media.muted = muted;\n    media.playbackRate = playbackRate;\n    media.loop = loop;\n    media.setAttribute('playsinline', '');\n    media.setAttribute('webkit-playsinline', '');\n    media.setAttribute('preload', 'metadata');\n    media.setAttribute(\n      'poster',\n      getPosterImageForTrack(playlist[activeTrackIndex])\n    );\n\n    // add listeners for media events\n    media.addEventListener('play', this.handleMediaPlay);\n    media.addEventListener('pause', this.handleMediaPause);\n    media.addEventListener('ended', this.handleMediaEnded);\n    media.addEventListener('etalled', this.handleMediaStalled);\n    media.addEventListener('canplaythrough', this.handleMediaCanplaythrough);\n    media.addEventListener('timeupdate', this.handleMediaTimeupdate);\n    media.addEventListener('loadedmetadata', this.handleMediaLoadedmetadata);\n    media.addEventListener('volumechange', this.handleMediaVolumechange);\n    media.addEventListener('durationchange', this.handleMediaDurationchange);\n    media.addEventListener('progress', this.handleMediaProgress);\n    media.addEventListener('ratechange', this.handleMediaRatechange);\n    // add listeners for special events\n    media.addEventListener('srcrequest', this.handleMediaSrcrequest);\n    media.addEventListener('loopchange', this.handleMediaLoopchange);\n\n    // set source elements for current track\n    setMediaElementSources(media, getTrackSources(playlist, activeTrackIndex));\n\n    // initially mount media element in the hidden container (this may change)\n    this.mediaContainer.appendChild(media);\n\n    if (awaitingPlay) {\n      this.setState({\n        awaitingPlay: false\n      });\n      this.delayTimeout = setTimeout(() => {\n        this.togglePause(false);\n      }, autoplayDelayInSeconds * 1000);\n    }\n\n    if (mediaElementRef) {\n      mediaElementRef(media);\n    }\n\n    if (onActiveTrackUpdate) {\n      onActiveTrackUpdate(playlist[activeTrackIndex], activeTrackIndex);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const newPlaylist = nextProps.playlist;\n\n    if (newPlaylist === prevState.__playlist__) {\n      // reference comparison is equal so we'll\n      // assume the playlist is unchanged.\n      return null;\n    }\n\n    const baseNewState = {\n      __playlist__: newPlaylist\n    };\n\n    // check if the new playlist is invalid\n    if (!isPlaylistValid(newPlaylist)) {\n      return {\n        ...defaultState,\n        ...baseNewState,\n        activeTrackIndex: 0,\n        trackLoading: false\n      };\n    }\n\n    // check if the activeTrackIndex doesn't need to be updated\n    const prevSources = getTrackSources(\n      prevState.__playlist__,\n      prevState.activeTrackIndex\n    );\n    // the sources if we stay on the same track index\n    const currentSources = getTrackSources(\n      newPlaylist,\n      prevState.activeTrackIndex\n    );\n    // non-comprehensive but probably accurate check\n    if (prevSources[0].src === currentSources[0].src) {\n      // our active track index already matches\n      return baseNewState;\n    }\n\n    /* if the track we're already playing is in the new playlist, update the\n     * activeTrackIndex.\n     */\n    const newTrackIndex = findTrackIndexByUrl(newPlaylist, prevSources[0].src);\n    if (newTrackIndex !== -1) {\n      return {\n        ...baseNewState,\n        activeTrackIndex: newTrackIndex\n      };\n    }\n\n    // if not, then load the first track in the new playlist, and pause.\n    return {\n      ...baseNewState,\n      ...getGoToTrackState(prevState, 0, false)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.media.defaultPlaybackRate = this.props.defaultPlaybackRate;\n    this.media.crossOrigin = this.props.crossOrigin;\n\n    this.shuffler.setList(getSourceList(this.props.playlist));\n    this.shuffler.setOptions({\n      allowBackShuffle: this.props.allowBackShuffle\n    });\n\n    const prevSources = getTrackSources(\n      prevProps.playlist,\n      prevState.activeTrackIndex\n    );\n    const newSources = getTrackSources(\n      this.props.playlist,\n      this.state.activeTrackIndex\n    );\n    const prevTrack = prevProps.playlist[prevState.activeTrackIndex];\n    const newTrack = this.props.playlist[this.state.activeTrackIndex];\n    if (prevSources[0].src !== newSources[0].src) {\n      setMediaElementSources(this.media, newSources);\n      this.media.setAttribute(\n        'poster',\n        this.props.getPosterImageForTrack(newTrack)\n      );\n\n      if (!this.state.shuffle) {\n        // after toggling off shuffle, we defer clearing the shuffle\n        // history until we actually change tracks - if the user quickly\n        // toggles  shuffle off then back on again, we don't want to have\n        // lost our history.\n        this.shuffler.clear();\n      }\n    }\n\n    if (this.props.onActiveTrackUpdate && prevTrack !== newTrack) {\n      this.props.onActiveTrackUpdate(newTrack, this.state.activeTrackIndex);\n    }\n\n    if (prevProps !== this.props && !this.media.paused) {\n      // update running media session based on new props\n      this.stealMediaSession();\n    }\n\n    if (this.state.awaitingPlay) {\n      this.setState({\n        awaitingPlay: false\n      });\n      // media.currentSrc is updated asynchronously so we should\n      // play async to avoid weird intermediate state issues\n      setTimeout(() => {\n        this.togglePause(false);\n      });\n    }\n\n    clearTimeout(this.snapshotUpdateTimeout);\n    this.snapshotUpdateTimeout = setTimeout(() => {\n      if (this.props.onStateSnapshot) {\n        this.props.onStateSnapshot(getStateSnapshot(this.state));\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    const { media } = this;\n    // remove special event listeners on the media element\n    media.removeEventListener('srcrequest', this.handleMediaSrcrequest);\n    media.removeEventListener('loopchange', this.handleMediaLoopchange);\n\n    clearTimeout(this.gapLengthTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  stealMediaSession() {\n    if (\n      // eslint-disable-next-line no-undef\n      !(window.MediaSession && navigator.mediaSession instanceof MediaSession)\n    ) {\n      return;\n    }\n    // eslint-disable-next-line no-undef\n    navigator.mediaSession.metadata = new MediaMetadata(\n      this.props.playlist[this.state.activeTrackIndex]\n    );\n    supportableMediaSessionActions\n      .map(action => {\n        if (this.props.supportedMediaSessionActions.indexOf(action) === -1) {\n          return null;\n        }\n        const seekLength = this.props.mediaSessionSeekLengthInSeconds;\n        switch (action) {\n          case 'play':\n            return this.togglePause.bind(this, false);\n          case 'pause':\n            return this.togglePause.bind(this, true);\n          case 'previoustrack':\n            return this.backSkip;\n          case 'nexttrack':\n            return this.forwardSkip;\n          case 'seekbackward':\n            return () => (this.media.currentTime -= seekLength);\n          case 'seekforward':\n            return () => (this.media.currentTime += seekLength);\n          default:\n            return undefined;\n        }\n      })\n      .forEach((handler, i) => {\n        navigator.mediaSession.setActionHandler(\n          supportableMediaSessionActions[i],\n          handler\n        );\n      });\n  }\n\n  registerVideoHostElement(hostElement, { onHostOccupied, onHostVacated }) {\n    this.videoHostElementList = this.videoHostElementList.concat(hostElement);\n    this.videoHostOccupiedCallbacks.set(hostElement, onHostOccupied);\n    this.videoHostVacatedCallbacks.set(hostElement, onHostVacated);\n  }\n\n  renderVideoIntoHostElement(hostElement) {\n    if (this.videoHostElementList.indexOf(hostElement) === -1) {\n      return;\n    }\n    cancelAnimationFrame(this.videoHostUpdateRaf);\n    this.videoHostUpdateRaf = requestAnimationFrame(() =>\n      this.updateVideoHostElement(hostElement)\n    );\n  }\n\n  unregisterVideoHostElement(hostElement) {\n    this.videoHostElementList = this.videoHostElementList.filter(\n      elem => elem !== hostElement\n    );\n    this.videoHostOccupiedCallbacks.delete(hostElement);\n    this.videoHostVacatedCallbacks.delete(hostElement);\n    if (this.media.parentNode === hostElement) {\n      this.updateVideoHostElement();\n    }\n  }\n\n  updateVideoHostElement(hostElement) {\n    if (!hostElement) {\n      hostElement = this.videoHostElementList[0] || this.mediaContainer;\n    } else {\n      // move hostElement to front of list\n      this.videoHostElementList = [hostElement].concat(\n        this.videoHostElementList.filter(elem => elem !== hostElement)\n      );\n    }\n    const playing = !this.media.paused;\n    const oldHostElement = this.media.parentNode;\n    if (hostElement === oldHostElement) {\n      return;\n    }\n    hostElement.appendChild(this.media);\n    // according to the HTML spec playback should continue, but\n    // some browsers pause the element whenever it is moved around, so\n    // let's make sure playback resumes if that's the case.\n    if (playing && this.media.paused) {\n      this.media.play();\n    }\n    const onVacated = this.videoHostVacatedCallbacks.get(oldHostElement);\n    if (onVacated) {\n      onVacated(this.media);\n    }\n    const onOccupied = this.videoHostOccupiedCallbacks.get(hostElement);\n    if (onOccupied) {\n      onOccupied(this.media);\n    }\n  }\n\n  handleMediaPlay() {\n    this.setState(state => (state.paused === false ? null : { paused: false }));\n    this.stealMediaSession();\n  }\n\n  handleMediaPause() {\n    this.setState(state => (state.paused === true ? null : { paused: true }));\n  }\n\n  handleMediaSrcrequest(e) {\n    const { playlist } = this.props;\n    const sources = getTrackSources(playlist, this.state.activeTrackIndex);\n    if (arrayFindIndex(sources, s => s.src === e.srcRequested) !== -1) {\n      // we're good! nothing to update.\n      return;\n    }\n    // looks like 'src' was set from outside our component.\n    // let's see if we can use it.\n    const newTrackIndex = findTrackIndexByUrl(playlist, e.srcRequested);\n    if (newTrackIndex === -1) {\n      logError(\n        `Source '${e.srcRequested}' does not exist in the loaded playlist. ` +\n          `Make sure you've updated the 'playlist' prop to ` +\n          `PlayerContextProvider before you select this track!`\n      );\n      return;\n    }\n    this.selectTrackIndex(newTrackIndex);\n  }\n\n  handleMediaEnded() {\n    if (this.state.seekInProgress) {\n      // nothing to do if we're in the middle of a seek\n      // (this can happen if we're in seekMode: immediate)\n      return;\n    }\n    clearTimeout(this.gapLengthTimeout);\n    const { playlist, loadFirstTrackOnPlaylistComplete } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    const { cycle, activeTrackIndex } = this.state;\n    if (!cycle && activeTrackIndex + 1 >= playlist.length) {\n      if (loadFirstTrackOnPlaylistComplete) {\n        this.goToTrack(0, false);\n      }\n      return;\n    }\n    this.gapLengthTimeout = setTimeout(\n      this.forwardSkip,\n      this.props.gapLengthInSeconds * 1000\n    );\n  }\n\n  handleMediaStalled() {\n    this.setState(state => (state.stalled === true ? null : { stalled: true }));\n  }\n\n  handleMediaCanplaythrough() {\n    this.setState(\n      state => (state.stalled === false ? null : { stalled: false })\n    );\n  }\n\n  handleMediaTimeupdate() {\n    const { currentTime, played } = this.media;\n    if (this.state.trackLoading) {\n      // correct currentTime to preset, if applicable, during load\n      this.media.currentTime = this.state.currentTime;\n      return;\n    }\n    this.setState({\n      currentTime,\n      playedRanges: getTimeRangesArray(played)\n    });\n  }\n\n  handleMediaLoadedmetadata() {\n    if (this.media.currentTime !== this.state.currentTime) {\n      this.media.currentTime = this.state.currentTime;\n    }\n    this.setState(\n      state => (state.trackLoading === false ? null : { trackLoading: false })\n    );\n  }\n\n  handleMediaVolumechange() {\n    const { volume, muted } = this.media;\n    this.setState({ volume, muted });\n  }\n\n  handleMediaDurationchange() {\n    const { duration } = this.media;\n    this.setState({ duration });\n  }\n\n  handleMediaProgress() {\n    this.setState({\n      bufferedRanges: getTimeRangesArray(this.media.buffered),\n      seekableRanges: getTimeRangesArray(this.media.seekable)\n    });\n  }\n\n  handleMediaLoopchange() {\n    const { loop } = this.media;\n    this.setState(state => (state.loop === loop ? null : { loop }));\n  }\n\n  handleMediaRatechange() {\n    const { playbackRate } = this.media;\n    this.setState(\n      state => (state.playbackRate === playbackRate ? null : { playbackRate })\n    );\n  }\n\n  togglePause(value) {\n    clearTimeout(this.delayTimeout);\n    const pause = typeof value === 'boolean' ? value : !this.state.paused;\n    if (pause) {\n      this.media.pause();\n      return;\n    }\n    if (!this.media.currentSrc) {\n      return;\n    }\n    try {\n      const playPromise = this.media.play();\n      if (playPromise && typeof playPromise.catch === 'function') {\n        playPromise\n          .catch(err => {\n            // AbortError is pretty much always called because we're skipping\n            // tracks quickly or hitting pause before a track has a chance to\n            // play. It's pretty safe to just ignore these error messages.\n            if (err.name !== 'AbortError') {\n              return Promise.reject(err);\n            }\n          })\n          .catch(playErrorHandler);\n      }\n    } catch (err) {\n      playErrorHandler(err);\n    }\n  }\n\n  // assumes playlist is valid - don't call without checking\n  goToTrack(index, shouldPlay = true) {\n    clearTimeout(this.delayTimeout);\n    this.setState(state => getGoToTrackState(state, index, shouldPlay));\n  }\n\n  selectTrackIndex(index) {\n    const { playlist } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    if (index < 0 || index > playlist.length) {\n      logWarning(`Playlist index ${index} is out of bounds!`);\n      return;\n    }\n    if (this.state.shuffle) {\n      this.shuffler.pickNextItem(index, this.state.activeTrackIndex);\n    }\n    this.goToTrack(index);\n  }\n\n  backSkip() {\n    const { playlist, stayOnBackSkipThreshold } = this.props;\n    const { media } = this;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      media.currentTime >= stayOnBackSkipThreshold ||\n      (!cycle && activeTrackIndex < 1)\n    ) {\n      media.currentTime = 0;\n      return;\n    }\n    let index;\n    if (shuffle) {\n      const previousItem = this.shuffler.findPreviousItem(activeTrackIndex);\n      if (previousItem === undefined) {\n        // if we aren't allowing backShuffle then we'll hit a stopping point.\n        media.currentTime = 0;\n        return;\n      }\n      index = findTrackIndexByUrl(playlist, previousItem);\n    } else {\n      index = activeTrackIndex - 1;\n      if (index < 0) {\n        index = playlist.length - 1;\n      }\n    }\n    this.goToTrack(index);\n  }\n\n  forwardSkip() {\n    const { playlist } = this.props;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      (!cycle && activeTrackIndex + 1 >= playlist.length)\n    ) {\n      return;\n    }\n    let index;\n    if (shuffle) {\n      index = findTrackIndexByUrl(\n        playlist,\n        this.shuffler.findNextItem(activeTrackIndex)\n      );\n    } else {\n      index = activeTrackIndex + 1;\n      if (index >= playlist.length) {\n        index = 0;\n      }\n    }\n    this.goToTrack(index);\n  }\n\n  seekPreview(targetTime) {\n    if (!isPlaylistValid(this.props.playlist)) {\n      return;\n    }\n    const baseStateUpdate = {\n      seekPreviewTime: targetTime,\n      seekInProgress: true\n    };\n    switch (this.props.seekMode) {\n      case 'paused':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true\n        }));\n        this.media.currentTime = targetTime;\n        if (!this.state.paused) {\n          this.togglePause(true);\n        }\n        break;\n      case 'immediate':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true\n        }));\n        this.media.currentTime = targetTime;\n        if (this.state.awaitingResumeOnSeekComplete && !this.media.ended) {\n          // if we earlier encountered an 'ended' state,\n          // un-pausing becomes necessary to resume playback\n          this.togglePause(false);\n        }\n        break;\n      case 'onrelease':\n        this.setState(baseStateUpdate);\n        break;\n    }\n  }\n\n  seekComplete(targetTime) {\n    const { seekPreviewTime, awaitingResumeOnSeekComplete } = this.state;\n    const baseStateUpdate = {\n      seekInProgress: false,\n      awaitingResumeOnSeekComplete: false\n    };\n    const currentTime =\n      typeof targetTime === 'number' ? targetTime : seekPreviewTime;\n\n    if (isNaN(currentTime)) {\n      this.setState(baseStateUpdate);\n      return;\n    }\n    this.setState({\n      ...baseStateUpdate,\n      /* we'll update currentTime on the media listener hook anyway,\n       * but that might not happen for a bit... so the optimistic update\n       * helps us avoid the progress bar jumping around and confusing the user.\n       * https://github.com/benwiley4000/cassette/issues/209\n       */\n      currentTime\n    });\n    this.media.currentTime = currentTime;\n    if (awaitingResumeOnSeekComplete) {\n      if (this.media.ended) {\n        this.forwardSkip();\n      } else {\n        this.togglePause(false);\n      }\n    }\n  }\n\n  setVolume(volume, inProgress = true) {\n    if (inProgress && !this.state.setVolumeInProgress) {\n      this.setState({\n        setVolumeInProgress: true\n      });\n    }\n    const volumeInBounds = convertToNumberWithinIntervalBounds(volume, 0, 1);\n    this.media.muted = volumeInBounds === 0 ? true : false;\n    this.media.volume = volumeInBounds;\n  }\n\n  setVolumeComplete(volume) {\n    if (typeof volume === 'number') {\n      this.setVolume(volume, false);\n    }\n    this.setState({\n      setVolumeInProgress: false\n    });\n    if (!this.media.muted) {\n      this.lastStableVolume = this.media.volume;\n    }\n  }\n\n  toggleMuted(value) {\n    const muted = typeof value === 'boolean' ? value : !this.state.muted;\n    this.media.muted = muted;\n    if (!muted) {\n      this.media.volume = this.lastStableVolume;\n    }\n  }\n\n  toggleShuffle(value) {\n    const shuffle = typeof value === 'boolean' ? value : !this.state.shuffle;\n    this.setState({ shuffle });\n  }\n\n  setRepeatStrategy(repeatStrategy) {\n    if (repeatStrategyOptions.indexOf(repeatStrategy) === -1) {\n      logWarning(\n        'repeatStrategy \"' +\n          repeatStrategy +\n          '\" is not one of: ' +\n          repeatStrategyOptions.split(', ') +\n          '.'\n      );\n      return;\n    }\n    switch (repeatStrategy) {\n      case 'track':\n        // state update is automatic\n        this.media.loop = true;\n        break;\n      case 'playlist':\n        this.setState({\n          loop: false,\n          cycle: true\n        });\n        this.media.loop = false;\n        break;\n      case 'none':\n        this.setState({\n          loop: false,\n          cycle: false\n        });\n        this.media.loop = false;\n        break;\n    }\n  }\n\n  setPlaybackRate(rate) {\n    this.media.playbackRate = rate;\n  }\n\n  getControlProps() {\n    const { props, state } = this;\n    const playerContext = {\n      playlist: props.playlist,\n      activeTrackIndex: state.activeTrackIndex,\n      trackLoading: state.trackLoading,\n      paused: state.paused,\n      currentTime: state.currentTime,\n      seekPreviewTime: state.seekPreviewTime,\n      seekInProgress: state.seekInProgress,\n      awaitingResumeOnSeekComplete: state.awaitingResumeOnSeekComplete,\n      duration: state.duration,\n      bufferedRanges: state.bufferedRanges,\n      playedRanges: state.playedRanges,\n      seekableRanges: state.seekableRanges,\n      volume: state.volume,\n      muted: state.muted,\n      shuffle: state.shuffle,\n      stalled: state.stalled,\n      playbackRate: state.playbackRate,\n      setVolumeInProgress: state.setVolumeInProgress,\n      repeatStrategy: getRepeatStrategy(state.loop, state.cycle),\n      registerVideoHostElement: this.registerVideoHostElement,\n      renderVideoIntoHostElement: this.renderVideoIntoHostElement,\n      unregisterVideoHostElement: this.unregisterVideoHostElement,\n      onTogglePause: this.togglePause,\n      onSelectTrackIndex: this.selectTrackIndex,\n      onBackSkip: this.backSkip,\n      onForwardSkip: this.forwardSkip,\n      onSeekPreview: this.seekPreview,\n      onSeekComplete: this.seekComplete,\n      onSetVolume: this.setVolume,\n      onSetVolumeComplete: this.setVolumeComplete,\n      onToggleMuted: this.toggleMuted,\n      onToggleShuffle: this.toggleShuffle,\n      onSetRepeatStrategy: this.setRepeatStrategy,\n      onSetPlaybackRate: this.setPlaybackRate\n    };\n    if (this.playerContext) {\n      // only update this.playerContext if something has changed\n      for (const key of Object.keys(this.playerContext)) {\n        if (playerContext[key] !== this.playerContext[key]) {\n          this.playerContext = playerContext;\n          break;\n        }\n      }\n    } else {\n      // first time - nothing to compare\n      this.playerContext = playerContext;\n    }\n    return this.playerContext;\n  }\n\n  render() {\n    const playerContext = this.getControlProps();\n    return (\n      <Fragment>\n        <div ref={elem => (this.mediaContainer = elem)} hidden />\n        <PlayerContext.Provider value={playerContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(playerContext)\n            : this.props.children}\n        </PlayerContext.Provider>\n      </Fragment>\n    );\n  }\n}\n\nPlayerContextProvider.propTypes = {\n  playlist: PropTypes.arrayOf(PlayerPropTypes.track.isRequired).isRequired,\n  autoplay: PropTypes.bool.isRequired,\n  autoplayDelayInSeconds: PropTypes.number.isRequired,\n  gapLengthInSeconds: PropTypes.number.isRequired,\n  crossOrigin: PlayerPropTypes.crossOriginAttribute,\n  defaultVolume: PropTypes.number.isRequired,\n  defaultMuted: PropTypes.bool,\n  defaultRepeatStrategy: PlayerPropTypes.repeatStrategy.isRequired,\n  defaultShuffle: PropTypes.bool,\n  defaultPlaybackRate: PropTypes.number.isRequired,\n  startingTime: PropTypes.number.isRequired,\n  startingTrackIndex: PropTypes.number.isRequired,\n  loadFirstTrackOnPlaylistComplete: PropTypes.bool,\n  seekMode: PlayerPropTypes.seekMode.isRequired,\n  maintainPlaybackRate: PropTypes.bool.isRequired,\n  allowBackShuffle: PropTypes.bool,\n  stayOnBackSkipThreshold: PropTypes.number.isRequired,\n  supportedMediaSessionActions: PropTypes.arrayOf(\n    PlayerPropTypes.mediaSessionAction.isRequired\n  ).isRequired,\n  mediaSessionSeekLengthInSeconds: PropTypes.number.isRequired,\n  mediaElementRef: PropTypes.func,\n  initialStateSnapshot: PropTypes.shape({\n    __unstable__: PropTypes.object.isRequired\n  }),\n  onStateSnapshot: PropTypes.func,\n  onActiveTrackUpdate: PropTypes.func,\n  getPosterImageForTrack: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nPlayerContextProvider.defaultProps = {\n  autoplay: false,\n  autoplayDelayInSeconds: 0,\n  gapLengthInSeconds: 0,\n  defaultVolume: 1,\n  defaultMuted: false,\n  defaultRepeatStrategy: 'playlist',\n  defaultShuffle: false,\n  defaultPlaybackRate: 1,\n  startingTime: 0,\n  startingTrackIndex: 0,\n  loadFirstTrackOnPlaylistComplete: true,\n  seekMode: 'immediate',\n  maintainPlaybackRate: false,\n  allowBackShuffle: false,\n  stayOnBackSkipThreshold: 5,\n  supportedMediaSessionActions: ['play', 'pause', 'previoustrack', 'nexttrack'],\n  mediaSessionSeekLengthInSeconds: 10,\n  getPosterImageForTrack(track) {\n    return track && track.artwork ? track.artwork[0].src : '';\n  }\n};\n\nexport class PlayerContextGroupMember extends Component {\n  componentDidMount() {\n    this.props.groupContext.registerMediaElement(this.mediaElement);\n  }\n\n  componentWillUnmount() {\n    this.props.groupContext.unregisterMediaElement(this.mediaElement);\n  }\n\n  render() {\n    const { groupContext, props } = this.props;\n    const { mediaElementRef, ...rest } = props;\n    return (\n      <PlayerContextProvider\n        {...groupContext.groupProps}\n        {...rest}\n        mediaElementRef={ref => {\n          if (mediaElementRef) {\n            mediaElementRef(ref);\n          }\n          this.mediaElement = ref;\n        }}\n      />\n    );\n  }\n}\n\nPlayerContextGroupMember.propTypes = {\n  groupContext: PropTypes.shape({\n    groupProps: PropTypes.object.isRequired,\n    registerMediaElement: PropTypes.func.isRequired,\n    unregisterMediaElement: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction PlayerContextGroupConsumer(props) {\n  return (\n    <GroupContext.Consumer>\n      {groupContext => {\n        if (!groupContext) {\n          return createElement(PlayerContextProvider, props);\n        }\n        return createElement(PlayerContextGroupMember, {\n          groupContext,\n          props\n        });\n      }}\n    </GroupContext.Consumer>\n  );\n}\n\nexport default PlayerContextGroupConsumer;\n","import isPlaylistValid from './isPlaylistValid';\nimport getTrackSources from './getTrackSources';\nimport findTrackIndexByUrl from './findTrackIndexByUrl';\n\nexport function getStateSnapshot(state) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    __playlist__\n  } = state;\n  return {\n    __unstable__: {\n      paused,\n      currentTime,\n      activeTrackIndex,\n      volume,\n      muted,\n      loop,\n      cycle,\n      shuffle,\n      playbackRate,\n      activeTrackSrc: isPlaylistValid(__playlist__)\n        ? getTrackSources(__playlist__, activeTrackIndex)[0].src\n        : null\n    }\n  };\n}\n\nexport function restoreStateFromSnapshot(snapshot, props) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    activeTrackSrc\n  } = snapshot.__unstable__;\n  const restoredStateValues = {};\n  if (isPlaylistValid(props.playlist) && typeof paused === 'boolean') {\n    // using awaitingPlay instead of paused triggers an animation\n    restoredStateValues.awaitingPlay = !paused;\n  }\n  if (typeof volume === 'number' && volume >= 0 && volume <= 1) {\n    restoredStateValues.volume = volume;\n  }\n  if (typeof muted === 'boolean') {\n    restoredStateValues.muted = muted;\n  }\n  if (typeof loop === 'boolean') {\n    restoredStateValues.loop = loop;\n  }\n  if (typeof cycle === 'boolean') {\n    restoredStateValues.cycle = cycle;\n  }\n  if (typeof shuffle === 'boolean') {\n    restoredStateValues.shuffle = shuffle;\n  }\n  if (typeof playbackRate === 'number') {\n    restoredStateValues.playbackRate = playbackRate;\n  }\n  let useCurrentTime = false;\n  if (\n    typeof activeTrackSrc === 'string' &&\n    typeof activeTrackIndex === 'number' &&\n    activeTrackIndex >= 0\n  ) {\n    // let's try staying on the same track index\n    const currentSrc = getTrackSources(props.playlist, activeTrackIndex)[0].src;\n    if (activeTrackSrc === currentSrc) {\n      restoredStateValues.activeTrackIndex = activeTrackIndex;\n      useCurrentTime = true;\n    } else {\n      /* if the track we were playing before is in the new playlist,\n       * update the activeTrackIndex.\n       */\n      const newTrackIndex = findTrackIndexByUrl(props.playlist, activeTrackSrc);\n      if (newTrackIndex !== -1) {\n        restoredStateValues.activeTrackIndex = newTrackIndex;\n        useCurrentTime = true;\n      }\n    }\n  }\n  if (useCurrentTime && typeof currentTime === 'number' && currentTime >= 0) {\n    restoredStateValues.currentTime = currentTime;\n  }\n  return restoredStateValues;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GroupContext from './GroupContext';\n\n/**\n * A wrapper which can be used to share configuration among multiple descendant [`PlayerContextProvider`](#playercontextprovider) instances as well as prevent multiple media elements from playing audio simultaneously\n */\nexport class PlayerContextGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.registerMediaElement = this.registerMediaElement.bind(this);\n    this.unregisterMediaElement = this.unregisterMediaElement.bind(this);\n    this.enforceOneMediaSourceOnly = this.enforceOneMediaSourceOnly.bind(this);\n    this.mediaElements = [];\n  }\n\n  registerMediaElement(elem) {\n    this.mediaElements = this.mediaElements.concat(elem);\n    elem.addEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.addEventListener('volumechange', this.enforceOneMediaSourceOnly, true);\n  }\n\n  unregisterMediaElement(elem) {\n    this.mediaElements = this.mediaElements.filter(element => elem !== element);\n    elem.removeEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.removeEventListener(\n      'volumechange',\n      this.enforceOneMediaSourceOnly,\n      true\n    );\n  }\n\n  enforceOneMediaSourceOnly(e) {\n    const mediaElement = e.target;\n    const { paused, muted } = mediaElement;\n    if (paused || muted) {\n      return;\n    }\n    for (const element of this.mediaElements) {\n      if (element !== mediaElement && !element.muted) {\n        element.pause();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <GroupContext.Consumer>\n        {groupContext => {\n          const value = groupContext\n            ? {\n                ...groupContext,\n                groupProps: { ...groupContext.groupProps, ...this.props }\n              }\n            : {\n                groupProps: this.props,\n                registerMediaElement: this.registerMediaElement,\n                unregisterMediaElement: this.unregisterMediaElement\n              };\n          return (\n            <GroupContext.Provider value={value}>\n              {this.props.children}\n            </GroupContext.Provider>\n          );\n        }}\n      </GroupContext.Consumer>\n    );\n  }\n}\n\nPlayerContextGroup.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PlayerContextGroup;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\nimport { logWarning } from './utils/console';\n\nexport default createSingleGlobalContext('FullscreenContext', {\n  fullscreen: false,\n  requestFullscreen() {\n    logWarning(\n      'Fullscreen request ignored since there is no ' +\n        'FullscreenContextProvider ancestor.'\n    );\n  },\n  requestExitFullscreen() {\n    logWarning(\n      'Exit fullscreen request ignored since there is no ' +\n        'FullscreenContextProvider ancestor.'\n    );\n  }\n});\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FullscreenContext from './FullscreenContext';\n\nconst fullscreenStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n/**\n * Wraps an area which should be fullscreen-able\n */\nexport class FullscreenContextProvider extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullscreen: false\n    };\n    this.requestFullscreen = this.requestFullscreen.bind(this);\n    this.requestExitFullscreen = this.requestExitFullscreen.bind(this);\n    this.handleFullscreenChange = this.handleFullscreenChange.bind(this);\n    this.fullscreenElement = null;\n  }\n\n  componentDidMount() {\n    document.addEventListener('fullscreenchange', this.handleFullscreenChange);\n    document.addEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      'fullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  requestFullscreen() {\n    if (!this.props.fullscreenEnabled) {\n      return;\n    }\n    if (this.fullscreenElement.requestFullscreen) {\n      this.fullscreenElement.requestFullscreen();\n    } else if (this.fullscreenElement.webkitRequestFullscreen) {\n      this.fullscreenElement.webkitRequestFullscreen();\n    } else if (this.fullscreenElement.mozRequestFullscreen) {\n      this.fullscreenElement.mozRequestFullScreen();\n    } else if (this.fullscreenElement.msRequestFullscreen) {\n      this.fullscreenElement.msRequestFullscreen();\n    }\n  }\n\n  requestExitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.mozExitFullscreen();\n    }\n  }\n\n  handleFullscreenChange() {\n    const documentFullscreenElement =\n      document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement;\n    this.setState({\n      fullscreen: documentFullscreenElement === this.fullscreenElement\n    });\n  }\n\n  getFullscreenContext() {\n    const fullscreenContext = {\n      fullscreen: this.state.fullscreen,\n      requestFullscreen: this.requestFullscreen,\n      requestExitFullscreen: this.requestExitFullscreen\n    };\n    if (\n      this.fullscreenContext &&\n      fullscreenContext.fullscreen === this.fullscreenContext.fullscreen\n    ) {\n      // no change\n      return this.fullscreenContext;\n    }\n    return (this.fullscreenContext = fullscreenContext);\n  }\n\n  render() {\n    const fullscreenContext = this.getFullscreenContext();\n    return (\n      <div\n        ref={elem => (this.fullscreenElement = elem)}\n        style={this.state.fullscreen ? fullscreenStyle : undefined}\n      >\n        <FullscreenContext.Provider value={fullscreenContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(fullscreenContext)\n            : this.props.children}\n        </FullscreenContext.Provider>\n      </div>\n    );\n  }\n}\n\nFullscreenContextProvider.propTypes = {\n  fullscreenEnabled: PropTypes.bool.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nFullscreenContextProvider.defaultProps = {\n  fullscreenEnabled: true\n};\n\nexport default FullscreenContextProvider;\n","import React, { createElement } from 'react';\n\nimport PlayerContext from './PlayerContext';\nimport FullscreenContext from './FullscreenContext';\nimport { logWarning } from './utils/console';\n\nfunction playerContextFilter(component, contextPropNames) {\n  const warned = {};\n  const childName = component.displayName || component.name;\n  function PlayerContextFilter(props) {\n    return (\n      <FullscreenContext.Consumer>\n        {fullscreenContext => (\n          <PlayerContext.Consumer>\n            {playerContext => {\n              const childProps = { ...props };\n              for (const propName of contextPropNames) {\n                if (playerContext.hasOwnProperty(propName)) {\n                  childProps[propName] = playerContext[propName];\n                } else if (fullscreenContext.hasOwnProperty(propName)) {\n                  childProps[propName] = fullscreenContext[propName];\n                } else if (!warned[propName]) {\n                  logWarning(\n                    \"Prop '\" +\n                      propName +\n                      \"' for component \" +\n                      childName +\n                      ' not found in playerContext or fullscreenContext.'\n                  );\n                  warned[propName] = true;\n                }\n              }\n              return createElement(component, childProps);\n            }}\n          </PlayerContext.Consumer>\n        )}\n      </FullscreenContext.Consumer>\n    );\n  }\n  if (childName) {\n    PlayerContextFilter.displayName = `PlayerContextFilter(${childName})`;\n  }\n  return PlayerContextFilter;\n}\n\nexport default playerContextFilter;\n","import PlayerContextProvider from './PlayerContextProvider';\nimport PlayerContext from './PlayerContext';\nimport PlayerContextGroup from './PlayerContextGroup';\nimport FullscreenContextProvider from './FullscreenContextProvider';\nimport FullscreenContext from './FullscreenContext';\nimport playerContextFilter from './playerContextFilter';\nimport * as PlayerPropTypes from './PlayerPropTypes';\n\nexport { PlayerContextProvider };\nexport const PlayerContextConsumer = PlayerContext.Consumer;\nexport { PlayerContextGroup };\nexport { FullscreenContextProvider };\nexport const FullscreenContextConsumer = FullscreenContext.Consumer;\nexport { playerContextFilter };\nexport { PlayerPropTypes };\n\n// undocumented exports\nexport * from './utils/console';\nexport {\n  default as convertToNumberWithinIntervalBounds\n} from './utils/convertToNumberWithinIntervalBounds';\nexport { default as isPlaylistValid } from './utils/isPlaylistValid';\nexport { repeatStrategyOptions } from './constants';\n"],"sourceRoot":""}