{"version":3,"sources":["webpack://cassetteCore/webpack/universalModuleDefinition","webpack://cassetteCore/webpack/bootstrap","webpack://cassetteCore/external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://cassetteCore/external {\"root\":\"PropTypes\",\"commonjs\":\"prop-types\",\"commonjs2\":\"prop-types\",\"amd\":\"prop-types\"}","webpack://cassetteCore/./packages/core/src/utils/console.js","webpack://cassetteCore/./packages/core/src/utils/createSingleGlobalContext.js","webpack://cassetteCore/./packages/core/node_modules/array-find-index/index.js","webpack://cassetteCore/(webpack)/buildin/global.js","webpack://cassetteCore/./packages/core/src/PlayerContext.js","webpack://cassetteCore/./packages/core/src/GroupContext.js","webpack://cassetteCore/./packages/core/src/constants.js","webpack://cassetteCore/./packages/core/src/PlayerPropTypes.js","webpack://cassetteCore/./packages/core/src/factories/createCustomMediaElement.js","webpack://cassetteCore/./packages/core/src/utils/ShuffleManager.js","webpack://cassetteCore/./packages/core/src/utils/isPlaylistValid.js","webpack://cassetteCore/./packages/core/src/utils/getTrackSources.js","webpack://cassetteCore/./packages/core/src/utils/findTrackIndexByUrl.js","webpack://cassetteCore/./packages/core/src/utils/getSourceList.js","webpack://cassetteCore/./packages/core/src/utils/getTimeRangesArray.js","webpack://cassetteCore/./packages/core/src/utils/getRepeatStrategy.js","webpack://cassetteCore/./packages/core/src/utils/convertToNumberWithinIntervalBounds.js","webpack://cassetteCore/./packages/core/src/PlayerContextProvider.js","webpack://cassetteCore/./packages/core/src/utils/snapshot.js","webpack://cassetteCore/./packages/core/src/PlayerContextGroup.js","webpack://cassetteCore/./packages/core/src/FullscreenContext.js","webpack://cassetteCore/./packages/core/src/FullscreenContextProvider.js","webpack://cassetteCore/./packages/core/src/playerContextFilter.js","webpack://cassetteCore/./packages/core/src/index.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","logWarning","log","console","logError","error","warn","packageVersion","version","_global","window","global","__cassette_contexts__","displayName","defaultValue","ExistingContext","_console__WEBPACK_IMPORTED_MODULE_1__","Context","react__WEBPACK_IMPORTED_MODULE_0__","arr","predicate","ctx","Array","findIndex","TypeError","list","len","length","g","Function","eval","e","PlayerContext","createSingleGlobalContext","GroupContext","repeatStrategyOptions","requiredOnlyUnlessHasProp","propType","altPropName","warnedAboutDefiningBoth","props","propName","componentName","_len","arguments","rest","_key","isRequired","Error","controlKeyword","external_root_PropTypes_commonjs_prop_types_commonjs2_prop_types_amd_prop_types_default","a","oneOf","control","oneOfType","func","crossOriginAttribute","PlayerPropTypes_repeatStrategy","mediaSource","shape","src","string","type","mediaSessionAction","mediaSessionArtwork","sizes","PlayerPropTypes_track","url","sources","arrayOf","title","artist","album","artwork","meta","progressDirection","seekMode","aspectRatio","prop","undefined","split","some","isNaN","loopchange","srcrequest","factories_createCustomMediaElement","media","document","createElement","MutationObserver","dispatchEvent","Event","observe","attributes","attributeFilter","currentSrc","set","srcRequested","_goForward","forwardStack","backStack","currentItem","item","push","pop","_findNextItem","allowMore","nextItem","indexOf","_allItemsMatch","Math","floor","random","utils_ShuffleManager","constructor","options","_list","_forwardStack","_backStack","_currentItem","_allowBackShuffle","Boolean","allowBackShuffle","findNextItem","currentIndex","setCurrentIndex","findPreviousItem","pickNextItem","index","setList","setOptions","keys","clear","utils_isPlaylistValid","playlist","blankSources","utils_getTrackSources","_playlist$index","utils_findTrackIndexByUrl","array_find_index_default","track","source","utils_getSourceList","map","_","utils_getTimeRangesArray","timeRangesObj","timeRangesArray","start","end","utils_getRepeatStrategy","loop","cycle","utils_convertToNumberWithinIntervalBounds","number","min","max","Infinity","playErrorHandler","err","warningMessage","Date","toLocaleTimeString","supportableMediaSessionActions","defaultState","paused","currentTime","seekPreviewTime","seekInProgress","awaitingResumeOnSeekComplete","duration","bufferedRanges","playedRanges","seekableRanges","stalled","awaitingPlay","getGoToTrackState","_ref","prevState","_ref$shouldPlay","shouldPlay","_ref$shouldForceLoad","shouldForceLoad","isNewTrack","activeTrackIndex","trackLoading","awaitingForceLoad","setMediaElementSources","mediaElement","firstChild","removeChild","sourceElement","appendChild","load","PlayerContextProvider_PlayerContextProvider","external_root_React_commonjs_react_commonjs2_react_amd_react_","super","state","_objectSpread","startingTrackIndex","startingTime","volume","defaultVolume","muted","defaultMuted","defaultRepeatStrategy","shuffle","defaultShuffle","playbackRate","defaultPlaybackRate","setVolumeInProgress","autoplay","__playlist__","initialStateSnapshot","snapshot","_snapshot$__unstable_","__unstable__","activeTrackSrc","restoredStateValues","useCurrentTime","newTrackIndex","restoreStateFromSnapshot","lastStableVolume","shuffler","videoHostElementList","videoHostOccupiedCallbacks","Map","videoHostVacatedCallbacks","togglePause","selectTrackIndex","forwardSkip","backSkip","seekPreview","seekComplete","setVolume","setVolumeComplete","toggleMuted","toggleShuffle","setRepeatStrategy","setPlaybackRate","registerVideoHostElement","renderVideoIntoHostElement","unregisterVideoHostElement","updateVideoHostElement","handleMediaPlay","handleMediaPause","handleMediaSrcrequest","handleMediaEnded","handleMediaStalled","handleMediaCanplaythrough","handleMediaTimeupdate","handleMediaLoadedmetadata","handleMediaVolumechange","handleMediaDurationchange","handleMediaProgress","handleMediaLoopchange","handleMediaRatechange","componentDidMount","_this$props","crossOrigin","autoplayDelayInSeconds","mediaElementRef","getPosterImageForTrack","onActiveTrackUpdate","_this$state","setAttribute","addEventListener","mediaContainer","setState","delayTimeout","setTimeout","[object Object]","nextProps","newPlaylist","baseNewState","prevSources","currentSources","componentDidUpdate","prevProps","newSources","prevTrack","newTrack","stealMediaSession","clearTimeout","snapshotUpdateTimeout","onStateSnapshot","getStateSnapshot","componentWillUnmount","removeEventListener","gapLengthTimeout","MediaSession","navigator","mediaSession","metadata","MediaMetadata","action","supportedMediaSessionActions","seekLength","mediaSessionSeekLengthInSeconds","forEach","handler","setActionHandler","hostElement","_ref2","onHostOccupied","onHostVacated","concat","cancelAnimationFrame","videoHostUpdateRaf","requestAnimationFrame","filter","elem","delete","parentNode","playing","oldHostElement","play","onVacated","onOccupied","_this$props2","loadFirstTrackOnPlaylistComplete","_this$state2","goToTrack","gapLengthInSeconds","_this$media","played","_this$media2","buffered","seekable","pause","playPromise","catch","Promise","reject","args","_this$props3","stayOnBackSkipThreshold","_this$state3","previousItem","_this$state4","targetTime","baseStateUpdate","_ref3","_ref4","ended","_this$state5","inProgress","volumeInBounds","repeatStrategy","rate","getControlProps","playerContext","onTogglePause","onSelectTrackIndex","onBackSkip","onForwardSkip","onSeekPreview","onSeekComplete","onSetVolume","onSetVolumeComplete","onToggleMuted","onToggleShuffle","onSetRepeatStrategy","onSetPlaybackRate","render","external_root_React_commonjs_react_commonjs2_react_amd_react_default","ref","hidden","Provider","children","defaultProps","maintainPlaybackRate","PlayerContextProvider_PlayerContextGroupMember","groupContext","registerMediaElement","unregisterMediaElement","_this$props4","_objectWithoutPropertiesLoose","_extends","groupProps","src_PlayerContextProvider","Consumer","src_PlayerContextGroup","enforceOneMediaSourceOnly","mediaElements","element","target","PlayerContextGroup_objectSpread","FullscreenContext","fullscreen","requestFullscreen","requestExitFullscreen","fullscreenStyle","width","height","FullscreenContextProvider_FullscreenContextProvider","handleFullscreenChange","fullscreenElement","fullscreenEnabled","webkitRequestFullscreen","mozRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","mozExitFullscreen","documentFullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","getFullscreenContext","fullscreenContext","style","src_FullscreenContextProvider","src_playerContextFilter","component","contextPropNames","warned","childName","PlayerContextFilter","childProps","playerContextFilter_objectSpread","PlayerContextConsumer","FullscreenContextConsumer"],"mappings":"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","file":"esm/cassette-core.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"prop-types\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"prop-types\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cassetteCore\"] = factory(require(\"react\"), require(\"prop-types\"));\n\telse\n\t\troot[\"cassetteCore\"] = factory(root[\"React\"], root[\"PropTypes\"]);\n})((typeof self !== \"undefined\" ? self : this), function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/* eslint-disable no-console */\n\nconst log = console.log.bind(console);\n\nexport const logError = console.error ? console.error.bind(console) : log;\nexport const logWarning = console.warn ? console.warn.bind(console) : log;\n","import { createContext } from 'react';\n\nimport { logWarning } from './console';\n\nconst packageVersion = require('../../package.json').version;\n\nconst _global = typeof window === 'undefined' ? global : window;\n_global.__cassette_contexts__ = _global.__cassette_contexts__ || {};\n\nfunction createSingleGlobalContext(displayName, defaultValue = null) {\n  const ExistingContext = _global.__cassette_contexts__[displayName];\n  if (ExistingContext) {\n    if (ExistingContext.packageVersion !== packageVersion) {\n      logWarning(\n        `Warning: multiple versions of ${displayName} from the @cassette/core` +\n          ` package have been loaded. v${packageVersion} will be ignored and` +\n          ` v${ExistingContext.packageVersion} will be used instead.`\n      );\n    }\n    return ExistingContext;\n  }\n  const Context = createContext(defaultValue);\n  Context.displayName = displayName;\n  Context.packageVersion = packageVersion;\n  _global.__cassette_contexts__[displayName] = Context;\n  return Context;\n}\n\nexport default createSingleGlobalContext;\n","'use strict';\nmodule.exports = function (arr, predicate, ctx) {\n\tif (typeof Array.prototype.findIndex === 'function') {\n\t\treturn arr.findIndex(predicate, ctx);\n\t}\n\n\tif (typeof predicate !== 'function') {\n\t\tthrow new TypeError('predicate must be a function');\n\t}\n\n\tvar list = Object(arr);\n\tvar len = list.length;\n\n\tif (len === 0) {\n\t\treturn -1;\n\t}\n\n\tfor (var i = 0; i < len; i++) {\n\t\tif (predicate.call(ctx, list[i], i, list)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\nexport default createSingleGlobalContext('PlayerContext');\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\nexport default createSingleGlobalContext('GroupContext');\n","export const repeatStrategyOptions = ['none', 'playlist', 'track'];\n","import PropTypes from 'prop-types';\n\nimport { repeatStrategyOptions } from './constants';\nimport { logWarning } from './utils/console';\n\nfunction requiredOnlyUnlessHasProp(propType, altPropName) {\n  let warnedAboutDefiningBoth = false;\n  function validate(props, propName, componentName, ...rest) {\n    if (propName in props) {\n      if (!warnedAboutDefiningBoth && altPropName in props) {\n        logWarning(\n          `Do not define both the '${propName}' and '${altPropName}' props.`\n        );\n        warnedAboutDefiningBoth = true;\n      }\n      return propType.isRequired(props, propName, componentName, ...rest);\n    }\n    if (!(altPropName in props)) {\n      return new Error(\n        `If the '${altPropName}' prop is not defined, '${propName}' must be.`\n      );\n    }\n  }\n  return validate;\n}\n\nexport const controlKeyword = PropTypes.oneOf([\n  'playpause',\n  'backskip',\n  'forwardskip',\n  'volume',\n  'mute',\n  'repeat',\n  'shuffle',\n  'progress',\n  'progressdisplay',\n  'fullscreen',\n  'spacer'\n]);\n\nexport const control = PropTypes.oneOfType([PropTypes.func, controlKeyword]);\n\nexport const crossOriginAttribute = PropTypes.oneOf([\n  'anonymous',\n  'use-credentials'\n]);\n\nexport const repeatStrategy = PropTypes.oneOf(repeatStrategyOptions);\n\nexport const mediaSource = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n});\n\nexport const mediaSessionAction = PropTypes.oneOf([\n  'play',\n  'pause',\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n]);\n\nexport const mediaSessionArtwork = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  type: PropTypes.string\n});\n\nexport const track = PropTypes.shape({\n  url: requiredOnlyUnlessHasProp(PropTypes.string, 'sources'),\n  sources: requiredOnlyUnlessHasProp(\n    PropTypes.arrayOf(mediaSource.isRequired),\n    'url'\n  ),\n  title: PropTypes.string.isRequired,\n  artist: PropTypes.string,\n  album: PropTypes.string,\n  artwork: PropTypes.arrayOf(mediaSessionArtwork.isRequired),\n  meta: PropTypes.object\n});\n\nexport const progressDirection = PropTypes.oneOf([\n  'left',\n  'right',\n  'up',\n  'down'\n]);\n\nexport const seekMode = PropTypes.oneOf(['paused', 'immediate', 'onrelease']);\n\nexport function aspectRatio(props, propName) {\n  const prop = props[propName];\n  if (prop === undefined) {\n    return;\n  }\n  if (\n    typeof prop !== 'string' ||\n    prop.split(':').length !== 2 ||\n    prop.split(':').some(isNaN)\n  ) {\n    return new Error(\n      `The ${propName} prop should be a string of the form 'x:y'. Example: 16:9`\n    );\n  }\n}\n","const loopchange = 'loopchange';\nconst srcrequest = 'srcrequest';\n\nfunction createCustomMediaElement() {\n  const media = document.createElement('video');\n  new MutationObserver(() => {\n    media.dispatchEvent(new Event(loopchange));\n  }).observe(media, {\n    attributes: true,\n    attributeFilter: ['loop']\n  });\n  // Don't let the media src property get modified directly.\n  // Instead, when it does get set, dispatch an event to be\n  // handled in a way that doesn't conflict with the loaded\n  // playlist.\n  Object.defineProperty(media, 'src', {\n    get: () => media.currentSrc,\n    set: src => {\n      const e = new Event(srcrequest);\n      e.srcRequested = src;\n      media.dispatchEvent(e);\n    }\n  });\n  return media;\n}\n\nexport default createCustomMediaElement;\n","/* ShuffleManager\n *\n * Manages navigation throughout a list which is:\n * - Sourced from another provided list\n * - In random order (except to avoid consecutive duplicates)\n * - Extended endlessly on-the-fly, as needed\n * - Able to have future history overwritten by non-random choices\n * - Able to swap source lists and maintain shuffle order for common members\n */\n\nexport class ShuffleManager {\n  constructor(list, options = {}) {\n    this._list = list;\n    this._forwardStack = [];\n    this._backStack = [];\n    this._currentItem = undefined;\n\n    this._allowBackShuffle = Boolean(options.allowBackShuffle);\n  }\n\n  findNextItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._forwardStack,\n      this._backStack,\n      this._currentItem,\n      true\n    );\n    return this._currentItem;\n  }\n\n  findPreviousItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._backStack,\n      this._forwardStack,\n      this._currentItem,\n      this._allowBackShuffle\n    );\n    return this._currentItem;\n  }\n\n  pickNextItem(index, currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    if (this._list[index] === undefined) {\n      return undefined;\n    }\n    if (this._currentItem !== undefined) {\n      this._backStack.push(this._currentItem);\n    }\n    this._forwardStack.length = 0;\n    this._currentItem = this._list[index];\n    return this._currentItem;\n  }\n\n  setList(list) {\n    this._list = list;\n  }\n\n  setOptions(options) {\n    for (const o of Object.keys(options)) {\n      switch (o) {\n        case 'allowBackShuffle':\n          this[`_${o}`] = Boolean(options[o]);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  setCurrentIndex(currentIndex) {\n    const item = this._list[currentIndex];\n    if (this._currentItem !== item) {\n      this.clear();\n      this._currentItem = item;\n    }\n  }\n\n  clear() {\n    this._forwardStack.length = 0;\n    this._backStack.length = 0;\n    this._currentItem = undefined;\n  }\n}\n\nfunction _goForward(n, forwardStack, backStack, currentItem) {\n  let item = currentItem;\n  for (let i = 0; i < n; i++) {\n    if (!forwardStack.length) {\n      // rollback before erroring (note stack reversal)\n      _goForward(i, backStack, forwardStack, item);\n      throw `Moving ${n} places was not possible!`;\n    }\n    backStack.push(item);\n    item = forwardStack.pop();\n  }\n  return item;\n}\n\nfunction _allItemsMatch(list, item) {\n  if (!list.length) {\n    return false;\n  }\n  for (let i = 0; i < list.length; i++) {\n    if (item !== list[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction _findNextItem(list, forwardStack, backStack, currentItem, allowMore) {\n  let item = currentItem;\n  if (!list.length) {\n    return undefined;\n  }\n  for (let i = 1; i <= forwardStack.length; i++) {\n    if (list.indexOf(forwardStack[forwardStack.length - i]) !== -1) {\n      return _goForward(i, forwardStack, backStack, item);\n    }\n  }\n  if (!allowMore) {\n    return undefined;\n  }\n  if (_allItemsMatch(list, item)) {\n    // we can serve this as our \"next\" item but we\n    // won't modify our history since it's the same.\n    return item;\n  }\n  let nextItem;\n  do {\n    nextItem = list[Math.floor(Math.random() * list.length)];\n  } while (item === nextItem || nextItem === undefined);\n  // if we're skipping items that aren't in our current list we may\n  // have some items in our forwardStack - make sure we move to the front.\n  item = _goForward(forwardStack.length, forwardStack, backStack, item);\n  if (item !== undefined) {\n    backStack.push(item);\n  }\n  return nextItem;\n}\n\nexport default ShuffleManager;\n","function isPlaylistValid(playlist) {\n  return Boolean(playlist && playlist.length);\n}\n\nexport default isPlaylistValid;\n","import isPlaylistValid from './isPlaylistValid';\n\nconst blankSources = [{ src: '' }];\n\nfunction getTrackSources(playlist, index) {\n  if (!isPlaylistValid(playlist)) {\n    return blankSources;\n  }\n  const { sources, url } = playlist[index];\n  if (sources) {\n    return sources.length ? sources : blankSources;\n  }\n  return [{ src: url }];\n}\n\nexport default getTrackSources;\n","import arrayFindIndex from 'array-find-index';\n\nfunction findTrackIndexByUrl(playlist, url) {\n  return arrayFindIndex(playlist, track => {\n    if (track.sources) {\n      return arrayFindIndex(track.sources, source => source.src === url) !== -1;\n    }\n    return track.url && url === track.url;\n  });\n}\n\nexport default findTrackIndexByUrl;\n","import getTrackSources from './getTrackSources';\n\n// collapses playlist into flat list containing\n// the first source url for each track\nfunction getSourceList(playlist) {\n  return (playlist || []).map((_, i) => getTrackSources(playlist, i)[0].src);\n}\n\nexport default getSourceList;\n","function getTimeRangesArray(timeRangesObj) {\n  const timeRangesArray = Array(timeRangesObj.length);\n  for (let i = 0; i < timeRangesObj.length; i++) {\n    timeRangesArray[i] = {\n      start: timeRangesObj.start(i),\n      end: timeRangesObj.end(i)\n    };\n  }\n  return timeRangesArray;\n}\n\nexport default getTimeRangesArray;\n","function getRepeatStrategy(loop, cycle) {\n  if (loop) {\n    return 'track';\n  }\n  if (cycle) {\n    return 'playlist';\n  }\n  return 'none';\n}\n\nexport default getRepeatStrategy;\n","function convertToNumberWithinIntervalBounds(number, min, max) {\n  min = typeof min === 'number' ? min : -Infinity;\n  max = typeof max === 'number' ? max : Infinity;\n  return Math.max(min, Math.min(number, max));\n}\n\nexport default convertToNumberWithinIntervalBounds;\n","import React, { Component, Fragment, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayFindIndex from 'array-find-index';\n\nimport PlayerContext from './PlayerContext';\nimport GroupContext from './GroupContext';\nimport * as PlayerPropTypes from './PlayerPropTypes';\nimport createCustomMediaElement from './factories/createCustomMediaElement';\nimport ShuffleManager from './utils/ShuffleManager';\nimport { getStateSnapshot, restoreStateFromSnapshot } from './utils/snapshot';\nimport getSourceList from './utils/getSourceList';\nimport getTrackSources from './utils/getTrackSources';\nimport getTimeRangesArray from './utils/getTimeRangesArray';\nimport findTrackIndexByUrl from './utils/findTrackIndexByUrl';\nimport isPlaylistValid from './utils/isPlaylistValid';\nimport getRepeatStrategy from './utils/getRepeatStrategy';\nimport convertToNumberWithinIntervalBounds from './utils/convertToNumberWithinIntervalBounds';\nimport { logError, logWarning } from './utils/console';\nimport { repeatStrategyOptions } from './constants';\n\nfunction playErrorHandler(err) {\n  logError(err);\n  if (err.name === 'NotAllowedError') {\n    const warningMessage =\n      'Media playback failed at ' +\n      new Date().toLocaleTimeString() +\n      '! (Perhaps autoplay is disabled in this browser.)';\n    logWarning(warningMessage);\n  }\n}\n\n// Existing Media Session API implementations have default handlers\n// for play/pause, and may yield unexpected behavior if custom\n// play/pause handlers are defined - so let's leave them be.\nconst supportableMediaSessionActions = [\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n];\n\nconst defaultState = {\n  // indicates whether media player should be paused\n  paused: true,\n  // elapsed time for active track, in seconds\n  currentTime: 0,\n  // The most recent targeted time, in seconds, for seek preview\n  seekPreviewTime: 0,\n  /* true if the user is currently dragging the mouse\n   * to seek a new track position\n   */\n  seekInProgress: false,\n  /* true if media was playing when seek previewing began,\n   * it was paused, and it should be resumed on seek\n   * complete\n   */\n  awaitingResumeOnSeekComplete: false,\n  // the duration in seconds of the loaded track\n  duration: 0,\n  // array describing the buffered ranges in the loaded track\n  bufferedRanges: [],\n  // array describing the already-played ranges in the loaded track\n  playedRanges: [],\n  // array describing the seekable ranges in the loaded track\n  seekableRanges: [],\n  // true if the media is currently stalled pending data buffering\n  stalled: false,\n  // true if the active track should play on the next componentDidUpdate\n  awaitingPlay: false\n};\n\n// assumes playlist is valid\nfunction getGoToTrackState({\n  prevState,\n  index,\n  shouldPlay = true,\n  shouldForceLoad = false\n}) {\n  const isNewTrack = prevState.activeTrackIndex !== index;\n  return {\n    activeTrackIndex: index,\n    trackLoading: isNewTrack,\n    currentTime: 0,\n    loop: isNewTrack || shouldForceLoad ? false : prevState.loop,\n    awaitingPlay: Boolean(shouldPlay),\n    paused: !shouldPlay,\n    awaitingForceLoad: Boolean(shouldForceLoad)\n  };\n}\n\nfunction setMediaElementSources(mediaElement, sources) {\n  // remove current sources\n  let firstChild;\n  while ((firstChild = mediaElement.firstChild)) {\n    mediaElement.removeChild(firstChild);\n  }\n  // add new sources\n  for (const source of sources) {\n    const sourceElement = document.createElement('source');\n    sourceElement.src = source.src;\n    if (source.type) {\n      sourceElement.type = source.type;\n    }\n    mediaElement.appendChild(sourceElement);\n  }\n  // cancel playback and re-scan new sources\n  mediaElement.load();\n}\n\n/**\n * Wraps an area which shares a common [`playerContext`](#playercontext)\n */\nexport class PlayerContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...defaultState,\n      // index matching requested track (whether track has loaded or not)\n      activeTrackIndex: convertToNumberWithinIntervalBounds(\n        props.startingTrackIndex,\n        0\n      ),\n      // whether we're waiting on loading metadata for the active track\n      trackLoading: isPlaylistValid(props.playlist),\n      // the current timestamp on the active track in seconds\n      currentTime: convertToNumberWithinIntervalBounds(props.startingTime, 0),\n      // the latest volume of the media, between 0 and 1.\n      volume: convertToNumberWithinIntervalBounds(props.defaultVolume, 0, 1),\n      // true if the media has been muted\n      muted: props.defaultMuted,\n      // whether to loop the active track\n      loop: props.defaultRepeatStrategy === 'track',\n      // true if playlist should continue at start after completion\n      cycle: props.defaultRepeatStrategy === 'playlist',\n      // whether to randomly pick next track from playlist after one finishes\n      shuffle: props.defaultShuffle,\n      // Rate at which media should be played. 1.0 is normal speed.\n      playbackRate: props.defaultPlaybackRate,\n      // true if user is currently dragging mouse to change the volume\n      setVolumeInProgress: false,\n      // initialize awaitingPlay from autoplay prop\n      awaitingPlay: props.autoplay && isPlaylistValid(props.playlist),\n      awaitingForceLoad: false,\n      // playlist prop copied to state (for getDerivedStateFromProps)\n      __playlist__: props.playlist,\n      // load overrides from previously-captured state snapshot\n      ...(props.initialStateSnapshot\n        ? restoreStateFromSnapshot(props.initialStateSnapshot, props)\n        : {})\n    };\n\n    // volume at last time we were unmuted and not actively setting volume\n    this.lastStableVolume = this.state.volume;\n\n    // used to keep track of play history when we are shuffling\n    this.shuffler = new ShuffleManager(getSourceList(props.playlist), {\n      allowBackShuffle: props.allowBackShuffle\n    });\n\n    // html media element used for playback\n    this.media = null;\n\n    this.videoHostElementList = [];\n    this.videoHostOccupiedCallbacks = new Map();\n    this.videoHostVacatedCallbacks = new Map();\n\n    // bind callback methods to pass to descendant elements\n    this.togglePause = this.togglePause.bind(this);\n    this.selectTrackIndex = this.selectTrackIndex.bind(this);\n    this.forwardSkip = this.forwardSkip.bind(this);\n    this.backSkip = this.backSkip.bind(this);\n    this.seekPreview = this.seekPreview.bind(this);\n    this.seekComplete = this.seekComplete.bind(this);\n    this.setVolume = this.setVolume.bind(this);\n    this.setVolumeComplete = this.setVolumeComplete.bind(this);\n    this.toggleMuted = this.toggleMuted.bind(this);\n    this.toggleShuffle = this.toggleShuffle.bind(this);\n    this.setRepeatStrategy = this.setRepeatStrategy.bind(this);\n    this.setPlaybackRate = this.setPlaybackRate.bind(this);\n    this.registerVideoHostElement = this.registerVideoHostElement.bind(this);\n    this.renderVideoIntoHostElement = this.renderVideoIntoHostElement.bind(\n      this\n    );\n    this.unregisterVideoHostElement = this.unregisterVideoHostElement.bind(\n      this\n    );\n    this.updateVideoHostElement = this.updateVideoHostElement.bind(this);\n\n    // bind media event handlers\n    this.handleMediaPlay = this.handleMediaPlay.bind(this);\n    this.handleMediaPause = this.handleMediaPause.bind(this);\n    this.handleMediaSrcrequest = this.handleMediaSrcrequest.bind(this);\n    this.handleMediaEnded = this.handleMediaEnded.bind(this);\n    this.handleMediaStalled = this.handleMediaStalled.bind(this);\n    this.handleMediaCanplaythrough = this.handleMediaCanplaythrough.bind(this);\n    this.handleMediaTimeupdate = this.handleMediaTimeupdate.bind(this);\n    this.handleMediaLoadedmetadata = this.handleMediaLoadedmetadata.bind(this);\n    this.handleMediaVolumechange = this.handleMediaVolumechange.bind(this);\n    this.handleMediaDurationchange = this.handleMediaDurationchange.bind(this);\n    this.handleMediaProgress = this.handleMediaProgress.bind(this);\n    this.handleMediaLoopchange = this.handleMediaLoopchange.bind(this);\n    this.handleMediaRatechange = this.handleMediaRatechange.bind(this);\n  }\n\n  componentDidMount() {\n    const media = (this.media = createCustomMediaElement());\n\n    const {\n      defaultPlaybackRate,\n      crossOrigin,\n      playlist,\n      autoplayDelayInSeconds,\n      mediaElementRef,\n      getPosterImageForTrack,\n      onActiveTrackUpdate\n    } = this.props;\n    const {\n      volume,\n      muted,\n      playbackRate,\n      loop,\n      activeTrackIndex,\n      awaitingPlay\n    } = this.state;\n\n    // initialize media properties\n    // We used to set currentTime here.. now waiting for loadedmetadata.\n    // This avoids an issue where some browsers ignore or delay currentTime\n    // updates when in the HAVE_NOTHING state.\n    media.defaultPlaybackRate = defaultPlaybackRate;\n    media.crossOrigin = crossOrigin;\n    media.volume = volume;\n    media.muted = muted;\n    media.playbackRate = playbackRate;\n    media.loop = loop;\n    media.setAttribute('playsinline', '');\n    media.setAttribute('webkit-playsinline', '');\n    media.setAttribute('preload', 'metadata');\n    media.setAttribute(\n      'poster',\n      getPosterImageForTrack(playlist[activeTrackIndex])\n    );\n\n    // add listeners for media events\n    media.addEventListener('play', this.handleMediaPlay);\n    media.addEventListener('pause', this.handleMediaPause);\n    media.addEventListener('ended', this.handleMediaEnded);\n    media.addEventListener('stalled', this.handleMediaStalled);\n    media.addEventListener('canplaythrough', this.handleMediaCanplaythrough);\n    media.addEventListener('timeupdate', this.handleMediaTimeupdate);\n    media.addEventListener('loadedmetadata', this.handleMediaLoadedmetadata);\n    media.addEventListener('volumechange', this.handleMediaVolumechange);\n    media.addEventListener('durationchange', this.handleMediaDurationchange);\n    media.addEventListener('progress', this.handleMediaProgress);\n    media.addEventListener('ratechange', this.handleMediaRatechange);\n    // add listeners for special events\n    media.addEventListener('srcrequest', this.handleMediaSrcrequest);\n    media.addEventListener('loopchange', this.handleMediaLoopchange);\n\n    // set source elements for current track\n    setMediaElementSources(media, getTrackSources(playlist, activeTrackIndex));\n\n    // initially mount media element in the hidden container (this may change)\n    this.mediaContainer.appendChild(media);\n\n    if (awaitingPlay) {\n      this.setState({\n        awaitingPlay: false\n      });\n      this.delayTimeout = setTimeout(() => {\n        this.togglePause(false);\n      }, autoplayDelayInSeconds * 1000);\n    }\n\n    if (mediaElementRef) {\n      mediaElementRef(media);\n    }\n\n    if (onActiveTrackUpdate) {\n      onActiveTrackUpdate(playlist[activeTrackIndex], activeTrackIndex);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const newPlaylist = nextProps.playlist;\n\n    if (newPlaylist === prevState.__playlist__) {\n      // reference comparison is equal so we'll\n      // assume the playlist is unchanged.\n      return null;\n    }\n\n    const baseNewState = {\n      __playlist__: newPlaylist\n    };\n\n    // check if the new playlist is invalid\n    if (!isPlaylistValid(newPlaylist)) {\n      return {\n        ...defaultState,\n        ...baseNewState,\n        activeTrackIndex: 0,\n        trackLoading: false\n      };\n    }\n\n    // check if the activeTrackIndex doesn't need to be updated\n    const prevSources = getTrackSources(\n      prevState.__playlist__,\n      prevState.activeTrackIndex\n    );\n\n    if (newPlaylist[prevState.activeTrackIndex]) {\n      // the sources if we stay on the same track index\n      const currentSources = getTrackSources(\n        newPlaylist,\n        prevState.activeTrackIndex\n      );\n      // non-comprehensive but probably accurate check\n      if (prevSources[0].src === currentSources[0].src) {\n        // our active track index already matches\n        return baseNewState;\n      }\n    }\n\n    /* if the track we're already playing is in the new playlist, update the\n     * activeTrackIndex.\n     */\n    const newTrackIndex = findTrackIndexByUrl(newPlaylist, prevSources[0].src);\n    if (newTrackIndex !== -1) {\n      return {\n        ...baseNewState,\n        activeTrackIndex: newTrackIndex\n      };\n    }\n\n    // if not, then load the first track in the new playlist, and pause.\n    return {\n      ...baseNewState,\n      ...getGoToTrackState({ prevState, index: 0, shouldPlay: false })\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.media.defaultPlaybackRate = this.props.defaultPlaybackRate;\n    this.media.crossOrigin = this.props.crossOrigin;\n\n    this.shuffler.setList(getSourceList(this.props.playlist));\n    this.shuffler.setOptions({\n      allowBackShuffle: this.props.allowBackShuffle\n    });\n\n    const prevSources = getTrackSources(\n      prevProps.playlist,\n      prevState.activeTrackIndex\n    );\n    const newSources = getTrackSources(\n      this.props.playlist,\n      this.state.activeTrackIndex\n    );\n    const prevTrack = prevProps.playlist[prevState.activeTrackIndex];\n    const newTrack = this.props.playlist[this.state.activeTrackIndex];\n    if (\n      this.state.awaitingForceLoad ||\n      prevSources[0].src !== newSources[0].src\n    ) {\n      setMediaElementSources(this.media, newSources);\n      this.media.setAttribute(\n        'poster',\n        this.props.getPosterImageForTrack(newTrack)\n      );\n      this.setState({\n        awaitingForceLoad: false\n      });\n      if (!this.state.shuffle) {\n        // after toggling off shuffle, we defer clearing the shuffle\n        // history until we actually change tracks - if the user quickly\n        // toggles  shuffle off then back on again, we don't want to have\n        // lost our history.\n        this.shuffler.clear();\n      }\n    }\n\n    if (this.props.onActiveTrackUpdate && prevTrack !== newTrack) {\n      this.props.onActiveTrackUpdate(newTrack, this.state.activeTrackIndex);\n    }\n\n    if (prevProps !== this.props && !this.media.paused) {\n      // update running media session based on new props\n      this.stealMediaSession();\n    }\n\n    if (this.state.awaitingPlay) {\n      this.setState({\n        awaitingPlay: false\n      });\n      // media.currentSrc is updated asynchronously so we should\n      // play async to avoid weird intermediate state issues\n      setTimeout(() => {\n        this.togglePause(false);\n      });\n    }\n\n    clearTimeout(this.snapshotUpdateTimeout);\n    this.snapshotUpdateTimeout = setTimeout(() => {\n      if (this.props.onStateSnapshot) {\n        this.props.onStateSnapshot(getStateSnapshot(this.state));\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    const { media } = this;\n    // remove listeners for media events\n    media.removeEventListener('play', this.handleMediaPlay);\n    media.removeEventListener('pause', this.handleMediaPause);\n    media.removeEventListener('ended', this.handleMediaEnded);\n    media.removeEventListener('stalled', this.handleMediaStalled);\n    media.removeEventListener('canplaythrough', this.handleMediaCanplaythrough);\n    media.removeEventListener('timeupdate', this.handleMediaTimeupdate);\n    media.removeEventListener('loadedmetadata', this.handleMediaLoadedmetadata);\n    media.removeEventListener('volumechange', this.handleMediaVolumechange);\n    media.removeEventListener('durationchange', this.handleMediaDurationchange);\n    media.removeEventListener('progress', this.handleMediaProgress);\n    media.removeEventListener('ratechange', this.handleMediaRatechange);\n    // remove special event listeners on the media element\n    media.removeEventListener('srcrequest', this.handleMediaSrcrequest);\n    media.removeEventListener('loopchange', this.handleMediaLoopchange);\n\n    clearTimeout(this.gapLengthTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  stealMediaSession() {\n    if (\n      // eslint-disable-next-line no-undef\n      !(window.MediaSession && navigator.mediaSession instanceof MediaSession)\n    ) {\n      return;\n    }\n    // eslint-disable-next-line no-undef\n    navigator.mediaSession.metadata = new MediaMetadata(\n      this.props.playlist[this.state.activeTrackIndex]\n    );\n    supportableMediaSessionActions\n      .map(action => {\n        if (this.props.supportedMediaSessionActions.indexOf(action) === -1) {\n          return null;\n        }\n        const seekLength = this.props.mediaSessionSeekLengthInSeconds;\n        switch (action) {\n          case 'play':\n            return this.togglePause.bind(this, false);\n          case 'pause':\n            return this.togglePause.bind(this, true);\n          case 'previoustrack':\n            return this.backSkip;\n          case 'nexttrack':\n            return this.forwardSkip;\n          case 'seekbackward':\n            return () => (this.media.currentTime -= seekLength);\n          case 'seekforward':\n            return () => (this.media.currentTime += seekLength);\n          default:\n            return undefined;\n        }\n      })\n      .forEach((handler, i) => {\n        navigator.mediaSession.setActionHandler(\n          supportableMediaSessionActions[i],\n          handler\n        );\n      });\n  }\n\n  registerVideoHostElement(hostElement, { onHostOccupied, onHostVacated }) {\n    this.videoHostElementList = this.videoHostElementList.concat(hostElement);\n    this.videoHostOccupiedCallbacks.set(hostElement, onHostOccupied);\n    this.videoHostVacatedCallbacks.set(hostElement, onHostVacated);\n  }\n\n  renderVideoIntoHostElement(hostElement) {\n    if (this.videoHostElementList.indexOf(hostElement) === -1) {\n      return;\n    }\n    cancelAnimationFrame(this.videoHostUpdateRaf);\n    this.videoHostUpdateRaf = requestAnimationFrame(() =>\n      this.updateVideoHostElement(hostElement)\n    );\n  }\n\n  unregisterVideoHostElement(hostElement) {\n    this.videoHostElementList = this.videoHostElementList.filter(\n      elem => elem !== hostElement\n    );\n    this.videoHostOccupiedCallbacks.delete(hostElement);\n    this.videoHostVacatedCallbacks.delete(hostElement);\n    if (this.media.parentNode === hostElement) {\n      this.updateVideoHostElement();\n    }\n  }\n\n  updateVideoHostElement(hostElement) {\n    if (!hostElement) {\n      hostElement = this.videoHostElementList[0] || this.mediaContainer;\n    } else {\n      // move hostElement to front of list\n      this.videoHostElementList = [hostElement].concat(\n        this.videoHostElementList.filter(elem => elem !== hostElement)\n      );\n    }\n    const playing = !this.media.paused;\n    const oldHostElement = this.media.parentNode;\n    if (hostElement === oldHostElement) {\n      return;\n    }\n    hostElement.appendChild(this.media);\n    // according to the HTML spec playback should continue, but\n    // some browsers pause the element whenever it is moved around, so\n    // let's make sure playback resumes if that's the case.\n    if (playing && this.media.paused) {\n      this.media.play();\n    }\n    const onVacated = this.videoHostVacatedCallbacks.get(oldHostElement);\n    if (onVacated) {\n      onVacated(this.media);\n    }\n    const onOccupied = this.videoHostOccupiedCallbacks.get(hostElement);\n    if (onOccupied) {\n      onOccupied(this.media);\n    }\n  }\n\n  handleMediaPlay() {\n    this.setState(state => (state.paused === false ? null : { paused: false }));\n    this.stealMediaSession();\n  }\n\n  handleMediaPause() {\n    this.setState(state => (state.paused === true ? null : { paused: true }));\n  }\n\n  handleMediaSrcrequest(e) {\n    const { playlist } = this.props;\n    const sources = getTrackSources(playlist, this.state.activeTrackIndex);\n    if (arrayFindIndex(sources, s => s.src === e.srcRequested) !== -1) {\n      // we're good! nothing to update.\n      return;\n    }\n    // looks like 'src' was set from outside our component.\n    // let's see if we can use it.\n    const newTrackIndex = findTrackIndexByUrl(playlist, e.srcRequested);\n    if (newTrackIndex === -1) {\n      logError(\n        `Source '${e.srcRequested}' does not exist in the loaded playlist. ` +\n          `Make sure you've updated the 'playlist' prop to ` +\n          `PlayerContextProvider before you select this track!`\n      );\n      return;\n    }\n    this.selectTrackIndex(newTrackIndex);\n  }\n\n  handleMediaEnded() {\n    if (this.state.seekInProgress) {\n      // nothing to do if we're in the middle of a seek\n      // (this can happen if we're in seekMode: immediate)\n      return;\n    }\n    clearTimeout(this.gapLengthTimeout);\n    const { playlist, loadFirstTrackOnPlaylistComplete } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    const { cycle, activeTrackIndex } = this.state;\n    if (!cycle && activeTrackIndex + 1 >= playlist.length) {\n      if (loadFirstTrackOnPlaylistComplete) {\n        this.goToTrack({ index: 0, shouldPlay: false, shouldForceLoad: true });\n      }\n      return;\n    }\n    this.gapLengthTimeout = setTimeout(\n      this.forwardSkip,\n      this.props.gapLengthInSeconds * 1000\n    );\n  }\n\n  handleMediaStalled() {\n    this.setState(state => (state.stalled === true ? null : { stalled: true }));\n  }\n\n  handleMediaCanplaythrough() {\n    this.setState(\n      state => (state.stalled === false ? null : { stalled: false })\n    );\n  }\n\n  handleMediaTimeupdate() {\n    const { currentTime, played } = this.media;\n    if (this.state.trackLoading) {\n      // correct currentTime to preset, if applicable, during load\n      this.media.currentTime = this.state.currentTime;\n      return;\n    }\n    this.setState({\n      currentTime,\n      playedRanges: getTimeRangesArray(played)\n    });\n  }\n\n  handleMediaLoadedmetadata() {\n    if (this.media.currentTime !== this.state.currentTime) {\n      this.media.currentTime = this.state.currentTime;\n    }\n    this.setState(\n      state => (state.trackLoading === false ? null : { trackLoading: false })\n    );\n  }\n\n  handleMediaVolumechange() {\n    const { volume, muted } = this.media;\n    this.setState({ volume, muted });\n  }\n\n  handleMediaDurationchange() {\n    const { duration } = this.media;\n    this.setState({ duration });\n  }\n\n  handleMediaProgress() {\n    this.setState({\n      bufferedRanges: getTimeRangesArray(this.media.buffered),\n      seekableRanges: getTimeRangesArray(this.media.seekable)\n    });\n  }\n\n  handleMediaLoopchange() {\n    const { loop } = this.media;\n    this.setState(state => (state.loop === loop ? null : { loop }));\n  }\n\n  handleMediaRatechange() {\n    const { playbackRate } = this.media;\n    this.setState(\n      state => (state.playbackRate === playbackRate ? null : { playbackRate })\n    );\n  }\n\n  togglePause(value) {\n    clearTimeout(this.delayTimeout);\n    const pause = typeof value === 'boolean' ? value : !this.state.paused;\n    if (pause) {\n      this.media.pause();\n      return;\n    }\n    if (!this.media.currentSrc) {\n      return;\n    }\n    try {\n      const playPromise = this.media.play();\n      if (playPromise && typeof playPromise.catch === 'function') {\n        playPromise\n          .catch(err => {\n            // AbortError is pretty much always called because we're skipping\n            // tracks quickly or hitting pause before a track has a chance to\n            // play. It's pretty safe to just ignore these error messages.\n            if (err.name !== 'AbortError') {\n              return Promise.reject(err);\n            }\n          })\n          .catch(playErrorHandler);\n      }\n    } catch (err) {\n      playErrorHandler(err);\n    }\n  }\n\n  // assumes playlist is valid - don't call without checking\n  goToTrack(args) {\n    clearTimeout(this.delayTimeout);\n    this.setState(prevState => getGoToTrackState({ prevState, ...args }));\n  }\n\n  selectTrackIndex(index) {\n    const { playlist } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    if (index < 0 || index > playlist.length) {\n      logWarning(`Playlist index ${index} is out of bounds!`);\n      return;\n    }\n    if (this.state.shuffle) {\n      this.shuffler.pickNextItem(index, this.state.activeTrackIndex);\n    }\n    this.goToTrack({ index });\n  }\n\n  backSkip() {\n    const { playlist, stayOnBackSkipThreshold } = this.props;\n    const { media } = this;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      media.currentTime >= stayOnBackSkipThreshold ||\n      (!cycle && activeTrackIndex < 1)\n    ) {\n      media.currentTime = 0;\n      return;\n    }\n    let index;\n    if (shuffle) {\n      const previousItem = this.shuffler.findPreviousItem(activeTrackIndex);\n      if (previousItem === undefined) {\n        // if we aren't allowing backShuffle then we'll hit a stopping point.\n        media.currentTime = 0;\n        return;\n      }\n      index = findTrackIndexByUrl(playlist, previousItem);\n    } else {\n      index = activeTrackIndex - 1;\n      if (index < 0) {\n        index = playlist.length - 1;\n      }\n    }\n    this.goToTrack({ index, shouldForceLoad: true });\n  }\n\n  forwardSkip() {\n    const { playlist } = this.props;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      (!cycle && activeTrackIndex + 1 >= playlist.length)\n    ) {\n      return;\n    }\n    let index;\n    if (shuffle) {\n      index = findTrackIndexByUrl(\n        playlist,\n        this.shuffler.findNextItem(activeTrackIndex)\n      );\n    } else {\n      index = activeTrackIndex + 1;\n      if (index >= playlist.length) {\n        index = 0;\n      }\n    }\n    this.goToTrack({ index, shouldForceLoad: true });\n  }\n\n  seekPreview(targetTime) {\n    if (!isPlaylistValid(this.props.playlist)) {\n      return;\n    }\n    const baseStateUpdate = {\n      seekPreviewTime: targetTime,\n      seekInProgress: true\n    };\n    switch (this.props.seekMode) {\n      case 'paused':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true\n        }));\n        this.media.currentTime = targetTime;\n        if (!this.state.paused) {\n          this.togglePause(true);\n        }\n        break;\n      case 'immediate':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true\n        }));\n        this.media.currentTime = targetTime;\n        if (this.state.awaitingResumeOnSeekComplete && !this.media.ended) {\n          // if we earlier encountered an 'ended' state,\n          // un-pausing becomes necessary to resume playback\n          this.togglePause(false);\n        }\n        break;\n      case 'onrelease':\n        this.setState(baseStateUpdate);\n        break;\n    }\n  }\n\n  seekComplete(targetTime) {\n    const { seekPreviewTime, awaitingResumeOnSeekComplete } = this.state;\n    const baseStateUpdate = {\n      seekInProgress: false,\n      awaitingResumeOnSeekComplete: false\n    };\n    const currentTime =\n      typeof targetTime === 'number' ? targetTime : seekPreviewTime;\n\n    if (isNaN(currentTime)) {\n      this.setState(baseStateUpdate);\n      return;\n    }\n    this.setState({\n      ...baseStateUpdate,\n      /* we'll update currentTime on the media listener hook anyway,\n       * but that might not happen for a bit... so the optimistic update\n       * helps us avoid the progress bar jumping around and confusing the user.\n       * https://github.com/benwiley4000/cassette/issues/209\n       */\n      currentTime\n    });\n    this.media.currentTime = currentTime;\n    if (awaitingResumeOnSeekComplete) {\n      if (this.media.ended) {\n        this.forwardSkip();\n      } else {\n        this.togglePause(false);\n      }\n    }\n  }\n\n  setVolume(volume, inProgress = true) {\n    if (inProgress && !this.state.setVolumeInProgress) {\n      this.setState({\n        setVolumeInProgress: true\n      });\n    }\n    const volumeInBounds = convertToNumberWithinIntervalBounds(volume, 0, 1);\n    this.media.muted = volumeInBounds === 0 ? true : false;\n    this.media.volume = volumeInBounds;\n  }\n\n  setVolumeComplete(volume) {\n    if (typeof volume === 'number') {\n      this.setVolume(volume, false);\n    }\n    this.setState({\n      setVolumeInProgress: false\n    });\n    if (!this.media.muted) {\n      this.lastStableVolume = this.media.volume;\n    }\n  }\n\n  toggleMuted(value) {\n    const muted = typeof value === 'boolean' ? value : !this.state.muted;\n    this.media.muted = muted;\n    if (!muted) {\n      this.media.volume = this.lastStableVolume;\n    }\n  }\n\n  toggleShuffle(value) {\n    const shuffle = typeof value === 'boolean' ? value : !this.state.shuffle;\n    this.setState({ shuffle });\n  }\n\n  setRepeatStrategy(repeatStrategy) {\n    if (repeatStrategyOptions.indexOf(repeatStrategy) === -1) {\n      logWarning(\n        'repeatStrategy \"' +\n          repeatStrategy +\n          '\" is not one of: ' +\n          repeatStrategyOptions.split(', ') +\n          '.'\n      );\n      return;\n    }\n    switch (repeatStrategy) {\n      case 'track':\n        // state update is automatic\n        this.media.loop = true;\n        break;\n      case 'playlist':\n        this.setState({\n          loop: false,\n          cycle: true\n        });\n        this.media.loop = false;\n        break;\n      case 'none':\n        this.setState({\n          loop: false,\n          cycle: false\n        });\n        this.media.loop = false;\n        break;\n    }\n  }\n\n  setPlaybackRate(rate) {\n    this.media.playbackRate = rate;\n  }\n\n  getControlProps() {\n    const { props, state } = this;\n    const playerContext = {\n      playlist: props.playlist,\n      activeTrackIndex: state.activeTrackIndex,\n      trackLoading: state.trackLoading,\n      paused: state.paused,\n      currentTime: state.currentTime,\n      seekPreviewTime: state.seekPreviewTime,\n      seekInProgress: state.seekInProgress,\n      awaitingResumeOnSeekComplete: state.awaitingResumeOnSeekComplete,\n      duration: state.duration,\n      bufferedRanges: state.bufferedRanges,\n      playedRanges: state.playedRanges,\n      seekableRanges: state.seekableRanges,\n      volume: state.volume,\n      muted: state.muted,\n      shuffle: state.shuffle,\n      stalled: state.stalled,\n      playbackRate: state.playbackRate,\n      setVolumeInProgress: state.setVolumeInProgress,\n      repeatStrategy: getRepeatStrategy(state.loop, state.cycle),\n      registerVideoHostElement: this.registerVideoHostElement,\n      renderVideoIntoHostElement: this.renderVideoIntoHostElement,\n      unregisterVideoHostElement: this.unregisterVideoHostElement,\n      onTogglePause: this.togglePause,\n      onSelectTrackIndex: this.selectTrackIndex,\n      onBackSkip: this.backSkip,\n      onForwardSkip: this.forwardSkip,\n      onSeekPreview: this.seekPreview,\n      onSeekComplete: this.seekComplete,\n      onSetVolume: this.setVolume,\n      onSetVolumeComplete: this.setVolumeComplete,\n      onToggleMuted: this.toggleMuted,\n      onToggleShuffle: this.toggleShuffle,\n      onSetRepeatStrategy: this.setRepeatStrategy,\n      onSetPlaybackRate: this.setPlaybackRate\n    };\n    if (this.playerContext) {\n      // only update this.playerContext if something has changed\n      for (const key of Object.keys(this.playerContext)) {\n        if (playerContext[key] !== this.playerContext[key]) {\n          this.playerContext = playerContext;\n          break;\n        }\n      }\n    } else {\n      // first time - nothing to compare\n      this.playerContext = playerContext;\n    }\n    return this.playerContext;\n  }\n\n  render() {\n    const playerContext = this.getControlProps();\n    return (\n      <Fragment>\n        <div ref={elem => (this.mediaContainer = elem)} hidden />\n        <PlayerContext.Provider value={playerContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(playerContext)\n            : this.props.children}\n        </PlayerContext.Provider>\n      </Fragment>\n    );\n  }\n}\n\nPlayerContextProvider.propTypes = {\n  playlist: PropTypes.arrayOf(PlayerPropTypes.track.isRequired).isRequired,\n  autoplay: PropTypes.bool.isRequired,\n  autoplayDelayInSeconds: PropTypes.number.isRequired,\n  gapLengthInSeconds: PropTypes.number.isRequired,\n  crossOrigin: PlayerPropTypes.crossOriginAttribute,\n  defaultVolume: PropTypes.number.isRequired,\n  defaultMuted: PropTypes.bool,\n  defaultRepeatStrategy: PlayerPropTypes.repeatStrategy.isRequired,\n  defaultShuffle: PropTypes.bool,\n  defaultPlaybackRate: PropTypes.number.isRequired,\n  startingTime: PropTypes.number.isRequired,\n  startingTrackIndex: PropTypes.number.isRequired,\n  loadFirstTrackOnPlaylistComplete: PropTypes.bool,\n  seekMode: PlayerPropTypes.seekMode.isRequired,\n  maintainPlaybackRate: PropTypes.bool.isRequired,\n  allowBackShuffle: PropTypes.bool,\n  stayOnBackSkipThreshold: PropTypes.number.isRequired,\n  supportedMediaSessionActions: PropTypes.arrayOf(\n    PlayerPropTypes.mediaSessionAction.isRequired\n  ).isRequired,\n  mediaSessionSeekLengthInSeconds: PropTypes.number.isRequired,\n  mediaElementRef: PropTypes.func,\n  initialStateSnapshot: PropTypes.shape({\n    __unstable__: PropTypes.object.isRequired\n  }),\n  onStateSnapshot: PropTypes.func,\n  onActiveTrackUpdate: PropTypes.func,\n  getPosterImageForTrack: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nPlayerContextProvider.defaultProps = {\n  autoplay: false,\n  autoplayDelayInSeconds: 0,\n  gapLengthInSeconds: 0,\n  defaultVolume: 1,\n  defaultMuted: false,\n  defaultRepeatStrategy: 'playlist',\n  defaultShuffle: false,\n  defaultPlaybackRate: 1,\n  startingTime: 0,\n  startingTrackIndex: 0,\n  loadFirstTrackOnPlaylistComplete: true,\n  seekMode: 'immediate',\n  maintainPlaybackRate: false,\n  allowBackShuffle: false,\n  stayOnBackSkipThreshold: 5,\n  supportedMediaSessionActions: ['play', 'pause', 'previoustrack', 'nexttrack'],\n  mediaSessionSeekLengthInSeconds: 10,\n  getPosterImageForTrack(track) {\n    return track && track.artwork ? track.artwork[0].src : '';\n  }\n};\n\nexport class PlayerContextGroupMember extends Component {\n  componentDidMount() {\n    this.props.groupContext.registerMediaElement(this.mediaElement);\n  }\n\n  componentWillUnmount() {\n    this.props.groupContext.unregisterMediaElement(this.mediaElement);\n  }\n\n  render() {\n    const { groupContext, props } = this.props;\n    const { mediaElementRef, ...rest } = props;\n    return (\n      <PlayerContextProvider\n        {...groupContext.groupProps}\n        {...rest}\n        mediaElementRef={ref => {\n          if (mediaElementRef) {\n            mediaElementRef(ref);\n          }\n          this.mediaElement = ref;\n        }}\n      />\n    );\n  }\n}\n\nPlayerContextGroupMember.propTypes = {\n  groupContext: PropTypes.shape({\n    groupProps: PropTypes.object.isRequired,\n    registerMediaElement: PropTypes.func.isRequired,\n    unregisterMediaElement: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction PlayerContextGroupConsumer(props) {\n  return (\n    <GroupContext.Consumer>\n      {groupContext => {\n        if (!groupContext) {\n          return createElement(PlayerContextProvider, props);\n        }\n        return createElement(PlayerContextGroupMember, {\n          groupContext,\n          props\n        });\n      }}\n    </GroupContext.Consumer>\n  );\n}\n\nexport default PlayerContextGroupConsumer;\n","import isPlaylistValid from './isPlaylistValid';\nimport getTrackSources from './getTrackSources';\nimport findTrackIndexByUrl from './findTrackIndexByUrl';\n\nexport function getStateSnapshot(state) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    __playlist__\n  } = state;\n  return {\n    __unstable__: {\n      paused,\n      currentTime,\n      activeTrackIndex,\n      volume,\n      muted,\n      loop,\n      cycle,\n      shuffle,\n      playbackRate,\n      activeTrackSrc: isPlaylistValid(__playlist__)\n        ? getTrackSources(__playlist__, activeTrackIndex)[0].src\n        : null\n    }\n  };\n}\n\nexport function restoreStateFromSnapshot(snapshot, props) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    activeTrackSrc\n  } = snapshot.__unstable__;\n  const restoredStateValues = {};\n  if (isPlaylistValid(props.playlist) && typeof paused === 'boolean') {\n    // using awaitingPlay instead of paused triggers an animation\n    restoredStateValues.awaitingPlay = !paused;\n  }\n  if (typeof volume === 'number' && volume >= 0 && volume <= 1) {\n    restoredStateValues.volume = volume;\n  }\n  if (typeof muted === 'boolean') {\n    restoredStateValues.muted = muted;\n  }\n  if (typeof loop === 'boolean') {\n    restoredStateValues.loop = loop;\n  }\n  if (typeof cycle === 'boolean') {\n    restoredStateValues.cycle = cycle;\n  }\n  if (typeof shuffle === 'boolean') {\n    restoredStateValues.shuffle = shuffle;\n  }\n  if (typeof playbackRate === 'number') {\n    restoredStateValues.playbackRate = playbackRate;\n  }\n  let useCurrentTime = false;\n  if (\n    typeof activeTrackSrc === 'string' &&\n    typeof activeTrackIndex === 'number' &&\n    activeTrackIndex >= 0\n  ) {\n    // let's try staying on the same track index\n    const currentSrc =\n      props.playlist[activeTrackIndex] &&\n      getTrackSources(props.playlist, activeTrackIndex)[0].src;\n    if (currentSrc && activeTrackSrc === currentSrc) {\n      restoredStateValues.activeTrackIndex = activeTrackIndex;\n      useCurrentTime = true;\n    } else {\n      /* if the track we were playing before is in the new playlist,\n       * update the activeTrackIndex.\n       */\n      const newTrackIndex = findTrackIndexByUrl(props.playlist, activeTrackSrc);\n      if (newTrackIndex !== -1) {\n        restoredStateValues.activeTrackIndex = newTrackIndex;\n        useCurrentTime = true;\n      }\n    }\n  }\n  if (useCurrentTime && typeof currentTime === 'number' && currentTime >= 0) {\n    restoredStateValues.currentTime = currentTime;\n  }\n  return restoredStateValues;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GroupContext from './GroupContext';\n\n/**\n * A wrapper which can be used to share configuration among multiple descendant [`PlayerContextProvider`](#playercontextprovider) instances as well as prevent multiple media elements from playing audio simultaneously\n */\nexport class PlayerContextGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.registerMediaElement = this.registerMediaElement.bind(this);\n    this.unregisterMediaElement = this.unregisterMediaElement.bind(this);\n    this.enforceOneMediaSourceOnly = this.enforceOneMediaSourceOnly.bind(this);\n    this.mediaElements = [];\n  }\n\n  registerMediaElement(elem) {\n    this.mediaElements = this.mediaElements.concat(elem);\n    elem.addEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.addEventListener('volumechange', this.enforceOneMediaSourceOnly, true);\n  }\n\n  unregisterMediaElement(elem) {\n    this.mediaElements = this.mediaElements.filter(element => elem !== element);\n    elem.removeEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.removeEventListener(\n      'volumechange',\n      this.enforceOneMediaSourceOnly,\n      true\n    );\n  }\n\n  enforceOneMediaSourceOnly(e) {\n    const mediaElement = e.target;\n    const { paused, muted } = mediaElement;\n    if (paused || muted) {\n      return;\n    }\n    for (const element of this.mediaElements) {\n      if (element !== mediaElement && !element.muted) {\n        element.pause();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <GroupContext.Consumer>\n        {groupContext => {\n          const value = groupContext\n            ? {\n                ...groupContext,\n                groupProps: { ...groupContext.groupProps, ...this.props }\n              }\n            : {\n                groupProps: this.props,\n                registerMediaElement: this.registerMediaElement,\n                unregisterMediaElement: this.unregisterMediaElement\n              };\n          return (\n            <GroupContext.Provider value={value}>\n              {this.props.children}\n            </GroupContext.Provider>\n          );\n        }}\n      </GroupContext.Consumer>\n    );\n  }\n}\n\nPlayerContextGroup.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PlayerContextGroup;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\nimport { logWarning } from './utils/console';\n\nexport default createSingleGlobalContext('FullscreenContext', {\n  fullscreen: false,\n  requestFullscreen() {\n    logWarning(\n      'Fullscreen request ignored since there is no ' +\n        'FullscreenContextProvider ancestor.'\n    );\n  },\n  requestExitFullscreen() {\n    logWarning(\n      'Exit fullscreen request ignored since there is no ' +\n        'FullscreenContextProvider ancestor.'\n    );\n  }\n});\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FullscreenContext from './FullscreenContext';\n\nconst fullscreenStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n/**\n * Wraps an area which should be fullscreen-able\n */\nexport class FullscreenContextProvider extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullscreen: false\n    };\n    this.requestFullscreen = this.requestFullscreen.bind(this);\n    this.requestExitFullscreen = this.requestExitFullscreen.bind(this);\n    this.handleFullscreenChange = this.handleFullscreenChange.bind(this);\n    this.fullscreenElement = null;\n  }\n\n  componentDidMount() {\n    document.addEventListener('fullscreenchange', this.handleFullscreenChange);\n    document.addEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      'fullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  requestFullscreen() {\n    if (!this.props.fullscreenEnabled) {\n      return;\n    }\n    if (this.fullscreenElement.requestFullscreen) {\n      this.fullscreenElement.requestFullscreen();\n    } else if (this.fullscreenElement.webkitRequestFullscreen) {\n      this.fullscreenElement.webkitRequestFullscreen();\n    } else if (this.fullscreenElement.mozRequestFullscreen) {\n      this.fullscreenElement.mozRequestFullScreen();\n    } else if (this.fullscreenElement.msRequestFullscreen) {\n      this.fullscreenElement.msRequestFullscreen();\n    }\n  }\n\n  requestExitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.mozExitFullscreen();\n    }\n  }\n\n  handleFullscreenChange() {\n    const documentFullscreenElement =\n      document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement;\n    this.setState({\n      fullscreen: documentFullscreenElement === this.fullscreenElement\n    });\n  }\n\n  getFullscreenContext() {\n    const fullscreenContext = {\n      fullscreen: this.state.fullscreen,\n      requestFullscreen: this.requestFullscreen,\n      requestExitFullscreen: this.requestExitFullscreen\n    };\n    if (\n      this.fullscreenContext &&\n      fullscreenContext.fullscreen === this.fullscreenContext.fullscreen\n    ) {\n      // no change\n      return this.fullscreenContext;\n    }\n    return (this.fullscreenContext = fullscreenContext);\n  }\n\n  render() {\n    const fullscreenContext = this.getFullscreenContext();\n    return (\n      <div\n        ref={elem => (this.fullscreenElement = elem)}\n        style={this.state.fullscreen ? fullscreenStyle : undefined}\n      >\n        <FullscreenContext.Provider value={fullscreenContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(fullscreenContext)\n            : this.props.children}\n        </FullscreenContext.Provider>\n      </div>\n    );\n  }\n}\n\nFullscreenContextProvider.propTypes = {\n  fullscreenEnabled: PropTypes.bool.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nFullscreenContextProvider.defaultProps = {\n  fullscreenEnabled: true\n};\n\nexport default FullscreenContextProvider;\n","import React, { createElement } from 'react';\n\nimport PlayerContext from './PlayerContext';\nimport FullscreenContext from './FullscreenContext';\nimport { logWarning } from './utils/console';\n\nfunction playerContextFilter(component, contextPropNames) {\n  const warned = {};\n  const childName = component.displayName || component.name;\n  function PlayerContextFilter(props) {\n    return (\n      <FullscreenContext.Consumer>\n        {fullscreenContext => (\n          <PlayerContext.Consumer>\n            {playerContext => {\n              const childProps = { ...props };\n              for (const propName of contextPropNames) {\n                if (playerContext.hasOwnProperty(propName)) {\n                  childProps[propName] = playerContext[propName];\n                } else if (fullscreenContext.hasOwnProperty(propName)) {\n                  childProps[propName] = fullscreenContext[propName];\n                } else if (!warned[propName]) {\n                  logWarning(\n                    \"Prop '\" +\n                      propName +\n                      \"' for component \" +\n                      childName +\n                      ' not found in playerContext or fullscreenContext.'\n                  );\n                  warned[propName] = true;\n                }\n              }\n              return createElement(component, childProps);\n            }}\n          </PlayerContext.Consumer>\n        )}\n      </FullscreenContext.Consumer>\n    );\n  }\n  if (childName) {\n    PlayerContextFilter.displayName = `PlayerContextFilter(${childName})`;\n  }\n  return PlayerContextFilter;\n}\n\nexport default playerContextFilter;\n","import PlayerContextProvider from './PlayerContextProvider';\nimport PlayerContext from './PlayerContext';\nimport PlayerContextGroup from './PlayerContextGroup';\nimport FullscreenContextProvider from './FullscreenContextProvider';\nimport FullscreenContext from './FullscreenContext';\nimport playerContextFilter from './playerContextFilter';\nimport * as PlayerPropTypes from './PlayerPropTypes';\n\nexport { PlayerContextProvider };\nexport const PlayerContextConsumer = PlayerContext.Consumer;\nexport { PlayerContextGroup };\nexport { FullscreenContextProvider };\nexport const FullscreenContextConsumer = FullscreenContext.Consumer;\nexport { playerContextFilter };\nexport { PlayerPropTypes };\n\n// undocumented exports\nexport * from './utils/console';\nexport {\n  default as convertToNumberWithinIntervalBounds\n} from './utils/convertToNumberWithinIntervalBounds';\nexport { default as isPlaylistValid } from './utils/isPlaylistValid';\nexport { repeatStrategyOptions } from './constants';\n"],"sourceRoot":""}