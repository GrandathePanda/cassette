{"version":3,"sources":["webpack://cassetteCore/webpack/universalModuleDefinition","webpack://cassetteCore/webpack/bootstrap","webpack://cassetteCore/external {\"root\":\"PropTypes\",\"commonjs\":\"prop-types\",\"commonjs2\":\"prop-types\",\"amd\":\"prop-types\"}","webpack://cassetteCore/external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://cassetteCore/./src/utils/console.js","webpack://cassetteCore/./src/utils/createSingleGlobalContext.js","webpack://cassetteCore/./node_modules/array-find-index/index.js","webpack://cassetteCore/(webpack)/buildin/global.js","webpack://cassetteCore/./src/PlayerContext.js","webpack://cassetteCore/./src/GroupContext.js","webpack://cassetteCore/./src/constants.js","webpack://cassetteCore/./src/PlayerPropTypes.js","webpack://cassetteCore/./src/factories/createCustomMediaElement.js","webpack://cassetteCore/./src/utils/ShuffleManager.js","webpack://cassetteCore/./src/utils/isPlaylistValid.js","webpack://cassetteCore/./src/utils/getTrackSources.js","webpack://cassetteCore/./src/utils/findTrackIndexByUrl.js","webpack://cassetteCore/./src/utils/getSourceList.js","webpack://cassetteCore/./src/utils/getTimeRangesArray.js","webpack://cassetteCore/./src/utils/getRepeatStrategy.js","webpack://cassetteCore/./src/utils/convertToNumberWithinIntervalBounds.js","webpack://cassetteCore/./src/PlayerContextProvider.js","webpack://cassetteCore/./src/utils/snapshot.js","webpack://cassetteCore/./src/PlayerContextGroup.js","webpack://cassetteCore/./src/FullscreenContext.js","webpack://cassetteCore/./src/FullscreenContextProvider.js","webpack://cassetteCore/./src/playerContextFilter.js","webpack://cassetteCore/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","logWarning","log","console","logError","error","warn","packageVersion","version","_global","window","global","__cassette_contexts__","displayName","defaultValue","ExistingContext","_console__WEBPACK_IMPORTED_MODULE_1__","Context","react__WEBPACK_IMPORTED_MODULE_0__","arr","predicate","ctx","Array","findIndex","TypeError","list","len","length","g","Function","eval","e","PlayerContext","createSingleGlobalContext","GroupContext","repeatStrategyOptions","requiredOnlyUnlessHasProp","propType","altPropName","warnedAboutDefiningBoth","props","propName","componentName","_len","arguments","rest","_key","isRequired","apply","concat","Error","controlKeyword","external_root_PropTypes_commonjs_prop_types_commonjs2_prop_types_amd_prop_types_default","a","oneOf","control","oneOfType","func","crossOriginAttribute","PlayerPropTypes_repeatStrategy","mediaSource","shape","src","string","type","mediaSessionAction","mediaSessionArtwork","sizes","PlayerPropTypes_track","url","sources","arrayOf","title","artist","album","artwork","meta","progressDirection","seekMode","aspectRatio","prop","undefined","split","some","isNaN","loopchange","srcrequest","factories_createCustomMediaElement","media","document","createElement","MutationObserver","dispatchEvent","Event","observe","attributeFilter","currentSrc","set","srcRequested","_goForward","forwardStack","backStack","currentItem","item","push","pop","_findNextItem","allowMore","indexOf","_allItemsMatch","nextItem","Math","floor","random","utils_ShuffleManager","ShuffleManager","options","_list","_forwardStack","_backStack","_currentItem","_allowBackShuffle","Boolean","allowBackShuffle","_proto","findNextItem","currentIndex","setCurrentIndex","findPreviousItem","pickNextItem","index","setList","setOptions","_arr","keys","_i","clear","utils_isPlaylistValid","playlist","blankSources","utils_getTrackSources","_playlist$index","utils_findTrackIndexByUrl","array_find_index_default","track","source","utils_getSourceList","map","_","utils_getTimeRangesArray","timeRangesObj","timeRangesArray","start","end","utils_getRepeatStrategy","loop","cycle","utils_convertToNumberWithinIntervalBounds","number","min","max","Infinity","playErrorHandler","err","warningMessage","Date","toLocaleTimeString","supportableMediaSessionActions","defaultState","paused","currentTime","seekPreviewTime","seekInProgress","awaitingResumeOnSeekComplete","duration","bufferedRanges","playedRanges","seekableRanges","stalled","awaitingPlay","getGoToTrackState","prevState","shouldPlay","isNewTrack","activeTrackIndex","trackLoading","setMediaElementSources","mediaElement","firstChild","removeChild","_iterator","_isArray","isArray","iterator","_ref","next","done","sourceElement","appendChild","load","PlayerContextProvider_PlayerContextProvider","_Component","PlayerContextProvider","_this","state","_objectSpread","startingTrackIndex","startingTime","volume","defaultVolume","muted","defaultMuted","defaultRepeatStrategy","shuffle","defaultShuffle","playbackRate","defaultPlaybackRate","setVolumeInProgress","autoplay","__playlist__","initialStateSnapshot","snapshot","_snapshot$__unstable_","__unstable__","activeTrackSrc","restoredStateValues","useCurrentTime","newTrackIndex","restoreStateFromSnapshot","lastStableVolume","shuffler","videoHostElementList","videoHostOccupiedCallbacks","Map","videoHostVacatedCallbacks","togglePause","_assertThisInitialized","selectTrackIndex","forwardSkip","backSkip","seekPreview","seekComplete","setVolume","setVolumeComplete","toggleMuted","toggleShuffle","setRepeatStrategy","setPlaybackRate","registerVideoHostElement","renderVideoIntoHostElement","unregisterVideoHostElement","updateVideoHostElement","handleMediaPlay","handleMediaPause","handleMediaSrcrequest","handleMediaEnded","handleMediaStalled","handleMediaCanplaythrough","handleMediaTimeupdate","handleMediaLoadedmetadata","handleMediaVolumechange","handleMediaDurationchange","handleMediaProgress","handleMediaLoopchange","handleMediaRatechange","_inheritsLoose","componentDidMount","_this2","_props","crossOrigin","autoplayDelayInSeconds","mediaElementRef","getPosterImageForTrack","onActiveTrackUpdate","_state","setAttribute","addEventListener","mediaContainer","setState","delayTimeout","setTimeout","getDerivedStateFromProps","nextProps","newPlaylist","baseNewState","prevSources","currentSources","componentDidUpdate","prevProps","_this3","newSources","prevTrack","newTrack","stealMediaSession","clearTimeout","snapshotUpdateTimeout","onStateSnapshot","getStateSnapshot","componentWillUnmount","removeEventListener","gapLengthTimeout","_this4","MediaSession","navigator","mediaSession","metadata","MediaMetadata","action","supportedMediaSessionActions","seekLength","mediaSessionSeekLengthInSeconds","forEach","handler","setActionHandler","hostElement","_ref2","onHostOccupied","onHostVacated","_this5","cancelAnimationFrame","videoHostUpdateRaf","requestAnimationFrame","filter","elem","delete","parentNode","playing","oldHostElement","play","onVacated","onOccupied","_props2","loadFirstTrackOnPlaylistComplete","_state2","goToTrack","gapLengthInSeconds","_media","played","_media2","buffered","seekable","pause","playPromise","catch","Promise","reject","_props3","stayOnBackSkipThreshold","_state3","previousItem","_state4","targetTime","baseStateUpdate","_ref3","_ref4","ended","_state5","inProgress","volumeInBounds","repeatStrategy","rate","getControlProps","playerContext","onTogglePause","onSelectTrackIndex","onBackSkip","onForwardSkip","onSeekPreview","onSeekComplete","onSetVolume","onSetVolumeComplete","onToggleMuted","onToggleShuffle","onSetRepeatStrategy","onSetPlaybackRate","_i2","render","_this6","external_root_React_commonjs_react_commonjs2_react_amd_react_default","external_root_React_commonjs_react_commonjs2_react_amd_react_","ref","hidden","Provider","children","propTypes","bool","maintainPlaybackRate","node","defaultProps","PlayerContextProvider_PlayerContextGroupMember","_Component2","PlayerContextGroupMember","_proto2","groupContext","registerMediaElement","unregisterMediaElement","_this7","_props4","_objectWithoutProperties","_extends","groupProps","src_PlayerContextProvider","Consumer","PlayerContextGroup_PlayerContextGroup","PlayerContextGroup","PlayerContextGroup_assertThisInitialized","enforceOneMediaSourceOnly","mediaElements","PlayerContextGroup_inheritsLoose","element","target","PlayerContextGroup_objectSpread","src_PlayerContextGroup","FullscreenContext","fullscreen","requestFullscreen","requestExitFullscreen","fullscreenStyle","width","height","FullscreenContextProvider_FullscreenContextProvider","_PureComponent","FullscreenContextProvider","FullscreenContextProvider_assertThisInitialized","handleFullscreenChange","fullscreenElement","FullscreenContextProvider_inheritsLoose","fullscreenEnabled","webkitRequestFullscreen","mozRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","mozExitFullscreen","documentFullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","getFullscreenContext","fullscreenContext","style","src_FullscreenContextProvider","src_playerContextFilter","component","contextPropNames","warned","childName","PlayerContextFilter","childProps","playerContextFilter_objectSpread","PlayerContextConsumer","FullscreenContextConsumer"],"mappings":"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","file":"es5/cassette-core.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"prop-types\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"prop-types\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cassetteCore\"] = factory(require(\"prop-types\"), require(\"react\"));\n\telse\n\t\troot[\"cassetteCore\"] = factory(root[\"PropTypes\"], root[\"React\"]);\n})((typeof self !== \"undefined\" ? self : this), function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/* eslint-disable no-console */\n\nconst log = console.log.bind(console);\n\nexport const logError = console.error ? console.error.bind(console) : log;\nexport const logWarning = console.warn ? console.warn.bind(console) : log;\n","import { createContext } from 'react';\n\nimport { logWarning } from './console';\n\nconst packageVersion = require('../../package.json').version;\n\nconst _global = typeof window === 'undefined' ? global : window;\n_global.__cassette_contexts__ = _global.__cassette_contexts__ || {};\n\nfunction createSingleGlobalContext(displayName, defaultValue = null) {\n  const ExistingContext = _global.__cassette_contexts__[displayName];\n  if (ExistingContext) {\n    if (ExistingContext.packageVersion !== packageVersion) {\n      logWarning(\n        `Warning: multiple versions of ${displayName} from the @cassette/core` +\n          ` package have been loaded. v${packageVersion} will be ignored and` +\n          ` v${ExistingContext.packageVersion} will be used instead.`\n      );\n    }\n    return ExistingContext;\n  }\n  const Context = createContext(defaultValue);\n  Context.displayName = displayName;\n  Context.packageVersion = packageVersion;\n  _global.__cassette_contexts__[displayName] = Context;\n  return Context;\n}\n\nexport default createSingleGlobalContext;\n","'use strict';\nmodule.exports = function (arr, predicate, ctx) {\n\tif (typeof Array.prototype.findIndex === 'function') {\n\t\treturn arr.findIndex(predicate, ctx);\n\t}\n\n\tif (typeof predicate !== 'function') {\n\t\tthrow new TypeError('predicate must be a function');\n\t}\n\n\tvar list = Object(arr);\n\tvar len = list.length;\n\n\tif (len === 0) {\n\t\treturn -1;\n\t}\n\n\tfor (var i = 0; i < len; i++) {\n\t\tif (predicate.call(ctx, list[i], i, list)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\nexport default createSingleGlobalContext('PlayerContext');\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\nexport default createSingleGlobalContext('GroupContext');\n","export const repeatStrategyOptions = ['none', 'playlist', 'track'];\n","import PropTypes from 'prop-types';\n\nimport { repeatStrategyOptions } from './constants';\nimport { logWarning } from './utils/console';\n\nfunction requiredOnlyUnlessHasProp(propType, altPropName) {\n  let warnedAboutDefiningBoth = false;\n  function validate(props, propName, componentName, ...rest) {\n    if (propName in props) {\n      if (!warnedAboutDefiningBoth && altPropName in props) {\n        logWarning(\n          `Do not define both the '${propName}' and '${altPropName}' props.`\n        );\n        warnedAboutDefiningBoth = true;\n      }\n      return propType.isRequired(props, propName, componentName, ...rest);\n    }\n    if (!(altPropName in props)) {\n      return new Error(\n        `If the '${altPropName}' prop is not defined, '${propName}' must be.`\n      );\n    }\n  }\n  return validate;\n}\n\nexport const controlKeyword = PropTypes.oneOf([\n  'playpause',\n  'backskip',\n  'forwardskip',\n  'volume',\n  'mute',\n  'repeat',\n  'shuffle',\n  'progress',\n  'progressdisplay',\n  'fullscreen',\n  'spacer'\n]);\n\nexport const control = PropTypes.oneOfType([PropTypes.func, controlKeyword]);\n\nexport const crossOriginAttribute = PropTypes.oneOf([\n  'anonymous',\n  'use-credentials'\n]);\n\nexport const repeatStrategy = PropTypes.oneOf(repeatStrategyOptions);\n\nexport const mediaSource = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n});\n\nexport const mediaSessionAction = PropTypes.oneOf([\n  'play',\n  'pause',\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n]);\n\nexport const mediaSessionArtwork = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  type: PropTypes.string\n});\n\nexport const track = PropTypes.shape({\n  url: requiredOnlyUnlessHasProp(PropTypes.string, 'sources'),\n  sources: requiredOnlyUnlessHasProp(\n    PropTypes.arrayOf(mediaSource.isRequired),\n    'url'\n  ),\n  title: PropTypes.string.isRequired,\n  artist: PropTypes.string,\n  album: PropTypes.string,\n  artwork: PropTypes.arrayOf(mediaSessionArtwork.isRequired),\n  meta: PropTypes.object\n});\n\nexport const progressDirection = PropTypes.oneOf([\n  'left',\n  'right',\n  'up',\n  'down'\n]);\n\nexport const seekMode = PropTypes.oneOf(['paused', 'immediate', 'onrelease']);\n\nexport function aspectRatio(props, propName) {\n  const prop = props[propName];\n  if (prop === undefined) {\n    return;\n  }\n  if (\n    typeof prop !== 'string' ||\n    prop.split(':').length !== 2 ||\n    prop.split(':').some(isNaN)\n  ) {\n    return new Error(\n      `The ${propName} prop should be a string of the form 'x:y'. Example: 16:9`\n    );\n  }\n}\n","const loopchange = 'loopchange';\nconst srcrequest = 'srcrequest';\n\nfunction createCustomMediaElement() {\n  const media = document.createElement('video');\n  new MutationObserver(() => {\n    media.dispatchEvent(new Event(loopchange));\n  }).observe(media, {\n    attributeFilter: ['loop']\n  });\n  // Don't let the media src property get modified directly.\n  // Instead, when it does get set, dispatch an event to be\n  // handled in a way that doesn't conflict with the loaded\n  // playlist.\n  Object.defineProperty(media, 'src', {\n    get: () => media.currentSrc,\n    set: src => {\n      const e = new Event(srcrequest);\n      e.srcRequested = src;\n      media.dispatchEvent(e);\n    }\n  });\n  return media;\n}\n\nexport default createCustomMediaElement;\n","/* ShuffleManager\n *\n * Manages navigation throughout a list which is:\n * - Sourced from another provided list\n * - In random order (except to avoid consecutive duplicates)\n * - Extended endlessly on-the-fly, as needed\n * - Able to have future history overwritten by non-random choices\n * - Able to swap source lists and maintain shuffle order for common members\n */\n\nexport class ShuffleManager {\n  constructor(list, options = {}) {\n    this._list = list;\n    this._forwardStack = [];\n    this._backStack = [];\n    this._currentItem = undefined;\n\n    this._allowBackShuffle = Boolean(options.allowBackShuffle);\n  }\n\n  findNextItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._forwardStack,\n      this._backStack,\n      this._currentItem,\n      true\n    );\n    return this._currentItem;\n  }\n\n  findPreviousItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._backStack,\n      this._forwardStack,\n      this._currentItem,\n      this._allowBackShuffle\n    );\n    return this._currentItem;\n  }\n\n  pickNextItem(index, currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    if (this._list[index] === undefined) {\n      return undefined;\n    }\n    if (this._currentItem !== undefined) {\n      this._backStack.push(this._currentItem);\n    }\n    this._forwardStack.length = 0;\n    this._currentItem = this._list[index];\n    return this._currentItem;\n  }\n\n  setList(list) {\n    this._list = list;\n  }\n\n  setOptions(options) {\n    for (const o of Object.keys(options)) {\n      switch (o) {\n        case 'allowBackShuffle':\n          this[`_${o}`] = Boolean(options[o]);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  setCurrentIndex(currentIndex) {\n    const item = this._list[currentIndex];\n    if (this._currentItem !== item) {\n      this.clear();\n      this._currentItem = item;\n    }\n  }\n\n  clear() {\n    this._forwardStack.length = 0;\n    this._backStack.length = 0;\n    this._currentItem = undefined;\n  }\n}\n\nfunction _goForward(n, forwardStack, backStack, currentItem) {\n  let item = currentItem;\n  for (let i = 0; i < n; i++) {\n    if (!forwardStack.length) {\n      // rollback before erroring (note stack reversal)\n      _goForward(i, backStack, forwardStack, item);\n      throw `Moving ${n} places was not possible!`;\n    }\n    backStack.push(item);\n    item = forwardStack.pop();\n  }\n  return item;\n}\n\nfunction _allItemsMatch(list, item) {\n  if (!list.length) {\n    return false;\n  }\n  for (let i = 0; i < list.length; i++) {\n    if (item !== list[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction _findNextItem(list, forwardStack, backStack, currentItem, allowMore) {\n  let item = currentItem;\n  if (!list.length) {\n    return undefined;\n  }\n  for (let i = 1; i <= forwardStack.length; i++) {\n    if (list.indexOf(forwardStack[forwardStack.length - i]) !== -1) {\n      return _goForward(i, forwardStack, backStack, item);\n    }\n  }\n  if (!allowMore) {\n    return undefined;\n  }\n  if (_allItemsMatch(list, item)) {\n    // we can serve this as our \"next\" item but we\n    // won't modify our history since it's the same.\n    return item;\n  }\n  let nextItem;\n  do {\n    nextItem = list[Math.floor(Math.random() * list.length)];\n  } while (item === nextItem || nextItem === undefined);\n  // if we're skipping items that aren't in our current list we may\n  // have some items in our forwardStack - make sure we move to the front.\n  item = _goForward(forwardStack.length, forwardStack, backStack, item);\n  if (item !== undefined) {\n    backStack.push(item);\n  }\n  return nextItem;\n}\n\nexport default ShuffleManager;\n","function isPlaylistValid(playlist) {\n  return Boolean(playlist && playlist.length);\n}\n\nexport default isPlaylistValid;\n","import isPlaylistValid from './isPlaylistValid';\n\nconst blankSources = [{ src: '' }];\n\nfunction getTrackSources(playlist, index) {\n  if (!isPlaylistValid(playlist)) {\n    return blankSources;\n  }\n  const { sources, url } = playlist[index];\n  if (sources) {\n    return sources.length ? sources : blankSources;\n  }\n  return [{ src: url }];\n}\n\nexport default getTrackSources;\n","import arrayFindIndex from 'array-find-index';\n\nfunction findTrackIndexByUrl(playlist, url) {\n  return arrayFindIndex(playlist, track => {\n    if (track.sources) {\n      return arrayFindIndex(track.sources, source => source.src === url) !== -1;\n    }\n    return track.url && url === track.url;\n  });\n}\n\nexport default findTrackIndexByUrl;\n","import getTrackSources from './getTrackSources';\n\n// collapses playlist into flat list containing\n// the first source url for each track\nfunction getSourceList(playlist) {\n  return (playlist || []).map((_, i) => getTrackSources(playlist, i)[0].src);\n}\n\nexport default getSourceList;\n","function getTimeRangesArray(timeRangesObj) {\n  const timeRangesArray = Array(timeRangesObj.length);\n  for (let i = 0; i < timeRangesObj.length; i++) {\n    timeRangesArray[i] = {\n      start: timeRangesObj.start(i),\n      end: timeRangesObj.end(i)\n    };\n  }\n  return timeRangesArray;\n}\n\nexport default getTimeRangesArray;\n","function getRepeatStrategy(loop, cycle) {\n  if (loop) {\n    return 'track';\n  }\n  if (cycle) {\n    return 'playlist';\n  }\n  return 'none';\n}\n\nexport default getRepeatStrategy;\n","function convertToNumberWithinIntervalBounds(number, min, max) {\n  min = typeof min === 'number' ? min : -Infinity;\n  max = typeof max === 'number' ? max : Infinity;\n  return Math.max(min, Math.min(number, max));\n}\n\nexport default convertToNumberWithinIntervalBounds;\n","import React, { Component, Fragment, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayFindIndex from 'array-find-index';\n\nimport PlayerContext from './PlayerContext';\nimport GroupContext from './GroupContext';\nimport * as PlayerPropTypes from './PlayerPropTypes';\nimport createCustomMediaElement from './factories/createCustomMediaElement';\nimport ShuffleManager from './utils/ShuffleManager';\nimport { getStateSnapshot, restoreStateFromSnapshot } from './utils/snapshot';\nimport getSourceList from './utils/getSourceList';\nimport getTrackSources from './utils/getTrackSources';\nimport getTimeRangesArray from './utils/getTimeRangesArray';\nimport findTrackIndexByUrl from './utils/findTrackIndexByUrl';\nimport isPlaylistValid from './utils/isPlaylistValid';\nimport getRepeatStrategy from './utils/getRepeatStrategy';\nimport convertToNumberWithinIntervalBounds from './utils/convertToNumberWithinIntervalBounds';\nimport { logError, logWarning } from './utils/console';\nimport { repeatStrategyOptions } from './constants';\n\nfunction playErrorHandler(err) {\n  logError(err);\n  if (err.name === 'NotAllowedError') {\n    const warningMessage =\n      'Media playback failed at ' +\n      new Date().toLocaleTimeString() +\n      '! (Perhaps autoplay is disabled in this browser.)';\n    logWarning(warningMessage);\n  }\n}\n\n// Existing Media Session API implementations have default handlers\n// for play/pause, and may yield unexpected behavior if custom\n// play/pause handlers are defined - so let's leave them be.\nconst supportableMediaSessionActions = [\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n];\n\nconst defaultState = {\n  // indicates whether media player should be paused\n  paused: true,\n  // elapsed time for active track, in seconds\n  currentTime: 0,\n  // The most recent targeted time, in seconds, for seek preview\n  seekPreviewTime: 0,\n  /* true if the user is currently dragging the mouse\n   * to seek a new track position\n   */\n  seekInProgress: false,\n  /* true if media was playing when seek previewing began,\n   * it was paused, and it should be resumed on seek\n   * complete\n   */\n  awaitingResumeOnSeekComplete: false,\n  // the duration in seconds of the loaded track\n  duration: 0,\n  // array describing the buffered ranges in the loaded track\n  bufferedRanges: [],\n  // array describing the already-played ranges in the loaded track\n  playedRanges: [],\n  // array describing the seekable ranges in the loaded track\n  seekableRanges: [],\n  // true if the media is currently stalled pending data buffering\n  stalled: false,\n  // true if the active track should play on the next componentDidUpdate\n  awaitingPlay: false\n};\n\n// assumes playlist is valid\nfunction getGoToTrackState(prevState, index, shouldPlay = true) {\n  const isNewTrack = prevState.activeTrackIndex !== index;\n  return {\n    activeTrackIndex: index,\n    trackLoading: isNewTrack,\n    currentTime: 0,\n    loop: isNewTrack ? false : prevState.loop,\n    awaitingPlay: Boolean(shouldPlay),\n    paused: !shouldPlay\n  };\n}\n\nfunction setMediaElementSources(mediaElement, sources) {\n  // remove current sources\n  let firstChild;\n  while ((firstChild = mediaElement.firstChild)) {\n    mediaElement.removeChild(firstChild);\n  }\n  // add new sources\n  for (const source of sources) {\n    const sourceElement = document.createElement('source');\n    sourceElement.src = source.src;\n    if (source.type) {\n      sourceElement.type = source.type;\n    }\n    mediaElement.appendChild(sourceElement);\n  }\n  // cancel playback and re-scan new sources\n  mediaElement.load();\n}\n\n/**\n * Wraps an area which shares a common [`playerContext`](#playercontext)\n */\nexport class PlayerContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...defaultState,\n      // index matching requested track (whether track has loaded or not)\n      activeTrackIndex: convertToNumberWithinIntervalBounds(\n        props.startingTrackIndex,\n        0\n      ),\n      // whether we're waiting on loading metadata for the active track\n      trackLoading: isPlaylistValid(props.playlist),\n      // the current timestamp on the active track in seconds\n      currentTime: convertToNumberWithinIntervalBounds(props.startingTime, 0),\n      // the latest volume of the media, between 0 and 1.\n      volume: convertToNumberWithinIntervalBounds(props.defaultVolume, 0, 1),\n      // true if the media has been muted\n      muted: props.defaultMuted,\n      // whether to loop the active track\n      loop: props.defaultRepeatStrategy === 'track',\n      // true if playlist should continue at start after completion\n      cycle: props.defaultRepeatStrategy === 'playlist',\n      // whether to randomly pick next track from playlist after one finishes\n      shuffle: props.defaultShuffle,\n      // Rate at which media should be played. 1.0 is normal speed.\n      playbackRate: props.defaultPlaybackRate,\n      // true if user is currently dragging mouse to change the volume\n      setVolumeInProgress: false,\n      // initialize awaitingPlay from autoplay prop\n      awaitingPlay: props.autoplay && isPlaylistValid(props.playlist),\n      // playlist prop copied to state (for getDerivedStateFromProps)\n      __playlist__: props.playlist,\n      // load overrides from previously-captured state snapshot\n      ...(props.initialStateSnapshot\n        ? restoreStateFromSnapshot(props.initialStateSnapshot, props)\n        : {})\n    };\n\n    // volume at last time we were unmuted and not actively setting volume\n    this.lastStableVolume = this.state.volume;\n\n    // used to keep track of play history when we are shuffling\n    this.shuffler = new ShuffleManager(getSourceList(props.playlist), {\n      allowBackShuffle: props.allowBackShuffle\n    });\n\n    // html media element used for playback\n    this.media = null;\n\n    this.videoHostElementList = [];\n    this.videoHostOccupiedCallbacks = new Map();\n    this.videoHostVacatedCallbacks = new Map();\n\n    // bind callback methods to pass to descendant elements\n    this.togglePause = this.togglePause.bind(this);\n    this.selectTrackIndex = this.selectTrackIndex.bind(this);\n    this.forwardSkip = this.forwardSkip.bind(this);\n    this.backSkip = this.backSkip.bind(this);\n    this.seekPreview = this.seekPreview.bind(this);\n    this.seekComplete = this.seekComplete.bind(this);\n    this.setVolume = this.setVolume.bind(this);\n    this.setVolumeComplete = this.setVolumeComplete.bind(this);\n    this.toggleMuted = this.toggleMuted.bind(this);\n    this.toggleShuffle = this.toggleShuffle.bind(this);\n    this.setRepeatStrategy = this.setRepeatStrategy.bind(this);\n    this.setPlaybackRate = this.setPlaybackRate.bind(this);\n    this.registerVideoHostElement = this.registerVideoHostElement.bind(this);\n    this.renderVideoIntoHostElement = this.renderVideoIntoHostElement.bind(\n      this\n    );\n    this.unregisterVideoHostElement = this.unregisterVideoHostElement.bind(\n      this\n    );\n    this.updateVideoHostElement = this.updateVideoHostElement.bind(this);\n\n    // bind media event handlers\n    this.handleMediaPlay = this.handleMediaPlay.bind(this);\n    this.handleMediaPause = this.handleMediaPause.bind(this);\n    this.handleMediaSrcrequest = this.handleMediaSrcrequest.bind(this);\n    this.handleMediaEnded = this.handleMediaEnded.bind(this);\n    this.handleMediaStalled = this.handleMediaStalled.bind(this);\n    this.handleMediaCanplaythrough = this.handleMediaCanplaythrough.bind(this);\n    this.handleMediaTimeupdate = this.handleMediaTimeupdate.bind(this);\n    this.handleMediaLoadedmetadata = this.handleMediaLoadedmetadata.bind(this);\n    this.handleMediaVolumechange = this.handleMediaVolumechange.bind(this);\n    this.handleMediaDurationchange = this.handleMediaDurationchange.bind(this);\n    this.handleMediaProgress = this.handleMediaProgress.bind(this);\n    this.handleMediaLoopchange = this.handleMediaLoopchange.bind(this);\n    this.handleMediaRatechange = this.handleMediaRatechange.bind(this);\n  }\n\n  componentDidMount() {\n    const media = (this.media = createCustomMediaElement());\n\n    const {\n      defaultPlaybackRate,\n      crossOrigin,\n      playlist,\n      autoplayDelayInSeconds,\n      mediaElementRef,\n      getPosterImageForTrack,\n      onActiveTrackUpdate\n    } = this.props;\n    const {\n      volume,\n      muted,\n      playbackRate,\n      loop,\n      activeTrackIndex,\n      awaitingPlay\n    } = this.state;\n\n    // initialize media properties\n    // We used to set currentTime here.. now waiting for loadedmetadata.\n    // This avoids an issue where some browsers ignore or delay currentTime\n    // updates when in the HAVE_NOTHING state.\n    media.defaultPlaybackRate = defaultPlaybackRate;\n    media.crossOrigin = crossOrigin;\n    media.volume = volume;\n    media.muted = muted;\n    media.playbackRate = playbackRate;\n    media.loop = loop;\n    media.setAttribute('playsinline', '');\n    media.setAttribute('webkit-playsinline', '');\n    media.setAttribute('preload', 'metadata');\n    media.setAttribute(\n      'poster',\n      getPosterImageForTrack(playlist[activeTrackIndex])\n    );\n\n    // add listeners for media events\n    media.addEventListener('play', this.handleMediaPlay);\n    media.addEventListener('pause', this.handleMediaPause);\n    media.addEventListener('ended', this.handleMediaEnded);\n    media.addEventListener('etalled', this.handleMediaStalled);\n    media.addEventListener('canplaythrough', this.handleMediaCanplaythrough);\n    media.addEventListener('timeupdate', this.handleMediaTimeupdate);\n    media.addEventListener('loadedmetadata', this.handleMediaLoadedmetadata);\n    media.addEventListener('volumechange', this.handleMediaVolumechange);\n    media.addEventListener('durationchange', this.handleMediaDurationchange);\n    media.addEventListener('progress', this.handleMediaProgress);\n    media.addEventListener('ratechange', this.handleMediaRatechange);\n    // add listeners for special events\n    media.addEventListener('srcrequest', this.handleMediaSrcrequest);\n    media.addEventListener('loopchange', this.handleMediaLoopchange);\n\n    // set source elements for current track\n    setMediaElementSources(media, getTrackSources(playlist, activeTrackIndex));\n\n    // initially mount media element in the hidden container (this may change)\n    this.mediaContainer.appendChild(media);\n\n    if (awaitingPlay) {\n      this.setState({\n        awaitingPlay: false\n      });\n      this.delayTimeout = setTimeout(() => {\n        this.togglePause(false);\n      }, autoplayDelayInSeconds * 1000);\n    }\n\n    if (mediaElementRef) {\n      mediaElementRef(media);\n    }\n\n    if (onActiveTrackUpdate) {\n      onActiveTrackUpdate(playlist[activeTrackIndex], activeTrackIndex);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const newPlaylist = nextProps.playlist;\n\n    if (newPlaylist === prevState.__playlist__) {\n      // reference comparison is equal so we'll\n      // assume the playlist is unchanged.\n      return null;\n    }\n\n    const baseNewState = {\n      __playlist__: newPlaylist\n    };\n\n    // check if the new playlist is invalid\n    if (!isPlaylistValid(newPlaylist)) {\n      return {\n        ...defaultState,\n        ...baseNewState,\n        activeTrackIndex: 0,\n        trackLoading: false\n      };\n    }\n\n    // check if the activeTrackIndex doesn't need to be updated\n    const prevSources = getTrackSources(\n      prevState.__playlist__,\n      prevState.activeTrackIndex\n    );\n    // the sources if we stay on the same track index\n    const currentSources = getTrackSources(\n      newPlaylist,\n      prevState.activeTrackIndex\n    );\n    // non-comprehensive but probably accurate check\n    if (prevSources[0].src === currentSources[0].src) {\n      // our active track index already matches\n      return baseNewState;\n    }\n\n    /* if the track we're already playing is in the new playlist, update the\n     * activeTrackIndex.\n     */\n    const newTrackIndex = findTrackIndexByUrl(newPlaylist, prevSources[0].src);\n    if (newTrackIndex !== -1) {\n      return {\n        ...baseNewState,\n        activeTrackIndex: newTrackIndex\n      };\n    }\n\n    // if not, then load the first track in the new playlist, and pause.\n    return {\n      ...baseNewState,\n      ...getGoToTrackState(prevState, 0, false)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.media.defaultPlaybackRate = this.props.defaultPlaybackRate;\n    this.media.crossOrigin = this.props.crossOrigin;\n\n    this.shuffler.setList(getSourceList(this.props.playlist));\n    this.shuffler.setOptions({\n      allowBackShuffle: this.props.allowBackShuffle\n    });\n\n    const prevSources = getTrackSources(\n      prevProps.playlist,\n      prevState.activeTrackIndex\n    );\n    const newSources = getTrackSources(\n      this.props.playlist,\n      this.state.activeTrackIndex\n    );\n    const prevTrack = prevProps.playlist[prevState.activeTrackIndex];\n    const newTrack = this.props.playlist[this.state.activeTrackIndex];\n    if (prevSources[0].src !== newSources[0].src) {\n      setMediaElementSources(this.media, newSources);\n      this.media.setAttribute(\n        'poster',\n        this.props.getPosterImageForTrack(newTrack)\n      );\n\n      if (!this.state.shuffle) {\n        // after toggling off shuffle, we defer clearing the shuffle\n        // history until we actually change tracks - if the user quickly\n        // toggles  shuffle off then back on again, we don't want to have\n        // lost our history.\n        this.shuffler.clear();\n      }\n    }\n\n    if (this.props.onActiveTrackUpdate && prevTrack !== newTrack) {\n      this.props.onActiveTrackUpdate(newTrack, this.state.activeTrackIndex);\n    }\n\n    if (prevProps !== this.props && !this.media.paused) {\n      // update running media session based on new props\n      this.stealMediaSession();\n    }\n\n    if (this.state.awaitingPlay) {\n      this.setState({\n        awaitingPlay: false\n      });\n      // media.currentSrc is updated asynchronously so we should\n      // play async to avoid weird intermediate state issues\n      setTimeout(() => {\n        this.togglePause(false);\n      });\n    }\n\n    clearTimeout(this.snapshotUpdateTimeout);\n    this.snapshotUpdateTimeout = setTimeout(() => {\n      if (this.props.onStateSnapshot) {\n        this.props.onStateSnapshot(getStateSnapshot(this.state));\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    const { media } = this;\n    // remove special event listeners on the media element\n    media.removeEventListener('srcrequest', this.handleMediaSrcrequest);\n    media.removeEventListener('loopchange', this.handleMediaLoopchange);\n\n    clearTimeout(this.gapLengthTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  stealMediaSession() {\n    if (\n      // eslint-disable-next-line no-undef\n      !(window.MediaSession && navigator.mediaSession instanceof MediaSession)\n    ) {\n      return;\n    }\n    // eslint-disable-next-line no-undef\n    navigator.mediaSession.metadata = new MediaMetadata(\n      this.props.playlist[this.state.activeTrackIndex]\n    );\n    supportableMediaSessionActions\n      .map(action => {\n        if (this.props.supportedMediaSessionActions.indexOf(action) === -1) {\n          return null;\n        }\n        const seekLength = this.props.mediaSessionSeekLengthInSeconds;\n        switch (action) {\n          case 'play':\n            return this.togglePause.bind(this, false);\n          case 'pause':\n            return this.togglePause.bind(this, true);\n          case 'previoustrack':\n            return this.backSkip;\n          case 'nexttrack':\n            return this.forwardSkip;\n          case 'seekbackward':\n            return () => (this.media.currentTime -= seekLength);\n          case 'seekforward':\n            return () => (this.media.currentTime += seekLength);\n          default:\n            return undefined;\n        }\n      })\n      .forEach((handler, i) => {\n        navigator.mediaSession.setActionHandler(\n          supportableMediaSessionActions[i],\n          handler\n        );\n      });\n  }\n\n  registerVideoHostElement(hostElement, { onHostOccupied, onHostVacated }) {\n    this.videoHostElementList = this.videoHostElementList.concat(hostElement);\n    this.videoHostOccupiedCallbacks.set(hostElement, onHostOccupied);\n    this.videoHostVacatedCallbacks.set(hostElement, onHostVacated);\n  }\n\n  renderVideoIntoHostElement(hostElement) {\n    if (this.videoHostElementList.indexOf(hostElement) === -1) {\n      return;\n    }\n    cancelAnimationFrame(this.videoHostUpdateRaf);\n    this.videoHostUpdateRaf = requestAnimationFrame(() =>\n      this.updateVideoHostElement(hostElement)\n    );\n  }\n\n  unregisterVideoHostElement(hostElement) {\n    this.videoHostElementList = this.videoHostElementList.filter(\n      elem => elem !== hostElement\n    );\n    this.videoHostOccupiedCallbacks.delete(hostElement);\n    this.videoHostVacatedCallbacks.delete(hostElement);\n    if (this.media.parentNode === hostElement) {\n      this.updateVideoHostElement();\n    }\n  }\n\n  updateVideoHostElement(hostElement) {\n    if (!hostElement) {\n      hostElement = this.videoHostElementList[0] || this.mediaContainer;\n    } else {\n      // move hostElement to front of list\n      this.videoHostElementList = [hostElement].concat(\n        this.videoHostElementList.filter(elem => elem !== hostElement)\n      );\n    }\n    const playing = !this.media.paused;\n    const oldHostElement = this.media.parentNode;\n    if (hostElement === oldHostElement) {\n      return;\n    }\n    hostElement.appendChild(this.media);\n    // according to the HTML spec playback should continue, but\n    // some browsers pause the element whenever it is moved around, so\n    // let's make sure playback resumes if that's the case.\n    if (playing && this.media.paused) {\n      this.media.play();\n    }\n    const onVacated = this.videoHostVacatedCallbacks.get(oldHostElement);\n    if (onVacated) {\n      onVacated(this.media);\n    }\n    const onOccupied = this.videoHostOccupiedCallbacks.get(hostElement);\n    if (onOccupied) {\n      onOccupied(this.media);\n    }\n  }\n\n  handleMediaPlay() {\n    this.setState(state => (state.paused === false ? null : { paused: false }));\n    this.stealMediaSession();\n  }\n\n  handleMediaPause() {\n    this.setState(state => (state.paused === true ? null : { paused: true }));\n  }\n\n  handleMediaSrcrequest(e) {\n    const { playlist } = this.props;\n    const sources = getTrackSources(playlist, this.state.activeTrackIndex);\n    if (arrayFindIndex(sources, s => s.src === e.srcRequested) !== -1) {\n      // we're good! nothing to update.\n      return;\n    }\n    // looks like 'src' was set from outside our component.\n    // let's see if we can use it.\n    const newTrackIndex = findTrackIndexByUrl(playlist, e.srcRequested);\n    if (newTrackIndex === -1) {\n      logError(\n        `Source '${e.srcRequested}' does not exist in the loaded playlist. ` +\n          `Make sure you've updated the 'playlist' prop to ` +\n          `PlayerContextProvider before you select this track!`\n      );\n      return;\n    }\n    this.selectTrackIndex(newTrackIndex);\n  }\n\n  handleMediaEnded() {\n    if (this.state.seekInProgress) {\n      // nothing to do if we're in the middle of a seek\n      // (this can happen if we're in seekMode: immediate)\n      return;\n    }\n    clearTimeout(this.gapLengthTimeout);\n    const { playlist, loadFirstTrackOnPlaylistComplete } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    const { cycle, activeTrackIndex } = this.state;\n    if (!cycle && activeTrackIndex + 1 >= playlist.length) {\n      if (loadFirstTrackOnPlaylistComplete) {\n        this.goToTrack(0, false);\n      }\n      return;\n    }\n    this.gapLengthTimeout = setTimeout(\n      this.forwardSkip,\n      this.props.gapLengthInSeconds * 1000\n    );\n  }\n\n  handleMediaStalled() {\n    this.setState(state => (state.stalled === true ? null : { stalled: true }));\n  }\n\n  handleMediaCanplaythrough() {\n    this.setState(\n      state => (state.stalled === false ? null : { stalled: false })\n    );\n  }\n\n  handleMediaTimeupdate() {\n    const { currentTime, played } = this.media;\n    if (this.state.trackLoading) {\n      // correct currentTime to preset, if applicable, during load\n      this.media.currentTime = this.state.currentTime;\n      return;\n    }\n    this.setState({\n      currentTime,\n      playedRanges: getTimeRangesArray(played)\n    });\n  }\n\n  handleMediaLoadedmetadata() {\n    if (this.media.currentTime !== this.state.currentTime) {\n      this.media.currentTime = this.state.currentTime;\n    }\n    this.setState(\n      state => (state.trackLoading === false ? null : { trackLoading: false })\n    );\n  }\n\n  handleMediaVolumechange() {\n    const { volume, muted } = this.media;\n    this.setState({ volume, muted });\n  }\n\n  handleMediaDurationchange() {\n    const { duration } = this.media;\n    this.setState({ duration });\n  }\n\n  handleMediaProgress() {\n    this.setState({\n      bufferedRanges: getTimeRangesArray(this.media.buffered),\n      seekableRanges: getTimeRangesArray(this.media.seekable)\n    });\n  }\n\n  handleMediaLoopchange() {\n    const { loop } = this.media;\n    this.setState(state => (state.loop === loop ? null : { loop }));\n  }\n\n  handleMediaRatechange() {\n    const { playbackRate } = this.media;\n    this.setState(\n      state => (state.playbackRate === playbackRate ? null : { playbackRate })\n    );\n  }\n\n  togglePause(value) {\n    clearTimeout(this.delayTimeout);\n    const pause = typeof value === 'boolean' ? value : !this.state.paused;\n    if (pause) {\n      this.media.pause();\n      return;\n    }\n    if (!this.media.currentSrc) {\n      return;\n    }\n    try {\n      const playPromise = this.media.play();\n      if (playPromise && typeof playPromise.catch === 'function') {\n        playPromise\n          .catch(err => {\n            // AbortError is pretty much always called because we're skipping\n            // tracks quickly or hitting pause before a track has a chance to\n            // play. It's pretty safe to just ignore these error messages.\n            if (err.name !== 'AbortError') {\n              return Promise.reject(err);\n            }\n          })\n          .catch(playErrorHandler);\n      }\n    } catch (err) {\n      playErrorHandler(err);\n    }\n  }\n\n  // assumes playlist is valid - don't call without checking\n  goToTrack(index, shouldPlay = true) {\n    clearTimeout(this.delayTimeout);\n    this.setState(state => getGoToTrackState(state, index, shouldPlay));\n  }\n\n  selectTrackIndex(index) {\n    const { playlist } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    if (index < 0 || index > playlist.length) {\n      logWarning(`Playlist index ${index} is out of bounds!`);\n      return;\n    }\n    if (this.state.shuffle) {\n      this.shuffler.pickNextItem(index, this.state.activeTrackIndex);\n    }\n    this.goToTrack(index);\n  }\n\n  backSkip() {\n    const { playlist, stayOnBackSkipThreshold } = this.props;\n    const { media } = this;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      media.currentTime >= stayOnBackSkipThreshold ||\n      (!cycle && activeTrackIndex < 1)\n    ) {\n      media.currentTime = 0;\n      return;\n    }\n    let index;\n    if (shuffle) {\n      const previousItem = this.shuffler.findPreviousItem(activeTrackIndex);\n      if (previousItem === undefined) {\n        // if we aren't allowing backShuffle then we'll hit a stopping point.\n        media.currentTime = 0;\n        return;\n      }\n      index = findTrackIndexByUrl(playlist, previousItem);\n    } else {\n      index = activeTrackIndex - 1;\n      if (index < 0) {\n        index = playlist.length - 1;\n      }\n    }\n    this.goToTrack(index);\n  }\n\n  forwardSkip() {\n    const { playlist } = this.props;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      (!cycle && activeTrackIndex + 1 >= playlist.length)\n    ) {\n      return;\n    }\n    let index;\n    if (shuffle) {\n      index = findTrackIndexByUrl(\n        playlist,\n        this.shuffler.findNextItem(activeTrackIndex)\n      );\n    } else {\n      index = activeTrackIndex + 1;\n      if (index >= playlist.length) {\n        index = 0;\n      }\n    }\n    this.goToTrack(index);\n  }\n\n  seekPreview(targetTime) {\n    if (!isPlaylistValid(this.props.playlist)) {\n      return;\n    }\n    const baseStateUpdate = {\n      seekPreviewTime: targetTime,\n      seekInProgress: true\n    };\n    switch (this.props.seekMode) {\n      case 'paused':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true\n        }));\n        this.media.currentTime = targetTime;\n        if (!this.state.paused) {\n          this.togglePause(true);\n        }\n        break;\n      case 'immediate':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true\n        }));\n        this.media.currentTime = targetTime;\n        if (this.state.awaitingResumeOnSeekComplete && !this.media.ended) {\n          // if we earlier encountered an 'ended' state,\n          // un-pausing becomes necessary to resume playback\n          this.togglePause(false);\n        }\n        break;\n      case 'onrelease':\n        this.setState(baseStateUpdate);\n        break;\n    }\n  }\n\n  seekComplete(targetTime) {\n    const { seekPreviewTime, awaitingResumeOnSeekComplete } = this.state;\n    const baseStateUpdate = {\n      seekInProgress: false,\n      awaitingResumeOnSeekComplete: false\n    };\n    const currentTime =\n      typeof targetTime === 'number' ? targetTime : seekPreviewTime;\n\n    if (isNaN(currentTime)) {\n      this.setState(baseStateUpdate);\n      return;\n    }\n    this.setState({\n      ...baseStateUpdate,\n      /* we'll update currentTime on the media listener hook anyway,\n       * but that might not happen for a bit... so the optimistic update\n       * helps us avoid the progress bar jumping around and confusing the user.\n       * https://github.com/benwiley4000/cassette/issues/209\n       */\n      currentTime\n    });\n    this.media.currentTime = currentTime;\n    if (awaitingResumeOnSeekComplete) {\n      if (this.media.ended) {\n        this.forwardSkip();\n      } else {\n        this.togglePause(false);\n      }\n    }\n  }\n\n  setVolume(volume, inProgress = true) {\n    if (inProgress && !this.state.setVolumeInProgress) {\n      this.setState({\n        setVolumeInProgress: true\n      });\n    }\n    const volumeInBounds = convertToNumberWithinIntervalBounds(volume, 0, 1);\n    this.media.muted = volumeInBounds === 0 ? true : false;\n    this.media.volume = volumeInBounds;\n  }\n\n  setVolumeComplete(volume) {\n    if (typeof volume === 'number') {\n      this.setVolume(volume, false);\n    }\n    this.setState({\n      setVolumeInProgress: false\n    });\n    if (!this.media.muted) {\n      this.lastStableVolume = this.media.volume;\n    }\n  }\n\n  toggleMuted(value) {\n    const muted = typeof value === 'boolean' ? value : !this.state.muted;\n    this.media.muted = muted;\n    if (!muted) {\n      this.media.volume = this.lastStableVolume;\n    }\n  }\n\n  toggleShuffle(value) {\n    const shuffle = typeof value === 'boolean' ? value : !this.state.shuffle;\n    this.setState({ shuffle });\n  }\n\n  setRepeatStrategy(repeatStrategy) {\n    if (repeatStrategyOptions.indexOf(repeatStrategy) === -1) {\n      logWarning(\n        'repeatStrategy \"' +\n          repeatStrategy +\n          '\" is not one of: ' +\n          repeatStrategyOptions.split(', ') +\n          '.'\n      );\n      return;\n    }\n    switch (repeatStrategy) {\n      case 'track':\n        // state update is automatic\n        this.media.loop = true;\n        break;\n      case 'playlist':\n        this.setState({\n          loop: false,\n          cycle: true\n        });\n        this.media.loop = false;\n        break;\n      case 'none':\n        this.setState({\n          loop: false,\n          cycle: false\n        });\n        this.media.loop = false;\n        break;\n    }\n  }\n\n  setPlaybackRate(rate) {\n    this.media.playbackRate = rate;\n  }\n\n  getControlProps() {\n    const { props, state } = this;\n    const playerContext = {\n      playlist: props.playlist,\n      activeTrackIndex: state.activeTrackIndex,\n      trackLoading: state.trackLoading,\n      paused: state.paused,\n      currentTime: state.currentTime,\n      seekPreviewTime: state.seekPreviewTime,\n      seekInProgress: state.seekInProgress,\n      awaitingResumeOnSeekComplete: state.awaitingResumeOnSeekComplete,\n      duration: state.duration,\n      bufferedRanges: state.bufferedRanges,\n      playedRanges: state.playedRanges,\n      seekableRanges: state.seekableRanges,\n      volume: state.volume,\n      muted: state.muted,\n      shuffle: state.shuffle,\n      stalled: state.stalled,\n      playbackRate: state.playbackRate,\n      setVolumeInProgress: state.setVolumeInProgress,\n      repeatStrategy: getRepeatStrategy(state.loop, state.cycle),\n      registerVideoHostElement: this.registerVideoHostElement,\n      renderVideoIntoHostElement: this.renderVideoIntoHostElement,\n      unregisterVideoHostElement: this.unregisterVideoHostElement,\n      onTogglePause: this.togglePause,\n      onSelectTrackIndex: this.selectTrackIndex,\n      onBackSkip: this.backSkip,\n      onForwardSkip: this.forwardSkip,\n      onSeekPreview: this.seekPreview,\n      onSeekComplete: this.seekComplete,\n      onSetVolume: this.setVolume,\n      onSetVolumeComplete: this.setVolumeComplete,\n      onToggleMuted: this.toggleMuted,\n      onToggleShuffle: this.toggleShuffle,\n      onSetRepeatStrategy: this.setRepeatStrategy,\n      onSetPlaybackRate: this.setPlaybackRate\n    };\n    if (this.playerContext) {\n      // only update this.playerContext if something has changed\n      for (const key of Object.keys(this.playerContext)) {\n        if (playerContext[key] !== this.playerContext[key]) {\n          this.playerContext = playerContext;\n          break;\n        }\n      }\n    } else {\n      // first time - nothing to compare\n      this.playerContext = playerContext;\n    }\n    return this.playerContext;\n  }\n\n  render() {\n    const playerContext = this.getControlProps();\n    return (\n      <Fragment>\n        <div ref={elem => (this.mediaContainer = elem)} hidden />\n        <PlayerContext.Provider value={playerContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(playerContext)\n            : this.props.children}\n        </PlayerContext.Provider>\n      </Fragment>\n    );\n  }\n}\n\nPlayerContextProvider.propTypes = {\n  playlist: PropTypes.arrayOf(PlayerPropTypes.track.isRequired).isRequired,\n  autoplay: PropTypes.bool.isRequired,\n  autoplayDelayInSeconds: PropTypes.number.isRequired,\n  gapLengthInSeconds: PropTypes.number.isRequired,\n  crossOrigin: PlayerPropTypes.crossOriginAttribute,\n  defaultVolume: PropTypes.number.isRequired,\n  defaultMuted: PropTypes.bool,\n  defaultRepeatStrategy: PlayerPropTypes.repeatStrategy.isRequired,\n  defaultShuffle: PropTypes.bool,\n  defaultPlaybackRate: PropTypes.number.isRequired,\n  startingTime: PropTypes.number.isRequired,\n  startingTrackIndex: PropTypes.number.isRequired,\n  loadFirstTrackOnPlaylistComplete: PropTypes.bool,\n  seekMode: PlayerPropTypes.seekMode.isRequired,\n  maintainPlaybackRate: PropTypes.bool.isRequired,\n  allowBackShuffle: PropTypes.bool,\n  stayOnBackSkipThreshold: PropTypes.number.isRequired,\n  supportedMediaSessionActions: PropTypes.arrayOf(\n    PlayerPropTypes.mediaSessionAction.isRequired\n  ).isRequired,\n  mediaSessionSeekLengthInSeconds: PropTypes.number.isRequired,\n  mediaElementRef: PropTypes.func,\n  initialStateSnapshot: PropTypes.shape({\n    __unstable__: PropTypes.object.isRequired\n  }),\n  onStateSnapshot: PropTypes.func,\n  onActiveTrackUpdate: PropTypes.func,\n  getPosterImageForTrack: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nPlayerContextProvider.defaultProps = {\n  autoplay: false,\n  autoplayDelayInSeconds: 0,\n  gapLengthInSeconds: 0,\n  defaultVolume: 1,\n  defaultMuted: false,\n  defaultRepeatStrategy: 'playlist',\n  defaultShuffle: false,\n  defaultPlaybackRate: 1,\n  startingTime: 0,\n  startingTrackIndex: 0,\n  loadFirstTrackOnPlaylistComplete: true,\n  seekMode: 'immediate',\n  maintainPlaybackRate: false,\n  allowBackShuffle: false,\n  stayOnBackSkipThreshold: 5,\n  supportedMediaSessionActions: ['play', 'pause', 'previoustrack', 'nexttrack'],\n  mediaSessionSeekLengthInSeconds: 10,\n  getPosterImageForTrack(track) {\n    return track && track.artwork ? track.artwork[0].src : '';\n  }\n};\n\nexport class PlayerContextGroupMember extends Component {\n  componentDidMount() {\n    this.props.groupContext.registerMediaElement(this.mediaElement);\n  }\n\n  componentWillUnmount() {\n    this.props.groupContext.unregisterMediaElement(this.mediaElement);\n  }\n\n  render() {\n    const { groupContext, props } = this.props;\n    const { mediaElementRef, ...rest } = props;\n    return (\n      <PlayerContextProvider\n        {...groupContext.groupProps}\n        {...rest}\n        mediaElementRef={ref => {\n          if (mediaElementRef) {\n            mediaElementRef(ref);\n          }\n          this.mediaElement = ref;\n        }}\n      />\n    );\n  }\n}\n\nPlayerContextGroupMember.propTypes = {\n  groupContext: PropTypes.shape({\n    groupProps: PropTypes.object.isRequired,\n    registerMediaElement: PropTypes.func.isRequired,\n    unregisterMediaElement: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction PlayerContextGroupConsumer(props) {\n  return (\n    <GroupContext.Consumer>\n      {groupContext => {\n        if (!groupContext) {\n          return createElement(PlayerContextProvider, props);\n        }\n        return createElement(PlayerContextGroupMember, {\n          groupContext,\n          props\n        });\n      }}\n    </GroupContext.Consumer>\n  );\n}\n\nexport default PlayerContextGroupConsumer;\n","import isPlaylistValid from './isPlaylistValid';\nimport getTrackSources from './getTrackSources';\nimport findTrackIndexByUrl from './findTrackIndexByUrl';\n\nexport function getStateSnapshot(state) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    __playlist__\n  } = state;\n  return {\n    __unstable__: {\n      paused,\n      currentTime,\n      activeTrackIndex,\n      volume,\n      muted,\n      loop,\n      cycle,\n      shuffle,\n      playbackRate,\n      activeTrackSrc: isPlaylistValid(__playlist__)\n        ? getTrackSources(__playlist__, activeTrackIndex)[0].src\n        : null\n    }\n  };\n}\n\nexport function restoreStateFromSnapshot(snapshot, props) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    activeTrackSrc\n  } = snapshot.__unstable__;\n  const restoredStateValues = {};\n  if (isPlaylistValid(props.playlist) && typeof paused === 'boolean') {\n    // using awaitingPlay instead of paused triggers an animation\n    restoredStateValues.awaitingPlay = !paused;\n  }\n  if (typeof volume === 'number' && volume >= 0 && volume <= 1) {\n    restoredStateValues.volume = volume;\n  }\n  if (typeof muted === 'boolean') {\n    restoredStateValues.muted = muted;\n  }\n  if (typeof loop === 'boolean') {\n    restoredStateValues.loop = loop;\n  }\n  if (typeof cycle === 'boolean') {\n    restoredStateValues.cycle = cycle;\n  }\n  if (typeof shuffle === 'boolean') {\n    restoredStateValues.shuffle = shuffle;\n  }\n  if (typeof playbackRate === 'number') {\n    restoredStateValues.playbackRate = playbackRate;\n  }\n  let useCurrentTime = false;\n  if (\n    typeof activeTrackSrc === 'string' &&\n    typeof activeTrackIndex === 'number' &&\n    activeTrackIndex >= 0\n  ) {\n    // let's try staying on the same track index\n    const currentSrc = getTrackSources(props.playlist, activeTrackIndex)[0].src;\n    if (activeTrackSrc === currentSrc) {\n      restoredStateValues.activeTrackIndex = activeTrackIndex;\n      useCurrentTime = true;\n    } else {\n      /* if the track we were playing before is in the new playlist,\n       * update the activeTrackIndex.\n       */\n      const newTrackIndex = findTrackIndexByUrl(props.playlist, activeTrackSrc);\n      if (newTrackIndex !== -1) {\n        restoredStateValues.activeTrackIndex = newTrackIndex;\n        useCurrentTime = true;\n      }\n    }\n  }\n  if (useCurrentTime && typeof currentTime === 'number' && currentTime >= 0) {\n    restoredStateValues.currentTime = currentTime;\n  }\n  return restoredStateValues;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GroupContext from './GroupContext';\n\n/**\n * A wrapper which can be used to share configuration among multiple descendant [`PlayerContextProvider`](#playercontextprovider) instances as well as prevent multiple media elements from playing audio simultaneously\n */\nexport class PlayerContextGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.registerMediaElement = this.registerMediaElement.bind(this);\n    this.unregisterMediaElement = this.unregisterMediaElement.bind(this);\n    this.enforceOneMediaSourceOnly = this.enforceOneMediaSourceOnly.bind(this);\n    this.mediaElements = [];\n  }\n\n  registerMediaElement(elem) {\n    this.mediaElements = this.mediaElements.concat(elem);\n    elem.addEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.addEventListener('volumechange', this.enforceOneMediaSourceOnly, true);\n  }\n\n  unregisterMediaElement(elem) {\n    this.mediaElements = this.mediaElements.filter(element => elem !== element);\n    elem.removeEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.removeEventListener(\n      'volumechange',\n      this.enforceOneMediaSourceOnly,\n      true\n    );\n  }\n\n  enforceOneMediaSourceOnly(e) {\n    const mediaElement = e.target;\n    const { paused, muted } = mediaElement;\n    if (paused || muted) {\n      return;\n    }\n    for (const element of this.mediaElements) {\n      if (element !== mediaElement && !element.muted) {\n        element.pause();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <GroupContext.Consumer>\n        {groupContext => {\n          const value = groupContext\n            ? {\n                ...groupContext,\n                groupProps: { ...groupContext.groupProps, ...this.props }\n              }\n            : {\n                groupProps: this.props,\n                registerMediaElement: this.registerMediaElement,\n                unregisterMediaElement: this.unregisterMediaElement\n              };\n          return (\n            <GroupContext.Provider value={value}>\n              {this.props.children}\n            </GroupContext.Provider>\n          );\n        }}\n      </GroupContext.Consumer>\n    );\n  }\n}\n\nPlayerContextGroup.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PlayerContextGroup;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\nimport { logWarning } from './utils/console';\n\nexport default createSingleGlobalContext('FullscreenContext', {\n  fullscreen: false,\n  requestFullscreen() {\n    logWarning(\n      'Fullscreen request ignored since there is no ' +\n        'FullscreenContextProvider ancestor.'\n    );\n  },\n  requestExitFullscreen() {\n    logWarning(\n      'Exit fullscreen request ignored since there is no ' +\n        'FullscreenContextProvider ancestor.'\n    );\n  }\n});\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FullscreenContext from './FullscreenContext';\n\nconst fullscreenStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n/**\n * Wraps an area which should be fullscreen-able\n */\nexport class FullscreenContextProvider extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullscreen: false\n    };\n    this.requestFullscreen = this.requestFullscreen.bind(this);\n    this.requestExitFullscreen = this.requestExitFullscreen.bind(this);\n    this.handleFullscreenChange = this.handleFullscreenChange.bind(this);\n    this.fullscreenElement = null;\n  }\n\n  componentDidMount() {\n    document.addEventListener('fullscreenchange', this.handleFullscreenChange);\n    document.addEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      'fullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  requestFullscreen() {\n    if (!this.props.fullscreenEnabled) {\n      return;\n    }\n    if (this.fullscreenElement.requestFullscreen) {\n      this.fullscreenElement.requestFullscreen();\n    } else if (this.fullscreenElement.webkitRequestFullscreen) {\n      this.fullscreenElement.webkitRequestFullscreen();\n    } else if (this.fullscreenElement.mozRequestFullscreen) {\n      this.fullscreenElement.mozRequestFullScreen();\n    } else if (this.fullscreenElement.msRequestFullscreen) {\n      this.fullscreenElement.msRequestFullscreen();\n    }\n  }\n\n  requestExitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.mozExitFullscreen();\n    }\n  }\n\n  handleFullscreenChange() {\n    const documentFullscreenElement =\n      document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement;\n    this.setState({\n      fullscreen: documentFullscreenElement === this.fullscreenElement\n    });\n  }\n\n  getFullscreenContext() {\n    const fullscreenContext = {\n      fullscreen: this.state.fullscreen,\n      requestFullscreen: this.requestFullscreen,\n      requestExitFullscreen: this.requestExitFullscreen\n    };\n    if (\n      this.fullscreenContext &&\n      fullscreenContext.fullscreen === this.fullscreenContext.fullscreen\n    ) {\n      // no change\n      return this.fullscreenContext;\n    }\n    return (this.fullscreenContext = fullscreenContext);\n  }\n\n  render() {\n    const fullscreenContext = this.getFullscreenContext();\n    return (\n      <div\n        ref={elem => (this.fullscreenElement = elem)}\n        style={this.state.fullscreen ? fullscreenStyle : undefined}\n      >\n        <FullscreenContext.Provider value={fullscreenContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(fullscreenContext)\n            : this.props.children}\n        </FullscreenContext.Provider>\n      </div>\n    );\n  }\n}\n\nFullscreenContextProvider.propTypes = {\n  fullscreenEnabled: PropTypes.bool.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nFullscreenContextProvider.defaultProps = {\n  fullscreenEnabled: true\n};\n\nexport default FullscreenContextProvider;\n","import React, { createElement } from 'react';\n\nimport PlayerContext from './PlayerContext';\nimport FullscreenContext from './FullscreenContext';\nimport { logWarning } from './utils/console';\n\nfunction playerContextFilter(component, contextPropNames) {\n  const warned = {};\n  const childName = component.displayName || component.name;\n  function PlayerContextFilter(props) {\n    return (\n      <FullscreenContext.Consumer>\n        {fullscreenContext => (\n          <PlayerContext.Consumer>\n            {playerContext => {\n              const childProps = { ...props };\n              for (const propName of contextPropNames) {\n                if (playerContext.hasOwnProperty(propName)) {\n                  childProps[propName] = playerContext[propName];\n                } else if (fullscreenContext.hasOwnProperty(propName)) {\n                  childProps[propName] = fullscreenContext[propName];\n                } else if (!warned[propName]) {\n                  logWarning(\n                    \"Prop '\" +\n                      propName +\n                      \"' for component \" +\n                      childName +\n                      ' not found in playerContext or fullscreenContext.'\n                  );\n                  warned[propName] = true;\n                }\n              }\n              return createElement(component, childProps);\n            }}\n          </PlayerContext.Consumer>\n        )}\n      </FullscreenContext.Consumer>\n    );\n  }\n  if (childName) {\n    PlayerContextFilter.displayName = `PlayerContextFilter(${childName})`;\n  }\n  return PlayerContextFilter;\n}\n\nexport default playerContextFilter;\n","import PlayerContextProvider from './PlayerContextProvider';\nimport PlayerContext from './PlayerContext';\nimport PlayerContextGroup from './PlayerContextGroup';\nimport FullscreenContextProvider from './FullscreenContextProvider';\nimport FullscreenContext from './FullscreenContext';\nimport playerContextFilter from './playerContextFilter';\nimport * as PlayerPropTypes from './PlayerPropTypes';\n\nexport { PlayerContextProvider };\nexport const PlayerContextConsumer = PlayerContext.Consumer;\nexport { PlayerContextGroup };\nexport { FullscreenContextProvider };\nexport const FullscreenContextConsumer = FullscreenContext.Consumer;\nexport { playerContextFilter };\nexport { PlayerPropTypes };\n\n// undocumented exports\nexport * from './utils/console';\nexport {\n  default as convertToNumberWithinIntervalBounds\n} from './utils/convertToNumberWithinIntervalBounds';\nexport { default as isPlaylistValid } from './utils/isPlaylistValid';\nexport { repeatStrategyOptions } from './constants';\n"],"sourceRoot":""}